; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Work\daspirum\Source\src\SQLite.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$addressof@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back
PUBLIC	??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?get_allocator@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_allocator
PUBLIC	?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Make_iter
PUBLIC	??$move@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
PUBLIC	??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00@Z ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
PUBLIC	?erase@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::erase
PUBLIC	?clear@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::clear
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator!=
PUBLIC	??$?8V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z ; std::operator==<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?9V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z ; std::operator!=<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Assign_rv@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV12@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Assign_rv
PUBLIC	??$forward@V?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?_Inside@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBE_NPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Inside
PUBLIC	??$_Allocate@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@IPAV10@@Z ; std::_Allocate<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?allocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocate
PUBLIC	??$_Val_type@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@@Z ; std::_Val_type<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
PUBLIC	?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
PUBLIC	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Uninitialized_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Uninitialized_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$_Umove@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Umove<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
PUBLIC	?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::reserve
PUBLIC	?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::size
PUBLIC	?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::capacity
PUBLIC	?max_size@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::max_size
PUBLIC	?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::max_size
PUBLIC	?_Grow_to@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Grow_to
PUBLIC	?_Xlen@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Xlen
PUBLIC	?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve
PUBLIC	?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range
PUBLIC	??$addressof@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
PUBLIC	??$forward@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
PUBLIC	??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::_Construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
PUBLIC	?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
PUBLIC	??$forward@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
PUBLIC	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
PUBLIC	?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back
PUBLIC	??0admin@Database@@QAE@XZ			; Database::admin::admin
PUBLIC	??0?$allocator@Uadmin@Database@@@std@@QAE@XZ	; std::allocator<Database::admin>::allocator<Database::admin>
PUBLIC	??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >
PUBLIC	??0?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@V?$allocator@Uadmin@Database@@@1@@Z ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::_Vector_val<Database::admin,std::allocator<Database::admin> >
PUBLIC	??$addressof@Uadmin@Database@@@std@@YAPAUadmin@Database@@AAU12@@Z ; std::addressof<Database::admin>
PUBLIC	?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back
PUBLIC	??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::admin>::allocator<Database::admin>
PUBLIC	?get_allocator@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBE?AV?$allocator@Uadmin@Database@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::get_allocator
PUBLIC	??$?8Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z ; std::operator==<Database::admin,Database::admin>
PUBLIC	??$?9Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z ; std::operator!=<Database::admin,Database::admin>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEAAUadmin@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
PUBLIC	?_Assign_rv@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Assign_rv
PUBLIC	??$forward@V?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::admin,std::allocator<Database::admin> > >
PUBLIC	??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >
PUBLIC	?_Inside@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBE_NPBUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Inside
PUBLIC	??$_Allocate@Uadmin@Database@@@std@@YAPAUadmin@Database@@IPAU12@@Z ; std::_Allocate<Database::admin>
PUBLIC	?allocate@?$allocator@Uadmin@Database@@@std@@QAEPAUadmin@Database@@I@Z ; std::allocator<Database::admin>::allocate
PUBLIC	??$_Val_type@PAUadmin@Database@@@std@@YAPAUadmin@Database@@PAU12@@Z ; std::_Val_type<Database::admin *>
PUBLIC	?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z ; std::allocator<Database::admin>::construct
PUBLIC	??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin>
PUBLIC	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin>
PUBLIC	??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::admin *,Database::admin *,std::allocator<Database::admin>,Database::admin>
PUBLIC	??$_Uninitialized_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@@Z ; std::_Uninitialized_move<Database::admin *,Database::admin *,std::allocator<Database::admin> >
PUBLIC	??$_Umove@PAUadmin@Database@@@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEPAUadmin@Database@@PAU23@00@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Umove<Database::admin *>
PUBLIC	?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::reserve
PUBLIC	?size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::size
PUBLIC	?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::capacity
PUBLIC	?max_size@?$allocator@Uadmin@Database@@@std@@QBEIXZ ; std::allocator<Database::admin>::max_size
PUBLIC	?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::max_size
PUBLIC	?_Grow_to@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::_Xlen
PUBLIC	?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range
PUBLIC	??$addressof@$$CBUadmin@Database@@@std@@YAPBUadmin@Database@@ABU12@@Z ; std::addressof<Database::admin const >
PUBLIC	??$forward@AAUadmin@Database@@@std@@YAAAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin &>
PUBLIC	??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z ; std::allocator<Database::admin>::construct<Database::admin &>
PUBLIC	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@AAU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin &>
PUBLIC	??0admin@Database@@QAE@ABU01@@Z			; Database::admin::admin
PUBLIC	??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z ; std::_Construct<Database::admin,Database::admin const &>
PUBLIC	?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@ABU34@@Z ; std::allocator<Database::admin>::construct
PUBLIC	??$forward@ABUadmin@Database@@@std@@YAABUadmin@Database@@ABU12@@Z ; std::forward<Database::admin const &>
PUBLIC	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@ABU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin const &>
PUBLIC	?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXABUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back
PUBLIC	??0ban@Database@@QAE@XZ				; Database::ban::ban
PUBLIC	??0?$allocator@Uban@Database@@@std@@QAE@XZ	; std::allocator<Database::ban>::allocator<Database::ban>
PUBLIC	??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >
PUBLIC	??0?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@V?$allocator@Uban@Database@@@1@@Z ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::_Vector_val<Database::ban,std::allocator<Database::ban> >
PUBLIC	??$addressof@Uban@Database@@@std@@YAPAUban@Database@@AAU12@@Z ; std::addressof<Database::ban>
PUBLIC	?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back
PUBLIC	??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::ban>::allocator<Database::ban>
PUBLIC	?get_allocator@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBE?AV?$allocator@Uban@Database@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::get_allocator
PUBLIC	??$?8Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z ; std::operator==<Database::ban,Database::ban>
PUBLIC	??$?9Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z ; std::operator!=<Database::ban,Database::ban>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEAAUban@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
PUBLIC	?_Assign_rv@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Assign_rv
PUBLIC	??$forward@V?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::ban,std::allocator<Database::ban> > >
PUBLIC	??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >
PUBLIC	?_Inside@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBE_NPBUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Inside
PUBLIC	??$_Allocate@Uban@Database@@@std@@YAPAUban@Database@@IPAU12@@Z ; std::_Allocate<Database::ban>
PUBLIC	?allocate@?$allocator@Uban@Database@@@std@@QAEPAUban@Database@@I@Z ; std::allocator<Database::ban>::allocate
PUBLIC	??$_Val_type@PAUban@Database@@@std@@YAPAUban@Database@@PAU12@@Z ; std::_Val_type<Database::ban *>
PUBLIC	?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z ; std::allocator<Database::ban>::construct
PUBLIC	??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ; std::forward<Database::ban>
PUBLIC	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban>
PUBLIC	??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::ban *,Database::ban *,std::allocator<Database::ban>,Database::ban>
PUBLIC	??$_Uninitialized_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@@Z ; std::_Uninitialized_move<Database::ban *,Database::ban *,std::allocator<Database::ban> >
PUBLIC	??$_Umove@PAUban@Database@@@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEPAUban@Database@@PAU23@00@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Umove<Database::ban *>
PUBLIC	?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::reserve
PUBLIC	?size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::size
PUBLIC	?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::capacity
PUBLIC	?max_size@?$allocator@Uban@Database@@@std@@QBEIXZ ; std::allocator<Database::ban>::max_size
PUBLIC	?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::max_size
PUBLIC	?_Grow_to@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::_Xlen
PUBLIC	?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range
PUBLIC	??$addressof@$$CBUban@Database@@@std@@YAPBUban@Database@@ABU12@@Z ; std::addressof<Database::ban const >
PUBLIC	??$forward@AAUban@Database@@@std@@YAAAUban@Database@@AAU12@@Z ; std::forward<Database::ban &>
PUBLIC	??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z ; std::allocator<Database::ban>::construct<Database::ban &>
PUBLIC	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@AAU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban &>
PUBLIC	??0ban@Database@@QAE@ABU01@@Z			; Database::ban::ban
PUBLIC	??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z ; std::_Construct<Database::ban,Database::ban const &>
PUBLIC	?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@ABU34@@Z ; std::allocator<Database::ban>::construct
PUBLIC	??$forward@ABUban@Database@@@std@@YAABUban@Database@@ABU12@@Z ; std::forward<Database::ban const &>
PUBLIC	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@ABU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban const &>
PUBLIC	?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXABUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back
PUBLIC	??0struct_log@Database@@QAE@XZ			; Database::struct_log::struct_log
PUBLIC	??0?$allocator@Ustruct_log@Database@@@std@@QAE@XZ ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
PUBLIC	??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >
PUBLIC	??0?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_log@Database@@@1@@Z ; std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >
PUBLIC	??$addressof@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@AAU12@@Z ; std::addressof<Database::struct_log>
PUBLIC	?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back
PUBLIC	??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
PUBLIC	?get_allocator@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_log@Database@@@2@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::get_allocator
PUBLIC	??$?8Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z ; std::operator==<Database::struct_log,Database::struct_log>
PUBLIC	??$?9Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z ; std::operator!=<Database::struct_log,Database::struct_log>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBEAAUstruct_log@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator++
PUBLIC	?_Assign_rv@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Assign_rv
PUBLIC	??$forward@V?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::struct_log,std::allocator<Database::struct_log> > >
PUBLIC	??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >
PUBLIC	?_Inside@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBE_NPBUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Inside
PUBLIC	??$_Allocate@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@IPAU12@@Z ; std::_Allocate<Database::struct_log>
PUBLIC	?allocate@?$allocator@Ustruct_log@Database@@@std@@QAEPAUstruct_log@Database@@I@Z ; std::allocator<Database::struct_log>::allocate
PUBLIC	??$_Val_type@PAUstruct_log@Database@@@std@@YAPAUstruct_log@Database@@PAU12@@Z ; std::_Val_type<Database::struct_log *>
PUBLIC	?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z ; std::allocator<Database::struct_log>::construct
PUBLIC	??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log>
PUBLIC	??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log>,Database::struct_log>
PUBLIC	??$_Uninitialized_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@@Z ; std::_Uninitialized_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log> >
PUBLIC	??$_Umove@PAUstruct_log@Database@@@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEPAUstruct_log@Database@@PAU23@00@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Umove<Database::struct_log *>
PUBLIC	?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::reserve
PUBLIC	?size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::size
PUBLIC	?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::capacity
PUBLIC	?max_size@?$allocator@Ustruct_log@Database@@@std@@QBEIXZ ; std::allocator<Database::struct_log>::max_size
PUBLIC	?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::max_size
PUBLIC	?_Grow_to@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Xlen
PUBLIC	?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range
PUBLIC	??$addressof@$$CBUstruct_log@Database@@@std@@YAPBUstruct_log@Database@@ABU12@@Z ; std::addressof<Database::struct_log const >
PUBLIC	??$forward@AAUstruct_log@Database@@@std@@YAAAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log &>
PUBLIC	??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z ; std::allocator<Database::struct_log>::construct<Database::struct_log &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log &>
PUBLIC	??0struct_log@Database@@QAE@ABU01@@Z		; Database::struct_log::struct_log
PUBLIC	??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z ; std::_Construct<Database::struct_log,Database::struct_log const &>
PUBLIC	?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@ABU34@@Z ; std::allocator<Database::struct_log>::construct
PUBLIC	??$forward@ABUstruct_log@Database@@@std@@YAABUstruct_log@Database@@ABU12@@Z ; std::forward<Database::struct_log const &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log const &>
PUBLIC	?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXABUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back
PUBLIC	??0?$allocator@Umessage@Database@@@std@@QAE@XZ	; std::allocator<Database::message>::allocator<Database::message>
PUBLIC	??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
PUBLIC	??0?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@V?$allocator@Umessage@Database@@@1@@Z ; std::_Vector_val<Database::message,std::allocator<Database::message> >::_Vector_val<Database::message,std::allocator<Database::message> >
PUBLIC	??$addressof@Umessage@Database@@@std@@YAPAUmessage@Database@@AAU12@@Z ; std::addressof<Database::message>
PUBLIC	?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::push_back
PUBLIC	??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::message>::allocator<Database::message>
PUBLIC	?get_allocator@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBE?AV?$allocator@Umessage@Database@@@2@XZ ; std::vector<Database::message,std::allocator<Database::message> >::get_allocator
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBEAAUmessage@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator++
PUBLIC	??$?8Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z ; std::operator==<Database::message,Database::message>
PUBLIC	??$?9Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z ; std::operator!=<Database::message,Database::message>
PUBLIC	?_Assign_rv@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Assign_rv
PUBLIC	??$forward@V?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::message,std::allocator<Database::message> > >
PUBLIC	??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
PUBLIC	?_Inside@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBE_NPBUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Inside
PUBLIC	??$_Allocate@Umessage@Database@@@std@@YAPAUmessage@Database@@IPAU12@@Z ; std::_Allocate<Database::message>
PUBLIC	?allocate@?$allocator@Umessage@Database@@@std@@QAEPAUmessage@Database@@I@Z ; std::allocator<Database::message>::allocate
PUBLIC	??$_Val_type@PAUmessage@Database@@@std@@YAPAUmessage@Database@@PAU12@@Z ; std::_Val_type<Database::message *>
PUBLIC	?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z ; std::allocator<Database::message>::construct
PUBLIC	??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ; std::forward<Database::message>
PUBLIC	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message>
PUBLIC	??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::message *,Database::message *,std::allocator<Database::message>,Database::message>
PUBLIC	??$_Uninitialized_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@@Z ; std::_Uninitialized_move<Database::message *,Database::message *,std::allocator<Database::message> >
PUBLIC	??$_Umove@PAUmessage@Database@@@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEPAUmessage@Database@@PAU23@00@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Umove<Database::message *>
PUBLIC	?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::reserve
PUBLIC	?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::capacity
PUBLIC	?max_size@?$allocator@Umessage@Database@@@std@@QBEIXZ ; std::allocator<Database::message>::max_size
PUBLIC	?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::max_size
PUBLIC	?_Grow_to@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::message,std::allocator<Database::message> >::_Xlen
PUBLIC	?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range
PUBLIC	??$addressof@$$CBUmessage@Database@@@std@@YAPBUmessage@Database@@ABU12@@Z ; std::addressof<Database::message const >
PUBLIC	??$forward@AAUmessage@Database@@@std@@YAAAUmessage@Database@@AAU12@@Z ; std::forward<Database::message &>
PUBLIC	??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z ; std::allocator<Database::message>::construct<Database::message &>
PUBLIC	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@AAU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message &>
PUBLIC	??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z ; std::_Construct<Database::message,Database::message const &>
PUBLIC	?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@ABU34@@Z ; std::allocator<Database::message>::construct
PUBLIC	??$forward@ABUmessage@Database@@@std@@YAABUmessage@Database@@ABU12@@Z ; std::forward<Database::message const &>
PUBLIC	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@ABU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message const &>
PUBLIC	?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXABUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::push_back
PUBLIC	??0message@Database@@QAE@XZ			; Database::message::message
PUBLIC	??0message@Database@@QAE@ABU01@@Z		; Database::message::message
PUBLIC	?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::size
PUBLIC	??A?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEAAUmessage@Database@@I@Z ; std::vector<Database::message,std::allocator<Database::message> >::operator[]
PUBLIC	??0struct_chatresponse@Database@@QAE@XZ		; Database::struct_chatresponse::struct_chatresponse
PUBLIC	??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@XZ ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
PUBLIC	??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
PUBLIC	??0?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_chatresponse@Database@@@1@@Z ; std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
PUBLIC	??$addressof@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@AAU12@@Z ; std::addressof<Database::struct_chatresponse>
PUBLIC	?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back
PUBLIC	??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
PUBLIC	?get_allocator@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_chatresponse@Database@@@2@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::get_allocator
PUBLIC	??$?8Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z ; std::operator==<Database::struct_chatresponse,Database::struct_chatresponse>
PUBLIC	??$?9Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z ; std::operator!=<Database::struct_chatresponse,Database::struct_chatresponse>
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBEAAUstruct_chatresponse@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator++
PUBLIC	?_Assign_rv@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Assign_rv
PUBLIC	??$forward@V?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >
PUBLIC	??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
PUBLIC	?_Inside@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBE_NPBUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Inside
PUBLIC	??$_Allocate@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@IPAU12@@Z ; std::_Allocate<Database::struct_chatresponse>
PUBLIC	?allocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEPAUstruct_chatresponse@Database@@I@Z ; std::allocator<Database::struct_chatresponse>::allocate
PUBLIC	??$_Val_type@PAUstruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@@Z ; std::_Val_type<Database::struct_chatresponse *>
PUBLIC	?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z ; std::allocator<Database::struct_chatresponse>::construct
PUBLIC	??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse>
PUBLIC	??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse>
PUBLIC	??$_Uninitialized_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@@Z ; std::_Uninitialized_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse> >
PUBLIC	??$_Umove@PAUstruct_chatresponse@Database@@@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEPAUstruct_chatresponse@Database@@PAU23@00@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Umove<Database::struct_chatresponse *>
PUBLIC	?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::reserve
PUBLIC	?size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::size
PUBLIC	?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::capacity
PUBLIC	?max_size@?$allocator@Ustruct_chatresponse@Database@@@std@@QBEIXZ ; std::allocator<Database::struct_chatresponse>::max_size
PUBLIC	?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::max_size
PUBLIC	?_Grow_to@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Xlen
PUBLIC	?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range
PUBLIC	??$addressof@$$CBUstruct_chatresponse@Database@@@std@@YAPBUstruct_chatresponse@Database@@ABU12@@Z ; std::addressof<Database::struct_chatresponse const >
PUBLIC	??$forward@AAUstruct_chatresponse@Database@@@std@@YAAAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse &>
PUBLIC	??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z ; std::allocator<Database::struct_chatresponse>::construct<Database::struct_chatresponse &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse &>
PUBLIC	??0struct_chatresponse@Database@@QAE@ABU01@@Z	; Database::struct_chatresponse::struct_chatresponse
PUBLIC	??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z ; std::_Construct<Database::struct_chatresponse,Database::struct_chatresponse const &>
PUBLIC	?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@ABU34@@Z ; std::allocator<Database::struct_chatresponse>::construct
PUBLIC	??$forward@ABUstruct_chatresponse@Database@@@std@@YAABUstruct_chatresponse@Database@@ABU12@@Z ; std::forward<Database::struct_chatresponse const &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse const &>
PUBLIC	?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXABUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back
PUBLIC	?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
PUBLIC	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
PUBLIC	??0struct_settings@Database@@QAE@XZ		; Database::struct_settings::struct_settings
PUBLIC	??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
PUBLIC	??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::_Destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?destroy@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
PUBLIC	??$_Dest_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::_Dest_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
PUBLIC	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
PUBLIC	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Compat
PUBLIC	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAD@84
PUBLIC	__CT??_R0PAX@84
PUBLIC	__CTA2PAD
PUBLIC	__TI2CPAD
PUBLIC	__TI2PAD
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT __TI2PAD
xdata$x	SEGMENT
__TI2PAD DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT __TI2CPAD
xdata$x	SEGMENT
__TI2CPAD DD	01H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
xdata$x	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAX@8
_DATA	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
_DATA	ENDS
;	COMDAT ??_R0PAD@8
_DATA	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
$SG-81004 DB	00H
$SG-81041 DB	00H
$SG-81048 DB	00H
$SG-81051 DB	00H
$SG-81078 DB	00H
	ORG $+1
$SG-80963 DB	'not an error', 00H
	ORG $+3
$SG-80964 DB	' On Query ', 00H
	ORG $+1
$SG-80965 DB	'Database::SQLite::query', 00H
$SG-80966 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80967 DB	'''', 00H
	ORG $+2
$SG-80968 DB	''' WHERE eaID=''', 00H
	ORG $+1
$SG-80969 DB	'UPDATE admin SET n=''', 00H
	ORG $+3
$SG-80970 DB	'Database::SQLite::updateAdminName', 00H
	ORG $+2
$SG-80971 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80972 DB	'Unknown Error!', 00H
	ORG $+1
$SG-80973 DB	'Database::SQLite::updateAdminName', 00H
	ORG $+2
$SG-80974 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80975 DB	'''', 00H
	ORG $+2
$SG-80976 DB	''' WHERE eaID=''', 00H
	ORG $+1
$SG-80977 DB	'UPDATE admin SET pwd=''', 00H
	ORG $+1
$SG-80978 DB	'Database::SQLite::updateAdminPassword', 00H
	ORG $+2
$SG-80979 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80980 DB	'Unknown Error!', 00H
	ORG $+1
$SG-80981 DB	'Database::SQLite::updateAdminPassword', 00H
	ORG $+2
$SG-80982 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80983 DB	''' WHERE adminID=', 00H
	ORG $+3
$SG-80984 DB	'UPDATE admin SET payday=''', 00H
	ORG $+2
$SG-80985 DB	'Database::SQLite::updateAdminPayday', 00H
$SG-80986 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80987 DB	'Unknown Error!', 00H
	ORG $+1
$SG-80988 DB	'Database::SQLite::updateAdminPayday', 00H
$SG-80989 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80990 DB	' WHERE adminID=', 00H
$SG-80991 DB	'UPDATE admin SET l=', 00H
$SG-80992 DB	'Database::SQLite::updateAdminLevel', 00H
	ORG $+1
$SG-80993 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80994 DB	'Unknown Error!', 00H
	ORG $+1
$SG-80995 DB	'Database::SQLite::updateAdminLevel', 00H
	ORG $+1
$SG-80996 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-80997 DB	'''', 00H
	ORG $+2
$SG-80998 DB	'SELECT pwd FROM admin WHERE n=''', 00H
$SG-80999 DB	'Database::SQLite::getAdminPassword', 00H
	ORG $+1
$SG-81000 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81001 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81002 DB	'Database::SQLite::getAdminPassword', 00H
	ORG $+1
$SG-81003 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81005 DB	'''', 00H
	ORG $+2
$SG-81006 DB	'SELECT response FROM chatresponse WHERE command=''', 00H
	ORG $+2
$SG-81007 DB	'Database::SQLite::getChatResponse', 00H
	ORG $+2
$SG-81008 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81009 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81010 DB	'Database::SQLite::getChatResponse', 00H
	ORG $+2
$SG-81011 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81012 DB	'Unknown Command', 00H
$SG-81013 DB	'SELECT l FROM admin WHERE eaID=''', 00H
	ORG $+3
$SG-81014 DB	'''', 00H
	ORG $+2
$SG-81015 DB	' OR n=''', 00H
$SG-81016 DB	'''', 00H
	ORG $+2
$SG-81017 DB	'Database::SQLite::getAdminLevel', 00H
$SG-81018 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81019 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81020 DB	'Database::SQLite::getAdminLevel', 00H
$SG-81021 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81022 DB	'Unknown Error in getAdminLevel.', 00H
$SG-81023 DB	'SELECT adminID FROM admin WHERE eaID=''', 00H
	ORG $+1
$SG-81024 DB	' OR n=''', 00H
$SG-81025 DB	'Database::SQLite::getAdminID', 00H
	ORG $+3
$SG-81026 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81027 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81028 DB	'Database::SQLite::getAdminID', 00H
	ORG $+3
$SG-81029 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81030 DB	'Unknown Error in getAdminID.', 00H
	ORG $+3
$SG-81031 DB	'SELECT n FROM admin WHERE adminID=', 00H
	ORG $+1
$SG-81032 DB	'Database::SQLite::getAdminName', 00H
	ORG $+1
$SG-81033 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81034 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81035 DB	'Database::SQLite::getAdminName', 00H
	ORG $+1
$SG-81036 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81037 DB	'Unknown Error in getAdminName.', 00H
	ORG $+1
$SG-81038 DB	'Removed', 00H
$SG-81039 DB	'SELECT payday FROM admin WHERE adminID=', 00H
$SG-81040 DB	'NOW', 00H
$SG-81042 DB	'Database::SQLite::getAdminPayday', 00H
	ORG $+3
$SG-81043 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81044 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81045 DB	'Database::SQLite::getAdminPayday', 00H
	ORG $+3
$SG-81046 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81047 DB	'Unknown Error in getAdminName.', 00H
	ORG $+1
$SG-81049 DB	'SELECT * FROM admin', 00H
$SG-81050 DB	'NOW', 00H
$SG-81052 DB	'Database::SQLite::adminlist', 00H
$SG-81053 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81054 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81055 DB	'Database::SQLite::adminlist', 00H
$SG-81056 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81057 DB	'DELETE FROM admin WHERE adminID=', 00H
	ORG $+3
$SG-81058 DB	'Database::SQLite::deleteAdmin', 00H
	ORG $+2
$SG-81059 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81060 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81061 DB	'Database::SQLite::deleteAdmin', 00H
	ORG $+2
$SG-81062 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81063 DB	')', 00H
	ORG $+2
$SG-81064 DB	''',', 00H
	ORG $+1
$SG-81065 DB	''',''', 00H
$SG-81066 DB	'INSERT INTO admin (eaID,n,l) VALUES (''', 00H
	ORG $+1
$SG-81067 DB	'Database::SQLite::addAdmin', 00H
	ORG $+1
$SG-81068 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81069 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81070 DB	'Database::SQLite::addAdmin', 00H
	ORG $+1
$SG-81071 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81072 DB	'SELECT n FROM admin ORDER BY l DESC', 00H
$SG-81073 DB	'Database::SQLite::getMemberString', 00H
	ORG $+2
$SG-81074 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81075 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81076 DB	'Database::SQLite::getMemberString', 00H
	ORG $+2
$SG-81077 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81079 DB	'''', 00H
	ORG $+2
$SG-81080 DB	'SELECT banID FROM ban WHERE eaID=''', 00H
	ORG $+1
$SG-81081 DB	'Database::SQLite::isBanned', 00H
	ORG $+1
$SG-81082 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81083 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81084 DB	'Database::SQLite::isBanned', 00H
	ORG $+1
$SG-81085 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81086 DB	''')', 00H
	ORG $+1
$SG-81087 DB	'INSERT INTO ban (eaID) VALUES (''', 00H
	ORG $+3
$SG-81088 DB	'Database::SQLite::addBan', 00H
	ORG $+3
$SG-81089 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81090 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81091 DB	'Database::SQLite::addBan', 00H
	ORG $+3
$SG-81092 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81093 DB	''')', 00H
	ORG $+1
$SG-81094 DB	',''', 00H
	ORG $+1
$SG-81095 DB	''',', 00H
	ORG $+1
$SG-81096 DB	''',CURRENT_TIMESTAMP,''', 00H
	ORG $+2
$SG-81097 DB	'INSERT INTO ban (eaID,date,n,adminID,reason) VALUES (''', 00H
	ORG $+1
$SG-81098 DB	'Database::SQLite::addBan', 00H
	ORG $+3
$SG-81099 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81100 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81101 DB	'Database::SQLite::addBan', 00H
	ORG $+3
$SG-81102 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81103 DB	'DELETE FROM ban WHERE banID=', 00H
	ORG $+3
$SG-81104 DB	'Database::SQLite::unban', 00H
$SG-81105 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81106 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81107 DB	'Database::SQLite::unban', 00H
$SG-81108 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81109 DB	'SELECT * FROM ban', 00H
	ORG $+2
$SG-81110 DB	'Database::SQLite::banlist', 00H
	ORG $+2
$SG-81111 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81112 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81113 DB	'Database::SQLite::banlist', 00H
	ORG $+2
$SG-81114 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81115 DB	'SELECT name FROM whitelist UNION SELECT n FROM admin', 00H
	ORG $+3
$SG-81116 DB	'Database::SQLite::whitelist', 00H
$SG-81117 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81118 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81119 DB	'Database::SQLite::whitelist', 00H
$SG-81120 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81121 DB	''')', 00H
	ORG $+1
$SG-81122 DB	'INSERT INTO whitelist (name) VALUES (''', 00H
	ORG $+1
$SG-81123 DB	'Database::SQLite::addwhite', 00H
	ORG $+1
$SG-81124 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81125 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81126 DB	'Database::SQLite::addwhite', 00H
	ORG $+1
$SG-81127 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81128 DB	'''', 00H
	ORG $+2
$SG-81129 DB	'DELETE FROM whitelist WHERE name=''', 00H
	ORG $+1
$SG-81130 DB	'Database::SQLite::unwhite', 00H
	ORG $+2
$SG-81131 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81132 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81133 DB	'Database::SQLite::unwhite', 00H
	ORG $+2
$SG-81134 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81135 DB	''')', 00H
	ORG $+1
$SG-81136 DB	''',''', 00H
$SG-81137 DB	'INSERT INTO request (n,t) VALUES (''', 00H
$SG-81138 DB	'Database::SQLite::sendRequest', 00H
	ORG $+2
$SG-81139 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81140 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81141 DB	'Database::SQLite::sendRequest', 00H
	ORG $+2
$SG-81142 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81143 DB	''')', 00H
	ORG $+1
$SG-81144 DB	''',''', 00H
$SG-81145 DB	''',''', 00H
$SG-81146 DB	''',CURRENT_TIMESTAMP,''', 00H
	ORG $+2
$SG-81147 DB	'INSERT INTO log (n,date,txt,type,stype) VALUES (''', 00H
	ORG $+2
$SG-81148 DB	'Database::SQLite::log', 00H
	ORG $+2
$SG-81149 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81150 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81151 DB	'Database::SQLite::log', 00H
	ORG $+2
$SG-81152 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81154 DB	'Database::SQLite::logList', 00H
	ORG $+2
$SG-81153 DB	'SELECT logID,date,n,txt,type,stype FROM log ORDER BY log'
	DB	'ID DESC LIMIT ', 00H
	ORG $+1
$SG-81155 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81156 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81157 DB	'Database::SQLite::logList', 00H
	ORG $+2
$SG-81158 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81159 DB	'#000000', 00H
$SG-81160 DB	'Updating Adv. Messages', 00H
	ORG $+1
$SG-81161 DB	'SELECT m,y FROM messages', 00H
	ORG $+3
$SG-81162 DB	'Database::SQLite::updateAdvMessages', 00H
$SG-81163 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81164 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81165 DB	'Database::SQLite::updateAdvMessages', 00H
$SG-81166 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81167 DB	'DELETE FROM messages WHERE advID=', 00H
	ORG $+2
$SG-81168 DB	'Database::SQLite::deleteAdvMessage', 00H
	ORG $+1
$SG-81169 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81170 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81171 DB	'Database::SQLite::deleteAdvMessage', 00H
	ORG $+1
$SG-81172 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81173 DB	')', 00H
	ORG $+2
$SG-81174 DB	''',', 00H
	ORG $+1
$SG-81175 DB	'INSERT INTO messages (m,y) VALUES (''', 00H
	ORG $+3
$SG-81176 DB	'Database::SQLite::addAdvMessage', 00H
$SG-81177 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81178 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81179 DB	'Database::SQLite::addAdvMessage', 00H
$SG-81180 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81181 DB	'SELECT * FROM messages', 00H
	ORG $+1
$SG-81182 DB	'Database::SQLite::advlist', 00H
	ORG $+2
$SG-81183 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81184 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81185 DB	'Database::SQLite::advlist', 00H
	ORG $+2
$SG-81186 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81187 DB	'www.exp-clan.com', 00H
	ORG $+3
$SG-81188 DB	'SELECT apikey FROM nma', 00H
	ORG $+1
$SG-81189 DB	'Database::SQLite::nmalist', 00H
	ORG $+2
$SG-81190 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81191 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81192 DB	'Database::SQLite::nmalist', 00H
	ORG $+2
$SG-81193 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81194 DB	'''', 00H
	ORG $+2
$SG-81195 DB	'DELETE FROM nma WHERE apikey=''', 00H
	ORG $+1
$SG-81196 DB	'Database::SQLite::deleteNmaKey', 00H
	ORG $+1
$SG-81197 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81198 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81199 DB	'Database::SQLite::deleteNmaKey', 00H
	ORG $+1
$SG-81200 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81201 DB	''')', 00H
	ORG $+1
$SG-81202 DB	'INSERT INTO mail (apikey) VALUES (''', 00H
$SG-81203 DB	'Database::SQLite::addNmaKey', 00H
$SG-81204 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81205 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81206 DB	'Database::SQLite::addNmaKey', 00H
$SG-81207 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81208 DB	'SELECT addy FROM mail', 00H
	ORG $+2
$SG-81209 DB	'Database::SQLite::mailReceiverList', 00H
	ORG $+1
$SG-81210 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81211 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81212 DB	'Database::SQLite::mailReceiverList', 00H
	ORG $+1
$SG-81213 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81214 DB	'''', 00H
	ORG $+2
$SG-81215 DB	'DELETE FROM mail WHERE addy=''', 00H
	ORG $+2
$SG-81216 DB	'Database::SQLite::deleteMailReceiver', 00H
	ORG $+3
$SG-81217 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81218 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81219 DB	'Database::SQLite::deleteMailReceiver', 00H
	ORG $+3
$SG-81220 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81221 DB	''')', 00H
	ORG $+1
$SG-81222 DB	'INSERT INTO mail (addy) VALUES (''', 00H
	ORG $+2
$SG-81223 DB	'Database::SQLite::addMailReceiver', 00H
	ORG $+2
$SG-81224 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81225 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81226 DB	'Database::SQLite::addMailReceiver', 00H
	ORG $+2
$SG-81227 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81228 DB	'SELECT chatresponseID,command,response FROM chatresponse'
	DB	00H
	ORG $+3
$SG-81229 DB	'Database::SQLite::chatResponseList', 00H
	ORG $+1
$SG-81230 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81231 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81232 DB	'Database::SQLite::chatResponseList', 00H
	ORG $+1
$SG-81233 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81234 DB	'SELECT command FROM chatresponse', 00H
	ORG $+3
$SG-81235 DB	'Database::SQLite::chatResponseListAsString', 00H
	ORG $+1
$SG-81236 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81237 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81238 DB	'Database::SQLite::chatResponseListAsString', 00H
	ORG $+1
$SG-81239 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81240 DB	'DELETE FROM chatresponse WHERE chatresponseID=', 00H
	ORG $+1
$SG-81241 DB	'Database::SQLite::deleteChatResponse', 00H
	ORG $+3
$SG-81242 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81243 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81244 DB	'Database::SQLite::deleteChatResponse', 00H
	ORG $+3
$SG-81245 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81246 DB	''')', 00H
	ORG $+1
$SG-81247 DB	''',''', 00H
$SG-81248 DB	'INSERT INTO chatresponse (command,response) VALUES (''', 00H
	ORG $+2
$SG-81249 DB	'Database::SQLite::addChatResponse', 00H
	ORG $+2
$SG-81250 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81251 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81252 DB	'Database::SQLite::addChatResponse', 00H
	ORG $+2
$SG-81253 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81254 DB	'''', 00H
	ORG $+2
$SG-81255 DB	'=''', 00H
	ORG $+1
$SG-81256 DB	'UPDATE settings SET ', 00H
	ORG $+3
$SG-81257 DB	'Database::SQLite::updateServerSetting', 00H
	ORG $+2
$SG-81258 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81259 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81260 DB	'Database::SQLite::updateServerSetting', 00H
	ORG $+2
$SG-81261 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81262 DB	'SELECT name FROM restrictedweapons', 00H
	ORG $+1
$SG-81263 DB	'Database::SQLite::restrictedWeaponsList', 00H
$SG-81264 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81265 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81266 DB	'Database::SQLite::restrictedWeaponsList', 00H
$SG-81267 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81268 DB	'''', 00H
	ORG $+2
$SG-81269 DB	'DELETE FROM restrictedweapons WHERE name=''', 00H
	ORG $+1
$SG-81270 DB	'Database::SQLite::deleteRestrictedWeapon', 00H
	ORG $+3
$SG-81271 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81272 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81273 DB	'Database::SQLite::deleteRestrictedWeapon', 00H
	ORG $+3
$SG-81274 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81275 DB	''')', 00H
	ORG $+1
$SG-81276 DB	'INSERT INTO restrictedweapons (name) VALUES (''', 00H
	ORG $+1
$SG-81277 DB	'Database::SQLite::addRestrictedWeapon', 00H
	ORG $+2
$SG-81278 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81279 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81280 DB	'Database::SQLite::addRestrictedWeapon', 00H
	ORG $+2
$SG-81281 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81282 DB	'SELECT * FROM settings', 00H
	ORG $+1
$SG-81283 DB	'Database::SQLite::getServerSettings', 00H
$SG-81284 DB	'..\src\SQLite.cpp', 00H
	ORG $+2
$SG-81285 DB	'Unknown Error!', 00H
	ORG $+1
$SG-81286 DB	'Database::SQLite::getServerSettings', 00H
$SG-81287 DB	'..\src\SQLite.cpp', 00H
; Function compile flags: /Odtp
;	COMDAT ??$move@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z PROC ; std::move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ENDP ; std::move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAUstruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUstruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@@Z PROC ; std::_Val_type<Database::struct_chatresponse *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAUstruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@@Z ENDP ; std::_Val_type<Database::struct_chatresponse *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAUstruct_log@Database@@@std@@YAPAUstruct_log@Database@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUstruct_log@Database@@@std@@YAPAUstruct_log@Database@@PAU12@@Z PROC ; std::_Val_type<Database::struct_log *>, COMDAT
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAUstruct_log@Database@@@std@@YAPAUstruct_log@Database@@PAU12@@Z ENDP ; std::_Val_type<Database::struct_log *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAUban@Database@@@std@@YAPAUban@Database@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUban@Database@@@std@@YAPAUban@Database@@PAU12@@Z PROC ; std::_Val_type<Database::ban *>, COMDAT
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAUban@Database@@@std@@YAPAUban@Database@@PAU12@@Z ENDP ; std::_Val_type<Database::ban *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAUadmin@Database@@@std@@YAPAUadmin@Database@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUadmin@Database@@@std@@YAPAUadmin@Database@@PAU12@@Z PROC ; std::_Val_type<Database::admin *>, COMDAT
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAUadmin@Database@@@std@@YAPAUadmin@Database@@PAU12@@Z ENDP ; std::_Val_type<Database::admin *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@@Z PROC ; std::_Val_type<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>, COMDAT
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAUmessage@Database@@@std@@YAPAUmessage@Database@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUmessage@Database@@@std@@YAPAUmessage@Database@@PAU12@@Z PROC ; std::_Val_type<Database::message *>, COMDAT
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAUmessage@Database@@@std@@YAPAUmessage@Database@@PAU12@@Z ENDP ; std::_Val_type<Database::message *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z PROC ; std::_Ptr_cat<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z ENDP ; std::_Ptr_cat<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z PROC ; std::operator==<Database::struct_chatresponse,Database::struct_chatresponse>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z ENDP ; std::operator==<Database::struct_chatresponse,Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z PROC ; std::operator==<Database::struct_log,Database::struct_log>, COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z ENDP ; std::operator==<Database::struct_log,Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z PROC ; std::operator==<Database::ban,Database::ban>, COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z ENDP ; std::operator==<Database::ban,Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z PROC ; std::operator==<Database::admin,Database::admin>, COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z ENDP ; std::operator==<Database::admin,Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z PROC ; std::operator==<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z ENDP ; std::operator==<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z PROC ; std::operator==<Database::message,Database::message>, COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z ENDP ; std::operator==<Database::message,Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUstruct_chatresponse@Database@@@std@@YAABUstruct_chatresponse@Database@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUstruct_chatresponse@Database@@@std@@YAABUstruct_chatresponse@Database@@ABU12@@Z PROC ; std::forward<Database::struct_chatresponse const &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUstruct_chatresponse@Database@@@std@@YAABUstruct_chatresponse@Database@@ABU12@@Z ENDP ; std::forward<Database::struct_chatresponse const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAUstruct_chatresponse@Database@@@std@@YAAAUstruct_chatresponse@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUstruct_chatresponse@Database@@@std@@YAAAUstruct_chatresponse@Database@@AAU12@@Z PROC ; std::forward<Database::struct_chatresponse &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUstruct_chatresponse@Database@@@std@@YAAAUstruct_chatresponse@Database@@AAU12@@Z ENDP ; std::forward<Database::struct_chatresponse &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUstruct_log@Database@@@std@@YAABUstruct_log@Database@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUstruct_log@Database@@@std@@YAABUstruct_log@Database@@ABU12@@Z PROC ; std::forward<Database::struct_log const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUstruct_log@Database@@@std@@YAABUstruct_log@Database@@ABU12@@Z ENDP ; std::forward<Database::struct_log const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAUstruct_log@Database@@@std@@YAAAUstruct_log@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUstruct_log@Database@@@std@@YAAAUstruct_log@Database@@AAU12@@Z PROC ; std::forward<Database::struct_log &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUstruct_log@Database@@@std@@YAAAUstruct_log@Database@@AAU12@@Z ENDP ; std::forward<Database::struct_log &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUban@Database@@@std@@YAABUban@Database@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUban@Database@@@std@@YAABUban@Database@@ABU12@@Z PROC ; std::forward<Database::ban const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUban@Database@@@std@@YAABUban@Database@@ABU12@@Z ENDP ; std::forward<Database::ban const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAUban@Database@@@std@@YAAAUban@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUban@Database@@@std@@YAAAUban@Database@@AAU12@@Z PROC ; std::forward<Database::ban &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUban@Database@@@std@@YAAAUban@Database@@AAU12@@Z ENDP ; std::forward<Database::ban &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUadmin@Database@@@std@@YAABUadmin@Database@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUadmin@Database@@@std@@YAABUadmin@Database@@ABU12@@Z PROC ; std::forward<Database::admin const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUadmin@Database@@@std@@YAABUadmin@Database@@ABU12@@Z ENDP ; std::forward<Database::admin const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAUadmin@Database@@@std@@YAAAUadmin@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUadmin@Database@@@std@@YAAAUadmin@Database@@AAU12@@Z PROC ; std::forward<Database::admin &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUadmin@Database@@@std@@YAAAUadmin@Database@@AAU12@@Z ENDP ; std::forward<Database::admin &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z PROC ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ENDP ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z PROC ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ENDP ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUmessage@Database@@@std@@YAABUmessage@Database@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUmessage@Database@@@std@@YAABUmessage@Database@@ABU12@@Z PROC ; std::forward<Database::message const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUmessage@Database@@@std@@YAABUmessage@Database@@ABU12@@Z ENDP ; std::forward<Database::message const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAUmessage@Database@@@std@@YAAAUmessage@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUmessage@Database@@@std@@YAAAUmessage@Database@@AAU12@@Z PROC ; std::forward<Database::message &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUmessage@Database@@@std@@YAAAUmessage@Database@@AAU12@@Z ENDP ; std::forward<Database::message &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@AAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@AAU12@@Z PROC ; std::addressof<Database::struct_chatresponse>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@AAU12@@Z ENDP ; std::addressof<Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@AAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@AAU12@@Z PROC ; std::addressof<Database::struct_log>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@AAU12@@Z ENDP ; std::addressof<Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@Uban@Database@@@std@@YAPAUban@Database@@AAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Uban@Database@@@std@@YAPAUban@Database@@AAU12@@Z PROC ; std::addressof<Database::ban>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@Uban@Database@@@std@@YAPAUban@Database@@AAU12@@Z ENDP ; std::addressof<Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@Uadmin@Database@@@std@@YAPAUadmin@Database@@AAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Uadmin@Database@@@std@@YAPAUadmin@Database@@AAU12@@Z PROC ; std::addressof<Database::admin>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@Uadmin@Database@@@std@@YAPAUadmin@Database@@AAU12@@Z ENDP ; std::addressof<Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z PROC ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ENDP ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@Umessage@Database@@@std@@YAPAUmessage@Database@@AAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Umessage@Database@@@std@@YAPAUmessage@Database@@AAU12@@Z PROC ; std::addressof<Database::message>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@Umessage@Database@@@std@@YAPAUmessage@Database@@AAU12@@Z ENDP ; std::addressof<Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z PROC ; std::forward<Database::struct_chatresponse>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ENDP ; std::forward<Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z PROC ; std::operator!=<Database::struct_chatresponse,Database::struct_chatresponse>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z ; std::operator==<Database::struct_chatresponse,Database::struct_chatresponse>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z ENDP ; std::operator!=<Database::struct_chatresponse,Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z PROC ; std::forward<Database::struct_log>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ENDP ; std::forward<Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z PROC ; std::operator!=<Database::struct_log,Database::struct_log>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z ; std::operator==<Database::struct_log,Database::struct_log>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z ENDP ; std::operator!=<Database::struct_log,Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z PROC ; std::forward<Database::ban>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ENDP ; std::forward<Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z PROC ; std::operator!=<Database::ban,Database::ban>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z ; std::operator==<Database::ban,Database::ban>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z ENDP ; std::operator!=<Database::ban,Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z PROC ; std::forward<Database::admin>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ENDP ; std::forward<Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z PROC ; std::operator!=<Database::admin,Database::admin>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z ; std::operator==<Database::admin,Database::admin>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z ENDP ; std::operator!=<Database::admin,Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z PROC ; std::operator!=<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z ; std::operator==<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z ENDP ; std::operator!=<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z PROC ; std::forward<Database::message>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ENDP ; std::forward<Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z PROC ; std::operator!=<Database::message,Database::message>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z ; std::operator==<Database::message,Database::message>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z ENDP ; std::operator!=<Database::message,Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBUstruct_chatresponse@Database@@@std@@YAPBUstruct_chatresponse@Database@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUstruct_chatresponse@Database@@@std@@YAPBUstruct_chatresponse@Database@@ABU12@@Z PROC ; std::addressof<Database::struct_chatresponse const >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUstruct_chatresponse@Database@@@std@@YAPBUstruct_chatresponse@Database@@ABU12@@Z ENDP ; std::addressof<Database::struct_chatresponse const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBUstruct_log@Database@@@std@@YAPBUstruct_log@Database@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUstruct_log@Database@@@std@@YAPBUstruct_log@Database@@ABU12@@Z PROC ; std::addressof<Database::struct_log const >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUstruct_log@Database@@@std@@YAPBUstruct_log@Database@@ABU12@@Z ENDP ; std::addressof<Database::struct_log const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<Database::struct_log,std::allocator<Database::struct_log> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<Database::struct_log,std::allocator<Database::struct_log> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBUban@Database@@@std@@YAPBUban@Database@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUban@Database@@@std@@YAPBUban@Database@@ABU12@@Z PROC ; std::addressof<Database::ban const >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUban@Database@@@std@@YAPBUban@Database@@ABU12@@Z ENDP ; std::addressof<Database::ban const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<Database::ban,std::allocator<Database::ban> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<Database::ban,std::allocator<Database::ban> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBUadmin@Database@@@std@@YAPBUadmin@Database@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUadmin@Database@@@std@@YAPBUadmin@Database@@ABU12@@Z PROC ; std::addressof<Database::admin const >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUadmin@Database@@@std@@YAPBUadmin@Database@@ABU12@@Z ENDP ; std::addressof<Database::admin const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<Database::admin,std::allocator<Database::admin> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<Database::admin,std::allocator<Database::admin> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z PROC ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ENDP ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@0@AAV10@@Z PROC ; std::forward<std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@0@AAV10@@Z ENDP ; std::forward<std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBUmessage@Database@@@std@@YAPBUmessage@Database@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUmessage@Database@@@std@@YAPBUmessage@Database@@ABU12@@Z PROC ; std::addressof<Database::message const >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUmessage@Database@@@std@@YAPBUmessage@Database@@ABU12@@Z ENDP ; std::addressof<Database::message const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@0@AAV10@@Z PROC ; std::forward<std::vector<Database::message,std::allocator<Database::message> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::vector<Database::message,std::allocator<Database::message> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Ustruct_chatresponse@Database@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Ustruct_chatresponse@Database@@@std@@QBEIXZ PROC ; std::allocator<Database::struct_chatresponse>::max_size, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 71582788	; 04444444H
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Ustruct_chatresponse@Database@@@std@@QBEIXZ ENDP ; std::allocator<Database::struct_chatresponse>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Ustruct_log@Database@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Ustruct_log@Database@@@std@@QBEIXZ PROC ; std::allocator<Database::struct_log>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 46684427	; 02c8590bH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Ustruct_log@Database@@@std@@QBEIXZ ENDP ; std::allocator<Database::struct_log>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Uban@Database@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Uban@Database@@@std@@QBEIXZ PROC	; std::allocator<Database::ban>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 29826161	; 01c71c71H
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@4
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@4
$LN3@max_size@4:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@4:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Uban@Database@@@std@@QBEIXZ ENDP	; std::allocator<Database::ban>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Uadmin@Database@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Uadmin@Database@@@std@@QBEIXZ PROC ; std::allocator<Database::admin>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 46684427	; 02c8590bH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@5
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@5
$LN3@max_size@5:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@5:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Uadmin@Database@@@std@@QBEIXZ ENDP ; std::allocator<Database::admin>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@6
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@6
$LN3@max_size@6:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@6:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Umessage@Database@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Umessage@Database@@@std@@QBEIXZ PROC ; std::allocator<Database::message>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 119304647	; 071c71c7H
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@7
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@7
$LN3@max_size@7:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@7:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Umessage@Database@@@std@@QBEIXZ ENDP ; std::allocator<Database::message>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXXZ PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Xlen, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@2:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXXZ ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@Ustruct_chatresponse@Database@@@std@@QBEIXZ ; std::allocator<Database::struct_chatresponse>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXXZ PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@3:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXXZ ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@Ustruct_log@Database@@@std@@QBEIXZ ; std::allocator<Database::struct_log>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXXZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@4:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXXZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@Uban@Database@@@std@@QBEIXZ ; std::allocator<Database::ban>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 144				; 00000090H
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 144				; 00000090H
	idiv	ecx
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXXZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@5:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXXZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@Uadmin@Database@@@std@@QBEIXZ ; std::allocator<Database::admin>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Xlen, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@6:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 4
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 4
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXXZ PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Xlen, COMDAT
; _this$ = ecx
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@7:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXXZ ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::message,std::allocator<Database::message> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@Umessage@Database@@@std@@QBEIXZ ; std::allocator<Database::message>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::message,std::allocator<Database::message> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::message,std::allocator<Database::message> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::message,std::allocator<Database::message> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z PROC ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@XZ PROC ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@XZ ENDP ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_chatresponse@Database@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_chatresponse@Database@@@1@@Z PROC ; std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_chatresponse@Database@@@1@@Z ENDP ; std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBE_NPBUstruct_chatresponse@Database@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBE_NPBUstruct_chatresponse@Database@@@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@2
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@2
$LN3@Inside@2:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@2:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBE_NPBUstruct_chatresponse@Database@@@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z PROC ; std::allocator<Database::struct_log>::allocator<Database::struct_log>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_log@Database@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Ustruct_log@Database@@@std@@QAE@XZ PROC	; std::allocator<Database::struct_log>::allocator<Database::struct_log>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Ustruct_log@Database@@@std@@QAE@XZ ENDP	; std::allocator<Database::struct_log>::allocator<Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_log@Database@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_log@Database@@@1@@Z PROC ; std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_log@Database@@@1@@Z ENDP ; std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBE_NPBUstruct_log@Database@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBE_NPBUstruct_log@Database@@@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@3
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@3
$LN3@Inside@3:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@3:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBE_NPBUstruct_log@Database@@@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z PROC	; std::allocator<Database::ban>::allocator<Database::ban>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<Database::ban>::allocator<Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Uban@Database@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Uban@Database@@@std@@QAE@XZ PROC		; std::allocator<Database::ban>::allocator<Database::ban>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Uban@Database@@@std@@QAE@XZ ENDP		; std::allocator<Database::ban>::allocator<Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@V?$allocator@Uban@Database@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@V?$allocator@Uban@Database@@@1@@Z PROC ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::_Vector_val<Database::ban,std::allocator<Database::ban> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::ban>::allocator<Database::ban>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@V?$allocator@Uban@Database@@@1@@Z ENDP ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::_Vector_val<Database::ban,std::allocator<Database::ban> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBE_NPBUban@Database@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBE_NPBUban@Database@@@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@4
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@4
$LN3@Inside@4:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@4:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBE_NPBUban@Database@@@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z PROC	; std::allocator<Database::admin>::allocator<Database::admin>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<Database::admin>::allocator<Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Uadmin@Database@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Uadmin@Database@@@std@@QAE@XZ PROC	; std::allocator<Database::admin>::allocator<Database::admin>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Uadmin@Database@@@std@@QAE@XZ ENDP	; std::allocator<Database::admin>::allocator<Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@V?$allocator@Uadmin@Database@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@V?$allocator@Uadmin@Database@@@1@@Z PROC ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::_Vector_val<Database::admin,std::allocator<Database::admin> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::admin>::allocator<Database::admin>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@V?$allocator@Uadmin@Database@@@1@@Z ENDP ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::_Vector_val<Database::admin,std::allocator<Database::admin> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBE_NPBUadmin@Database@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBE_NPBUadmin@Database@@@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@5
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@5
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@5
$LN3@Inside@5:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@5:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBE_NPBUadmin@Database@@@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Compat, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z PROC ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBE_NPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBE_NPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@6
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@6
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@6
$LN3@Inside@6:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@6:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBE_NPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z PROC ; std::allocator<Database::message>::allocator<Database::message>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<Database::message>::allocator<Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Umessage@Database@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Umessage@Database@@@std@@QAE@XZ PROC	; std::allocator<Database::message>::allocator<Database::message>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Umessage@Database@@@std@@QAE@XZ ENDP	; std::allocator<Database::message>::allocator<Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@V?$allocator@Umessage@Database@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@V?$allocator@Umessage@Database@@@1@@Z PROC ; std::_Vector_val<Database::message,std::allocator<Database::message> >::_Vector_val<Database::message,std::allocator<Database::message> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::message>::allocator<Database::message>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@V?$allocator@Umessage@Database@@@1@@Z ENDP ; std::_Vector_val<Database::message,std::allocator<Database::message> >::_Vector_val<Database::message,std::allocator<Database::message> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBE_NPBUmessage@Database@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBE_NPBUmessage@Database@@@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@7
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@7
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@7
$LN3@Inside@7:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@7:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBE_NPBUmessage@Database@@@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran, COMDAT
; _this$ = ecx
; Line 1431
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1432
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN2@Xran@2:
; Line 1433
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Compat
; Line 214
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	sbb	eax, eax
	neg	eax
; Line 215
	mov	esp, ebp
	pop	ebp
	ret	4
??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T351439 = -4						; size = 4
??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T351439[ebp], esp
	call	??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@XZ ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??A?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEAAUmessage@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEAAUmessage@Database@@I@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::operator[], COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
; Line 941
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEAAUmessage@Database@@I@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::operator[]
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ PROC ; std::vector<Database::message,std::allocator<Database::message> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ENDP ; std::vector<Database::message,std::allocator<Database::message> >::size
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@IPAU12@@Z
_TEXT	SEGMENT
$T355775 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@IPAU12@@Z PROC ; std::_Allocate<Database::struct_chatresponse>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@2
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@2
$LN4@Allocate@2:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 71582788	; 04444444H
	ja	SHORT $LN1@Allocate@2
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 60					; 0000003cH
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@2
$LN1@Allocate@2:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355775[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355775[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@2:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@2:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@IPAU12@@Z ENDP ; std::_Allocate<Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@IPAU12@@Z
_TEXT	SEGMENT
$T355778 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@IPAU12@@Z PROC ; std::_Allocate<Database::struct_log>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@3
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@3
$LN4@Allocate@3:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 46684427	; 02c8590bH
	ja	SHORT $LN1@Allocate@3
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 92					; 0000005cH
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@3
$LN1@Allocate@3:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355778[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355778[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@3:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@3:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@IPAU12@@Z ENDP ; std::_Allocate<Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@Uban@Database@@@std@@YAPAUban@Database@@IPAU12@@Z
_TEXT	SEGMENT
$T355781 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@Uban@Database@@@std@@YAPAUban@Database@@IPAU12@@Z PROC ; std::_Allocate<Database::ban>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@4
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@4
$LN4@Allocate@4:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 29826161	; 01c71c71H
	ja	SHORT $LN1@Allocate@4
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 144				; 00000090H
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@4
$LN1@Allocate@4:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355781[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355781[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@4:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@4:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@Uban@Database@@@std@@YAPAUban@Database@@IPAU12@@Z ENDP ; std::_Allocate<Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@Uadmin@Database@@@std@@YAPAUadmin@Database@@IPAU12@@Z
_TEXT	SEGMENT
$T355784 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@Uadmin@Database@@@std@@YAPAUadmin@Database@@IPAU12@@Z PROC ; std::_Allocate<Database::admin>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@5
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@5
$LN4@Allocate@5:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 46684427	; 02c8590bH
	ja	SHORT $LN1@Allocate@5
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 92					; 0000005cH
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@5
$LN1@Allocate@5:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355784[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355784[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@5:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@5:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@Uadmin@Database@@@std@@YAPAUadmin@Database@@IPAU12@@Z ENDP ; std::_Allocate<Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T355787 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@6
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@6
$LN4@Allocate@6:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
	ja	SHORT $LN1@Allocate@6
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@6
$LN1@Allocate@6:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355787[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355787[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@6:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@6:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@Umessage@Database@@@std@@YAPAUmessage@Database@@IPAU12@@Z
_TEXT	SEGMENT
$T355790 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@Umessage@Database@@@std@@YAPAUmessage@Database@@IPAU12@@Z PROC ; std::_Allocate<Database::message>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@7
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@7
$LN4@Allocate@7:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 119304647	; 071c71c7H
	ja	SHORT $LN1@Allocate@7
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 36					; 00000024H
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@7
$LN1@Allocate@7:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355790[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355790[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@7:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@7:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@Umessage@Database@@@std@@YAPAUmessage@Database@@IPAU12@@Z ENDP ; std::_Allocate<Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEPAUstruct_chatresponse@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEPAUstruct_chatresponse@Database@@I@Z PROC ; std::allocator<Database::struct_chatresponse>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@IPAU12@@Z ; std::_Allocate<Database::struct_chatresponse>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEPAUstruct_chatresponse@Database@@I@Z ENDP ; std::allocator<Database::struct_chatresponse>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@Ustruct_log@Database@@@std@@QAEPAUstruct_log@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Ustruct_log@Database@@@std@@QAEPAUstruct_log@Database@@I@Z PROC ; std::allocator<Database::struct_log>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@IPAU12@@Z ; std::_Allocate<Database::struct_log>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Ustruct_log@Database@@@std@@QAEPAUstruct_log@Database@@I@Z ENDP ; std::allocator<Database::struct_log>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@Uban@Database@@@std@@QAEPAUban@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Uban@Database@@@std@@QAEPAUban@Database@@I@Z PROC ; std::allocator<Database::ban>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@Uban@Database@@@std@@YAPAUban@Database@@IPAU12@@Z ; std::_Allocate<Database::ban>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Uban@Database@@@std@@QAEPAUban@Database@@I@Z ENDP ; std::allocator<Database::ban>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@Uadmin@Database@@@std@@QAEPAUadmin@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Uadmin@Database@@@std@@QAEPAUadmin@Database@@I@Z PROC ; std::allocator<Database::admin>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@Uadmin@Database@@@std@@YAPAUadmin@Database@@IPAU12@@Z ; std::_Allocate<Database::admin>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Uadmin@Database@@@std@@QAEPAUadmin@Database@@I@Z ENDP ; std::allocator<Database::admin>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator==, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@IPAV10@@Z ; std::_Allocate<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@Umessage@Database@@@std@@QAEPAUmessage@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Umessage@Database@@@std@@QAEPAUmessage@Database@@I@Z PROC ; std::allocator<Database::message>::allocate, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@Umessage@Database@@@std@@YAPAUmessage@Database@@IPAU12@@Z ; std::_Allocate<Database::message>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Umessage@Database@@@std@@QAEPAUmessage@Database@@I@Z ENDP ; std::allocator<Database::message>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator++, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBEAAUstruct_chatresponse@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBEAAUstruct_chatresponse@Database@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBEABUstruct_chatresponse@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBEAAUstruct_chatresponse@Database@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBEAAUstruct_log@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBEAAUstruct_log@Database@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBEABUstruct_log@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBEAAUstruct_log@Database@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEAAUban@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEAAUban@Database@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEAAUban@Database@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEAAUadmin@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEAAUadmin@Database@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEABUadmin@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEAAUadmin@Database@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBEAAUmessage@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBEAAUmessage@Database@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBEABUmessage@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBEAAUmessage@Database@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEII@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@2
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@2
$LN4@Grow_to@2:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@2:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@2
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@2:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEII@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_chatresponse@Database@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_chatresponse@Database@@@2@XZ PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_chatresponse@Database@@@2@XZ ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEII@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@3
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@3
$LN4@Grow_to@3:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@3:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@3
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@3:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEII@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_log@Database@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_log@Database@@@2@XZ PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_log@Database@@@2@XZ ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEII@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@4
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@4
$LN4@Grow_to@4:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@4:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@4
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@4:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEII@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBE?AV?$allocator@Uban@Database@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBE?AV?$allocator@Uban@Database@@@2@XZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::ban>::allocator<Database::ban>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBE?AV?$allocator@Uban@Database@@@2@XZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEII@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@5
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@5
$LN4@Grow_to@5:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@5:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@5
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@5:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEII@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBE?AV?$allocator@Uadmin@Database@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBE?AV?$allocator@Uadmin@Database@@@2@XZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::admin>::allocator<Database::admin>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBE?AV?$allocator@Uadmin@Database@@@2@XZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@6
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@6
$LN4@Grow_to@6:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@6:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@6
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@6:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEII@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@7
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@7
$LN4@Grow_to@7:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@7:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@7
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@7:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEII@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBE?AV?$allocator@Umessage@Database@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBE?AV?$allocator@Umessage@Database@@@2@XZ PROC ; std::vector<Database::message,std::allocator<Database::message> >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::message>::allocator<Database::message>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBE?AV?$allocator@Umessage@Database@@@2@XZ ENDP ; std::vector<Database::message,std::allocator<Database::message> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355869 = -4						; size = 4
??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355869[ebp], esp
	call	??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@XZ ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_chatresponse@Database@@@1@@Z ; std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355872 = -4						; size = 4
??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355872[ebp], esp
	call	??0?$allocator@Ustruct_log@Database@@@std@@QAE@XZ ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_log@Database@@@1@@Z ; std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355875 = -4						; size = 4
??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355875[ebp], esp
	call	??0?$allocator@Uban@Database@@@std@@QAE@XZ ; std::allocator<Database::ban>::allocator<Database::ban>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@V?$allocator@Uban@Database@@@1@@Z ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::_Vector_val<Database::ban,std::allocator<Database::ban> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355878 = -4						; size = 4
??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355878[ebp], esp
	call	??0?$allocator@Uadmin@Database@@@std@@QAE@XZ ; std::allocator<Database::admin>::allocator<Database::admin>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@V?$allocator@Uadmin@Database@@@1@@Z ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::_Vector_val<Database::admin,std::allocator<Database::admin> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355885 = -4						; size = 4
??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355885[ebp], esp
	call	??0?$allocator@Umessage@Database@@@std@@QAE@XZ ; std::allocator<Database::message>::allocator<Database::message>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@V?$allocator@Umessage@Database@@@1@@Z ; std::_Vector_val<Database::message,std::allocator<Database::message> >::_Vector_val<Database::message,std::allocator<Database::message> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at, COMDAT
; _this$ = ecx
; Line 905
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 906
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at@3
; Line 907
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xran
$LN1@at@3:
; Line 908
	mov	eax, DWORD PTR __Pos$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
$LN3@at@3:
; Line 909
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
; Function compile flags: /Odtp
;	COMDAT ?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAE@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ??0struct_settings@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_settings@Database@@QAE@XZ PROC		; Database::struct_settings::struct_settings, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_settings@Database@@QAE@XZ ENDP		; Database::struct_settings::struct_settings
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0struct_chatresponse@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_chatresponse@Database@@QAE@XZ PROC		; Database::struct_chatresponse::struct_chatresponse, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_chatresponse@Database@@QAE@XZ ENDP		; Database::struct_chatresponse::struct_chatresponse
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0message@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0message@Database@@QAE@XZ PROC			; Database::message::message, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0message@Database@@QAE@XZ ENDP			; Database::message::message
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0struct_log@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_log@Database@@QAE@XZ PROC			; Database::struct_log::struct_log, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_log@Database@@QAE@XZ ENDP			; Database::struct_log::struct_log
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0ban@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ban@Database@@QAE@XZ PROC				; Database::ban::ban, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0ban@Database@@QAE@XZ ENDP				; Database::ban::ban
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0admin@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0admin@Database@@QAE@XZ PROC				; Database::admin::admin, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0admin@Database@@QAE@XZ ENDP				; Database::admin::admin
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0struct_chatresponse@Database@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0struct_chatresponse@Database@@QAE@ABU01@@Z$0
__ehfuncinfo$??0struct_chatresponse@Database@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0struct_chatresponse@Database@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0struct_chatresponse@Database@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0struct_chatresponse@Database@@QAE@ABU01@@Z PROC	; Database::struct_chatresponse::struct_chatresponse, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0struct_chatresponse@Database@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0struct_chatresponse@Database@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0struct_chatresponse@Database@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0struct_chatresponse@Database@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0struct_chatresponse@Database@@QAE@ABU01@@Z ENDP	; Database::struct_chatresponse::struct_chatresponse
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0struct_log@Database@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0struct_log@Database@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0struct_log@Database@@QAE@ABU01@@Z$1
__ehfuncinfo$??0struct_log@Database@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0struct_log@Database@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0struct_log@Database@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0struct_log@Database@@QAE@ABU01@@Z PROC		; Database::struct_log::struct_log, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0struct_log@Database@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+88]
	mov	BYTE PTR [eax+88], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+89]
	mov	BYTE PTR [eax+89], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0struct_log@Database@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0struct_log@Database@@QAE@ABU01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0struct_log@Database@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0struct_log@Database@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0struct_log@Database@@QAE@ABU01@@Z ENDP		; Database::struct_log::struct_log
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ban@Database@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$3
__ehfuncinfo$??0ban@Database@@QAE@ABU01@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0ban@Database@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0ban@Database@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0ban@Database@@QAE@ABU01@@Z PROC			; Database::ban::ban, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0ban@Database@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 116				; 00000074H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ban@Database@@QAE@ABU01@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0ban@Database@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0ban@Database@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0ban@Database@@QAE@ABU01@@Z ENDP			; Database::ban::ban
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0admin@Database@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0admin@Database@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0admin@Database@@QAE@ABU01@@Z$1
__ehfuncinfo$??0admin@Database@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0admin@Database@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0admin@Database@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0admin@Database@@QAE@ABU01@@Z PROC			; Database::admin::admin, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0admin@Database@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+60]
	mov	BYTE PTR [edx+60], cl
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0admin@Database@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0admin@Database@@QAE@ABU01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0admin@Database@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0admin@Database@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0admin@Database@@QAE@ABU01@@Z ENDP			; Database::admin::admin
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T361027 = -20						; size = 4
$T361026 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z PROC ; std::allocator<Database::struct_chatresponse>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	60					; 0000003cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T361027[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T361027[ebp], 0
	je	SHORT $LN3@construct@6
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T361027[ebp]
	call	??0struct_chatresponse@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@6
$LN3@construct@6:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@6:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T361026[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T361027[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z ENDP ; std::allocator<Database::struct_chatresponse>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T361040 = -20						; size = 4
$T361039 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z PROC ; std::allocator<Database::struct_log>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	92					; 0000005cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T361040[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T361040[ebp], 0
	je	SHORT $LN3@construct@7
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T361040[ebp]
	call	??0struct_log@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@7
$LN3@construct@7:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@7:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T361039[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T361040[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z ENDP ; std::allocator<Database::struct_log>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T361053 = -20						; size = 4
$T361052 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z PROC ; std::allocator<Database::ban>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	144					; 00000090H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T361053[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T361053[ebp], 0
	je	SHORT $LN3@construct@8
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ; std::forward<Database::ban>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T361053[ebp]
	call	??0ban@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@8
$LN3@construct@8:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@8:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T361052[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T361053[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z ENDP ; std::allocator<Database::ban>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T361066 = -20						; size = 4
$T361065 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z PROC ; std::allocator<Database::admin>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	92					; 0000005cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T361066[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T361066[ebp], 0
	je	SHORT $LN3@construct@9
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T361066[ebp]
	call	??0admin@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@9
$LN3@construct@9:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@9:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T361065[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T361066[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z ENDP ; std::allocator<Database::admin>::construct
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@$$QAU34@@Z ; std::allocator<Database::struct_chatresponse>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@$$QAU34@@Z ; std::allocator<Database::struct_log>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ; std::forward<Database::ban>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@$$QAU34@@Z ; std::allocator<Database::ban>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@$$QAU34@@Z ; std::allocator<Database::admin>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0message@Database@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0message@Database@@QAE@ABU01@@Z PROC			; Database::message::message, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+32]
	mov	BYTE PTR [ecx+32], al
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0message@Database@@QAE@ABU01@@Z ENDP			; Database::message::message
_TEXT	ENDS
PUBLIC	??1SQLite@Database@@QAE@XZ			; Database::SQLite::~SQLite
; Function compile flags: /Odtp
;	COMDAT ??1SQLite@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SQLite@Database@@QAE@XZ PROC				; Database::SQLite::~SQLite, COMDAT
; _this$ = ecx
; File c:\work\daspirum\source\src\sqlite.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::~vector<Database::message,std::allocator<Database::message> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1SQLite@Database@@QAE@XZ ENDP				; Database::SQLite::~SQLite
_TEXT	ENDS
PUBLIC	??0SQLite@Database@@QAE@XZ			; Database::SQLite::SQLite
; Function compile flags: /Odtp
;	COMDAT ??0SQLite@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0SQLite@Database@@QAE@XZ PROC				; Database::SQLite::SQLite, COMDAT
; _this$ = ecx
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0SQLite@Database@@QAE@XZ ENDP				; Database::SQLite::SQLite
; Function compile flags: /Odtp
;	COMDAT ??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@226
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@226:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z PROC ; std::_Destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::_Destroy<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse>, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@3
$LN5@Uninit_mov@3:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 60					; 0000003cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 60					; 0000003cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@3:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@3
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@3
$LN4@Uninit_mov@3:
	jmp	SHORT $LN10@Uninit_mov@3
__catch$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@3
$LN2@Uninit_mov@3:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 60					; 0000003cH
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@3:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@3
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@@Z ; std::_Dest_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@3
$LN1@Uninit_mov@3:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@3:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log>,Database::struct_log>, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@4
$LN5@Uninit_mov@4:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 92					; 0000005cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 92					; 0000005cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@4:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@4
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@4
$LN4@Uninit_mov@4:
	jmp	SHORT $LN10@Uninit_mov@4
__catch$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@4
$LN2@Uninit_mov@4:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 92					; 0000005cH
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@4:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@4
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@@Z ; std::_Dest_val<std::allocator<Database::struct_log>,Database::struct_log>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@4
$LN1@Uninit_mov@4:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@4:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@4:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log>,Database::struct_log>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Database::ban *,Database::ban *,std::allocator<Database::ban>,Database::ban>, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@5
$LN5@Uninit_mov@5:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 144				; 00000090H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 144				; 00000090H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@5:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@5
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@5
$LN4@Uninit_mov@5:
	jmp	SHORT $LN10@Uninit_mov@5
__catch$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@5
$LN2@Uninit_mov@5:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 144				; 00000090H
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@5:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@5
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@@Z ; std::_Dest_val<std::allocator<Database::ban>,Database::ban>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@5
$LN1@Uninit_mov@5:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@5:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@5:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Database::ban *,Database::ban *,std::allocator<Database::ban>,Database::ban>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Database::admin *,Database::admin *,std::allocator<Database::admin>,Database::admin>, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@6
$LN5@Uninit_mov@6:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 92					; 0000005cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 92					; 0000005cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@6:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@6
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@6
$LN4@Uninit_mov@6:
	jmp	SHORT $LN10@Uninit_mov@6
__catch$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@6
$LN2@Uninit_mov@6:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 92					; 0000005cH
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@6:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@6
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@@Z ; std::_Dest_val<std::allocator<Database::admin>,Database::admin>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@6
$LN1@Uninit_mov@6:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@6:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@6:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Database::admin *,Database::admin *,std::allocator<Database::admin>,Database::admin>
; Function compile flags: /Odtp
;	COMDAT ??$_Dest_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362755 = -24						; size = 4
$T362754 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z PROC ; std::_Construct<Database::struct_chatresponse,Database::struct_chatresponse const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	60					; 0000003cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362755[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362755[ebp], 0
	je	SHORT $LN3@Construct@5
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUstruct_chatresponse@Database@@@std@@YAABUstruct_chatresponse@Database@@ABU12@@Z ; std::forward<Database::struct_chatresponse const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362755[ebp]
	call	??0struct_chatresponse@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@5
$LN3@Construct@5:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@5:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362754[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362755[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z ENDP ; std::_Construct<Database::struct_chatresponse,Database::struct_chatresponse const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362768 = -24						; size = 4
$T362767 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z PROC ; std::_Construct<Database::struct_log,Database::struct_log const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	92					; 0000005cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362768[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362768[ebp], 0
	je	SHORT $LN3@Construct@6
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUstruct_log@Database@@@std@@YAABUstruct_log@Database@@ABU12@@Z ; std::forward<Database::struct_log const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362768[ebp]
	call	??0struct_log@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@6
$LN3@Construct@6:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@6:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362767[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362768[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z ENDP ; std::_Construct<Database::struct_log,Database::struct_log const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362781 = -24						; size = 4
$T362780 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z PROC ; std::_Construct<Database::ban,Database::ban const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	144					; 00000090H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362781[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362781[ebp], 0
	je	SHORT $LN3@Construct@7
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUban@Database@@@std@@YAABUban@Database@@ABU12@@Z ; std::forward<Database::ban const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362781[ebp]
	call	??0ban@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@7
$LN3@Construct@7:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@7:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362780[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362781[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z ENDP ; std::_Construct<Database::ban,Database::ban const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362794 = -24						; size = 4
$T362793 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z PROC ; std::_Construct<Database::admin,Database::admin const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	92					; 0000005cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362794[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362794[ebp], 0
	je	SHORT $LN3@Construct@8
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUadmin@Database@@@std@@YAABUadmin@Database@@ABU12@@Z ; std::forward<Database::admin const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362794[ebp]
	call	??0admin@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@8
$LN3@Construct@8:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@8:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362793[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362794[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z ENDP ; std::_Construct<Database::admin,Database::admin const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362807 = -24						; size = 4
$T362806 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z PROC ; std::_Construct<Database::message,Database::message const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	36					; 00000024H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362807[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362807[ebp], 0
	je	SHORT $LN3@Construct@9
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUmessage@Database@@@std@@YAABUmessage@Database@@ABU12@@Z ; std::forward<Database::message const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362807[ebp]
	call	??0message@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@9
$LN3@Construct@9:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@9:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362806[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362807[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z ENDP ; std::_Construct<Database::message,Database::message const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@@Z
_TEXT	SEGMENT
$T362819 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@@Z PROC ; std::_Uninitialized_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse> >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Ustruct_chatresponse@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_chatresponse@Database@@0@Z ; std::_Ptr_cat<Database::struct_chatresponse,Database::struct_chatresponse>
	add	esp, 8
	mov	BYTE PTR $T362819[ebp], al
	movzx	edx, BYTE PTR $T362819[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUstruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@@Z ; std::_Val_type<Database::struct_chatresponse *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@U12@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@@Z ENDP ; std::_Uninitialized_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@@Z
_TEXT	SEGMENT
$T362822 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@@Z PROC ; std::_Uninitialized_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log> >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Ustruct_log@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_log@Database@@0@Z ; std::_Ptr_cat<Database::struct_log,Database::struct_log>
	add	esp, 8
	mov	BYTE PTR $T362822[ebp], al
	movzx	edx, BYTE PTR $T362822[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUstruct_log@Database@@@std@@YAPAUstruct_log@Database@@PAU12@@Z ; std::_Val_type<Database::struct_log *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@U12@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log>,Database::struct_log>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@@Z ENDP ; std::_Uninitialized_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@@Z
_TEXT	SEGMENT
$T362825 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@@Z PROC ; std::_Uninitialized_move<Database::ban *,Database::ban *,std::allocator<Database::ban> >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Uban@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUban@Database@@0@Z ; std::_Ptr_cat<Database::ban,Database::ban>
	add	esp, 8
	mov	BYTE PTR $T362825[ebp], al
	movzx	edx, BYTE PTR $T362825[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUban@Database@@@std@@YAPAUban@Database@@PAU12@@Z ; std::_Val_type<Database::ban *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@U12@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::ban *,Database::ban *,std::allocator<Database::ban>,Database::ban>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@@Z ENDP ; std::_Uninitialized_move<Database::ban *,Database::ban *,std::allocator<Database::ban> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@@Z
_TEXT	SEGMENT
$T362828 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@@Z PROC ; std::_Uninitialized_move<Database::admin *,Database::admin *,std::allocator<Database::admin> >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Uadmin@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUadmin@Database@@0@Z ; std::_Ptr_cat<Database::admin,Database::admin>
	add	esp, 8
	mov	BYTE PTR $T362828[ebp], al
	movzx	edx, BYTE PTR $T362828[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUadmin@Database@@@std@@YAPAUadmin@Database@@PAU12@@Z ; std::_Val_type<Database::admin *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@U12@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::admin *,Database::admin *,std::allocator<Database::admin>,Database::admin>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@@Z ENDP ; std::_Uninitialized_move<Database::admin *,Database::admin *,std::allocator<Database::admin> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	jmp	SHORT $LN3@Destroy_ra@9
$LN2@Destroy_ra@9:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra@9:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra@9
; Line 97
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::_Dest_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	jmp	SHORT $LN2@Destroy_ra@9
$LN4@Destroy_ra@9:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362834 = -20						; size = 4
$T362833 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z PROC ; std::allocator<Database::struct_chatresponse>::construct<Database::struct_chatresponse &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	60					; 0000003cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362834[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362834[ebp], 0
	je	SHORT $LN3@construct@16
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUstruct_chatresponse@Database@@@std@@YAAAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362834[ebp]
	call	??0struct_chatresponse@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@16
$LN3@construct@16:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@16:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362833[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362834[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z ENDP ; std::allocator<Database::struct_chatresponse>::construct<Database::struct_chatresponse &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362847 = -20						; size = 4
$T362846 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z PROC ; std::allocator<Database::struct_log>::construct<Database::struct_log &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	92					; 0000005cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362847[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362847[ebp], 0
	je	SHORT $LN3@construct@17
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUstruct_log@Database@@@std@@YAAAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362847[ebp]
	call	??0struct_log@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@17
$LN3@construct@17:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@17:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362846[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362847[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z ENDP ; std::allocator<Database::struct_log>::construct<Database::struct_log &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362860 = -20						; size = 4
$T362859 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z PROC ; std::allocator<Database::ban>::construct<Database::ban &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	144					; 00000090H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362860[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362860[ebp], 0
	je	SHORT $LN3@construct@18
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUban@Database@@@std@@YAAAUban@Database@@AAU12@@Z ; std::forward<Database::ban &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362860[ebp]
	call	??0ban@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@18
$LN3@construct@18:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@18:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362859[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362860[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z ENDP ; std::allocator<Database::ban>::construct<Database::ban &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362873 = -20						; size = 4
$T362872 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z PROC ; std::allocator<Database::admin>::construct<Database::admin &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	92					; 0000005cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362873[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362873[ebp], 0
	je	SHORT $LN3@construct@19
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUadmin@Database@@@std@@YAAAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362873[ebp]
	call	??0admin@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@19
$LN3@construct@19:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@19:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362872[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362873[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z ENDP ; std::allocator<Database::admin>::construct<Database::admin &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362886 = -20						; size = 4
$T362885 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z PROC ; std::allocator<Database::message>::construct<Database::message &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	36					; 00000024H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362886[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362886[ebp], 0
	je	SHORT $LN3@construct@20
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUmessage@Database@@@std@@YAAAUmessage@Database@@AAU12@@Z ; std::forward<Database::message &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362886[ebp]
	call	??0message@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@20
$LN3@construct@20:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@20:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362885[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362886[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z ENDP ; std::allocator<Database::message>::construct<Database::message &>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@ABU34@@Z PROC ; std::allocator<Database::struct_chatresponse>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Ustruct_chatresponse@Database@@ABU12@@std@@YAXPAUstruct_chatresponse@Database@@ABU12@@Z ; std::_Construct<Database::struct_chatresponse,Database::struct_chatresponse const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@ABU34@@Z ENDP ; std::allocator<Database::struct_chatresponse>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@ABU34@@Z PROC ; std::allocator<Database::struct_log>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Ustruct_log@Database@@ABU12@@std@@YAXPAUstruct_log@Database@@ABU12@@Z ; std::_Construct<Database::struct_log,Database::struct_log const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@ABU34@@Z ENDP ; std::allocator<Database::struct_log>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@ABU34@@Z PROC ; std::allocator<Database::ban>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Uban@Database@@ABU12@@std@@YAXPAUban@Database@@ABU12@@Z ; std::_Construct<Database::ban,Database::ban const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@ABU34@@Z ENDP ; std::allocator<Database::ban>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@ABU34@@Z PROC ; std::allocator<Database::admin>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Uadmin@Database@@ABU12@@std@@YAXPAUadmin@Database@@ABU12@@Z ; std::_Construct<Database::admin,Database::admin const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@ABU34@@Z ENDP ; std::allocator<Database::admin>::construct
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362907 = -20						; size = 4
$T362906 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z PROC ; std::allocator<Database::message>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	36					; 00000024H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362907[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362907[ebp], 0
	je	SHORT $LN3@construct@21
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ; std::forward<Database::message>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362907[ebp]
	call	??0message@Database@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@21
$LN3@construct@21:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@21:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362906[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362907[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z ENDP ; std::allocator<Database::message>::construct
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@ABU34@@Z PROC ; std::allocator<Database::message>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Umessage@Database@@ABU12@@std@@YAXPAUmessage@Database@@ABU12@@Z ; std::_Construct<Database::message,Database::message const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@ABU34@@Z ENDP ; std::allocator<Database::message>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAUstruct_chatresponse@Database@@@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEPAUstruct_chatresponse@Database@@PAU23@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUstruct_chatresponse@Database@@@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEPAUstruct_chatresponse@Database@@PAU23@00@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Umove<Database::struct_chatresponse *>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUstruct_chatresponse@Database@@PAU12@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@YAPAUstruct_chatresponse@Database@@PAU12@00AAV?$allocator@Ustruct_chatresponse@Database@@@0@@Z ; std::_Uninitialized_move<Database::struct_chatresponse *,Database::struct_chatresponse *,std::allocator<Database::struct_chatresponse> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUstruct_chatresponse@Database@@@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEPAUstruct_chatresponse@Database@@PAU23@00@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Umove<Database::struct_chatresponse *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAUstruct_log@Database@@@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEPAUstruct_log@Database@@PAU23@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUstruct_log@Database@@@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEPAUstruct_log@Database@@PAU23@00@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Umove<Database::struct_log *>, COMDAT
; _this$ = ecx
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUstruct_log@Database@@PAU12@V?$allocator@Ustruct_log@Database@@@std@@@std@@YAPAUstruct_log@Database@@PAU12@00AAV?$allocator@Ustruct_log@Database@@@0@@Z ; std::_Uninitialized_move<Database::struct_log *,Database::struct_log *,std::allocator<Database::struct_log> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUstruct_log@Database@@@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEPAUstruct_log@Database@@PAU23@00@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Umove<Database::struct_log *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAUban@Database@@@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEPAUban@Database@@PAU23@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUban@Database@@@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEPAUban@Database@@PAU23@00@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Umove<Database::ban *>, COMDAT
; _this$ = ecx
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUban@Database@@PAU12@V?$allocator@Uban@Database@@@std@@@std@@YAPAUban@Database@@PAU12@00AAV?$allocator@Uban@Database@@@0@@Z ; std::_Uninitialized_move<Database::ban *,Database::ban *,std::allocator<Database::ban> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUban@Database@@@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEPAUban@Database@@PAU23@00@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Umove<Database::ban *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAUadmin@Database@@@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEPAUadmin@Database@@PAU23@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUadmin@Database@@@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEPAUadmin@Database@@PAU23@00@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Umove<Database::admin *>, COMDAT
; _this$ = ecx
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUadmin@Database@@PAU12@V?$allocator@Uadmin@Database@@@std@@@std@@YAPAUadmin@Database@@PAU12@00AAV?$allocator@Uadmin@Database@@@0@@Z ; std::_Uninitialized_move<Database::admin *,Database::admin *,std::allocator<Database::admin> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUadmin@Database@@@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEPAUadmin@Database@@PAU23@00@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Umove<Database::admin *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
$T362929 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	mov	BYTE PTR $T362929[ebp], al
	movzx	edx, BYTE PTR $T362929[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ; std::forward<Database::message>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@$$QAU34@@Z ; std::allocator<Database::message>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUstruct_chatresponse@Database@@@std@@YAABUstruct_chatresponse@Database@@ABU12@@Z ; std::forward<Database::struct_chatresponse const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@ABU34@@Z ; std::allocator<Database::struct_chatresponse>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUstruct_chatresponse@Database@@@std@@YAAAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUstruct_chatresponse@Database@@@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@AAU23@@Z ; std::allocator<Database::struct_chatresponse>::construct<Database::struct_chatresponse &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUstruct_log@Database@@@std@@YAABUstruct_log@Database@@ABU12@@Z ; std::forward<Database::struct_log const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@ABU34@@Z ; std::allocator<Database::struct_log>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUstruct_log@Database@@@std@@YAAAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUstruct_log@Database@@@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@AAU23@@Z ; std::allocator<Database::struct_log>::construct<Database::struct_log &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@ABU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@ABU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUban@Database@@@std@@YAABUban@Database@@ABU12@@Z ; std::forward<Database::ban const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@ABU34@@Z ; std::allocator<Database::ban>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@ABU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@AAU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@AAU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUban@Database@@@std@@YAAAUban@Database@@AAU12@@Z ; std::forward<Database::ban &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUban@Database@@@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@AAU23@@Z ; std::allocator<Database::ban>::construct<Database::ban &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@AAU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@ABU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@ABU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUadmin@Database@@@std@@YAABUadmin@Database@@ABU12@@Z ; std::forward<Database::admin const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@ABU34@@Z ; std::allocator<Database::admin>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@ABU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@AAU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@AAU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUadmin@Database@@@std@@YAAAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUadmin@Database@@@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@AAU23@@Z ; std::allocator<Database::admin>::construct<Database::admin &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@AAU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@ABU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@ABU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUmessage@Database@@@std@@YAABUmessage@Database@@ABU12@@Z ; std::forward<Database::message const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@ABU34@@Z ; std::allocator<Database::message>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@ABU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@AAU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@AAU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUmessage@Database@@@std@@YAAAUmessage@Database@@AAU12@@Z ; std::forward<Database::message &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUmessage@Database@@@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@AAU23@@Z ; std::allocator<Database::message>::construct<Database::message &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@AAU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message &>
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$50378 = -24					; size = 4
__Ptr$50371 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@7
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Xlen
	jmp	$LN7@reserve@7
$LN5@reserve@7:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@7
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEPAUstruct_chatresponse@Database@@I@Z ; std::allocator<Database::struct_chatresponse>::allocate
	mov	DWORD PTR __Ptr$50371[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$50371[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUstruct_chatresponse@Database@@@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEPAUstruct_chatresponse@Database@@PAU23@00@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Umove<Database::struct_chatresponse *>
	jmp	SHORT $LN8@reserve@7
__catch$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$50371[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@I@Z ; std::allocator<Database::struct_chatresponse>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@7:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::size
	mov	DWORD PTR __Size$50378[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@7
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXPAUstruct_chatresponse@Database@@0@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_chatresponse@Database@@@std@@QAEXPAUstruct_chatresponse@Database@@I@Z ; std::allocator<Database::struct_chatresponse>::deallocate
$LN1@reserve@7:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 60					; 0000003cH
	add	ecx, DWORD PTR __Ptr$50371[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 770
	mov	eax, DWORD PTR __Size$50378[ebp]
	imul	eax, 60					; 0000003cH
	add	eax, DWORD PTR __Ptr$50371[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$50371[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve@7:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::reserve
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$50303 = -24					; size = 4
__Ptr$50296 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@8
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Xlen
	jmp	$LN7@reserve@8
$LN5@reserve@8:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@8
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@Ustruct_log@Database@@@std@@QAEPAUstruct_log@Database@@I@Z ; std::allocator<Database::struct_log>::allocate
	mov	DWORD PTR __Ptr$50296[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$50296[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUstruct_log@Database@@@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEPAUstruct_log@Database@@PAU23@00@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Umove<Database::struct_log *>
	jmp	SHORT $LN8@reserve@8
__catch$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$50296[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@I@Z ; std::allocator<Database::struct_log>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@8:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::size
	mov	DWORD PTR __Size$50303[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@8
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXPAUstruct_log@Database@@0@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_log@Database@@@std@@QAEXPAUstruct_log@Database@@I@Z ; std::allocator<Database::struct_log>::deallocate
$LN1@reserve@8:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 92					; 0000005cH
	add	ecx, DWORD PTR __Ptr$50296[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 770
	mov	eax, DWORD PTR __Size$50303[ebp]
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR __Ptr$50296[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$50296[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve@8:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::reserve
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$50228 = -24					; size = 4
__Ptr$50221 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@9
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::_Xlen
	jmp	$LN7@reserve@9
$LN5@reserve@9:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@9
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@Uban@Database@@@std@@QAEPAUban@Database@@I@Z ; std::allocator<Database::ban>::allocate
	mov	DWORD PTR __Ptr$50221[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$50221[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUban@Database@@@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEPAUban@Database@@PAU23@00@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Umove<Database::ban *>
	jmp	SHORT $LN8@reserve@9
__catch$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$50221[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z ; std::allocator<Database::ban>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@9:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::size
	mov	DWORD PTR __Size$50228[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@9
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 144				; 00000090H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z ; std::allocator<Database::ban>::deallocate
$LN1@reserve@9:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 144				; 00000090H
	add	ecx, DWORD PTR __Ptr$50221[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 770
	mov	eax, DWORD PTR __Size$50228[ebp]
	imul	eax, 144				; 00000090H
	add	eax, DWORD PTR __Ptr$50221[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$50221[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve@9:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::reserve
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$50153 = -24					; size = 4
__Ptr$50146 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@10
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::_Xlen
	jmp	$LN7@reserve@10
$LN5@reserve@10:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@10
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@Uadmin@Database@@@std@@QAEPAUadmin@Database@@I@Z ; std::allocator<Database::admin>::allocate
	mov	DWORD PTR __Ptr$50146[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$50146[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUadmin@Database@@@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEPAUadmin@Database@@PAU23@00@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Umove<Database::admin *>
	jmp	SHORT $LN8@reserve@10
__catch$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$50146[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z ; std::allocator<Database::admin>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@10:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::size
	mov	DWORD PTR __Size$50153[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@10
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z ; std::allocator<Database::admin>::deallocate
$LN1@reserve@10:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 92					; 0000005cH
	add	ecx, DWORD PTR __Ptr$50146[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 770
	mov	eax, DWORD PTR __Size$50153[ebp]
	imul	eax, 92					; 0000005cH
	add	eax, DWORD PTR __Ptr$50146[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$50146[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve@10:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::reserve
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@6
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Xlen
	jmp	SHORT $LN6@Reserve@6
$LN4@Reserve@6:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@6
; Line 1296
	jmp	SHORT $LN6@Reserve@6
$LN2@Reserve@6:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::reserve
$LN6@Reserve@6:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@7
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Xlen
	jmp	SHORT $LN6@Reserve@7
$LN4@Reserve@7:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@7
; Line 1296
	jmp	SHORT $LN6@Reserve@7
$LN2@Reserve@7:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::reserve
$LN6@Reserve@7:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@8
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::_Xlen
	jmp	SHORT $LN6@Reserve@8
$LN4@Reserve@8:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@8
; Line 1296
	jmp	SHORT $LN6@Reserve@8
$LN2@Reserve@8:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::reserve
$LN6@Reserve@8:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@9
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::_Xlen
	jmp	SHORT $LN6@Reserve@9
$LN4@Reserve@9:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@9
; Line 1296
	jmp	SHORT $LN6@Reserve@9
$LN2@Reserve@9:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::reserve
$LN6@Reserve@9:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@13
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
$LN1@Tidy@13:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXABUstruct_chatresponse@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$46033 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXABUstruct_chatresponse@Database@@@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUstruct_chatresponse@Database@@@std@@YAPBUstruct_chatresponse@Database@@ABU12@@Z ; std::addressof<Database::struct_chatresponse const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBE_NPBUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@7
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUstruct_chatresponse@Database@@@std@@YAPBUstruct_chatresponse@Database@@ABU12@@Z ; std::addressof<Database::struct_chatresponse const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR __Idx$46033[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@7
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve
$LN3@push_back@7:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$46033[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@7
$LN4@push_back@7:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@7
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve
$LN1@push_back@7:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@7:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXABUstruct_chatresponse@Database@@@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXABUstruct_log@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$45974 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXABUstruct_log@Database@@@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUstruct_log@Database@@@std@@YAPBUstruct_log@Database@@ABU12@@Z ; std::addressof<Database::struct_log const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBE_NPBUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@8
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUstruct_log@Database@@@std@@YAPBUstruct_log@Database@@ABU12@@Z ; std::addressof<Database::struct_log const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	mov	DWORD PTR __Idx$45974[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@8
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve
$LN3@push_back@8:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$45974[ebp]
	imul	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@AAU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@8
$LN4@push_back@8:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@8
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve
$LN1@push_back@8:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@ABU34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 92					; 0000005cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@8:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXABUstruct_log@Database@@@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXABUban@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$45915 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXABUban@Database@@@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUban@Database@@@std@@YAPBUban@Database@@ABU12@@Z ; std::addressof<Database::ban const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBE_NPBUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@9
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUban@Database@@@std@@YAPBUban@Database@@ABU12@@Z ; std::addressof<Database::ban const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 144				; 00000090H
	idiv	ecx
	mov	DWORD PTR __Idx$45915[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@9
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve
$LN3@push_back@9:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$45915[ebp]
	imul	eax, 144				; 00000090H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@AAU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 144				; 00000090H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@9
$LN4@push_back@9:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@9
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve
$LN1@push_back@9:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@ABU34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 144				; 00000090H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@9:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXABUban@Database@@@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXABUadmin@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$45856 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXABUadmin@Database@@@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUadmin@Database@@@std@@YAPBUadmin@Database@@ABU12@@Z ; std::addressof<Database::admin const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBE_NPBUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@10
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUadmin@Database@@@std@@YAPBUadmin@Database@@ABU12@@Z ; std::addressof<Database::admin const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	mov	DWORD PTR __Idx$45856[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@10
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve
$LN3@push_back@10:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$45856[ebp]
	imul	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@AAU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@10
$LN4@push_back@10:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@10
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve
$LN1@push_back@10:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@ABU34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 92					; 0000005cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@10:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXABUadmin@Database@@@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__ehhandler$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	__$ArrayPad$
PUBLIC	?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ ; Database::SQLite::getNextMessage
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\sqlite.cpp
xdata$x	SEGMENT
__unwindtable$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ$1
__ehfuncinfo$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ
_TEXT	SEGMENT
_this$ = -64						; size = 4
$T363045 = -60						; size = 4
_msg$ = -56						; size = 36
__$ArrayPad$ = -20					; size = 4
_ucElementCount$ = -13					; size = 1
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ PROC ; Database::SQLite::getNextMessage, COMDAT
; _this$ = ecx
; Line 707
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T363045[ebp], 0
; Line 708
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::size
	mov	BYTE PTR _ucElementCount$[ebp], al
; Line 709
	movzx	eax, BYTE PTR _ucElementCount$[ebp]
	test	eax, eax
	je	SHORT $LN3@getNextMes
; Line 711
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	add	dl, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], dl
; Line 712
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	movzx	eax, BYTE PTR _ucElementCount$[ebp]
	cmp	edx, eax
	jge	SHORT $LN2@getNextMes
; Line 714
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEAAUmessage@Database@@I@Z ; std::vector<Database::message,std::allocator<Database::message> >::operator[]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0message@Database@@QAE@ABU01@@Z
	mov	eax, DWORD PTR $T363045[ebp]
	or	eax, 1
	mov	DWORD PTR $T363045[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN4@getNextMes
; Line 716
	jmp	SHORT $LN3@getNextMes
$LN2@getNextMes:
; Line 718
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0
; Line 719
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEAAUmessage@Database@@I@Z ; std::vector<Database::message,std::allocator<Database::message> >::operator[]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0message@Database@@QAE@ABU01@@Z
	mov	edx, DWORD PTR $T363045[ebp]
	or	edx, 1
	mov	DWORD PTR $T363045[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN4@getNextMes
$LN3@getNextMes:
; Line 723
	lea	ecx, DWORD PTR _msg$[ebp]
	call	??0message@Database@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 724
	push	OFFSET $SG-81187
	lea	ecx, DWORD PTR _msg$[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 725
	mov	BYTE PTR _msg$[ebp+32], 1
; Line 726
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0message@Database@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR $T363045[ebp]
	or	ecx, 1
	mov	DWORD PTR $T363045[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _msg$[ebp]
	call	??1message@Database@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN4@getNextMes:
; Line 727
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ$1:
	lea	ecx, DWORD PTR _msg$[ebp]
	jmp	??1message@Database@@QAE@XZ
__ehhandler$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getNextMessage@SQLite@Database@@QAE?AUmessage@2@XZ ENDP ; Database::SQLite::getNextMessage
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Database::message *,Database::message *,std::allocator<Database::message>,Database::message>, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@7
$LN5@Uninit_mov@7:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 36					; 00000024H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@7:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@7
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@7
$LN4@Uninit_mov@7:
	jmp	SHORT $LN10@Uninit_mov@7
__catch$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@7
$LN2@Uninit_mov@7:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 36					; 00000024H
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@7:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@7
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@@Z ; std::_Dest_val<std::allocator<Database::message>,Database::message>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@7
$LN1@Uninit_mov@7:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@7:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@7:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Database::message *,Database::message *,std::allocator<Database::message>,Database::message>
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T364850 = -24						; size = 4
$T364849 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z PROC ; std::_Construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T364850[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T364850[ebp], 0
	je	SHORT $LN3@Construct@12
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T364850[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@12
$LN3@Construct@12:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@12:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T364849[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T364850[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ENDP ; std::_Construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@@Z
_TEXT	SEGMENT
$T364862 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@@Z PROC ; std::_Uninitialized_move<Database::message *,Database::message *,std::allocator<Database::message> >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Umessage@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUmessage@Database@@0@Z ; std::_Ptr_cat<Database::message,Database::message>
	add	esp, 8
	mov	BYTE PTR $T364862[ebp], al
	movzx	edx, BYTE PTR $T364862[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUmessage@Database@@@std@@YAPAUmessage@Database@@PAU12@@Z ; std::_Val_type<Database::message *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@U12@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Database::message *,Database::message *,std::allocator<Database::message>,Database::message>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@@Z ENDP ; std::_Uninitialized_move<Database::message *,Database::message *,std::allocator<Database::message> >
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z$0
__ehfuncinfo$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T364866 = -20						; size = 4
$T364865 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T364866[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T364866[ebp], 0
	je	SHORT $LN3@construct@26
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T364866[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@26
$LN3@construct@26:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@26:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T364865[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T364866[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV12@@std@@YAXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::_Construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAUmessage@Database@@@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEPAUmessage@Database@@PAU23@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUmessage@Database@@@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEPAUmessage@Database@@PAU23@00@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Umove<Database::message *>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUmessage@Database@@PAU12@V?$allocator@Umessage@Database@@@std@@@std@@YAPAUmessage@Database@@PAU12@00AAV?$allocator@Umessage@Database@@@0@@Z ; std::_Uninitialized_move<Database::message *,Database::message *,std::allocator<Database::message> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUmessage@Database@@@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEPAUmessage@Database@@PAU23@00@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Umove<Database::message *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV20@@Z PROC ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV20@@Z ENDP ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV20@@Z PROC ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@AAV21@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAUstruct_chatresponse@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$50352 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAUstruct_chatresponse@Database@@@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@AAU12@@Z ; std::addressof<Database::struct_chatresponse>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBE_NPBUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@11
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@Ustruct_chatresponse@Database@@@std@@YAPAUstruct_chatresponse@Database@@AAU12@@Z ; std::addressof<Database::struct_chatresponse>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 60					; 0000003cH
	idiv	ecx
	mov	DWORD PTR __Idx$50352[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@11
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve
$LN3@push_back@11:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$50352[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse>
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@11
$LN4@push_back@11:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@11
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Reserve
$LN1@push_back@11:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IBEXPAUstruct_chatresponse@Database@@0@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_chatresponse@Database@@@std@@Ustruct_chatresponse@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_chatresponse@Database@@@0@PAUstruct_chatresponse@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_chatresponse>,Database::struct_chatresponse,Database::struct_chatresponse>
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@11:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAUstruct_chatresponse@Database@@@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAUstruct_log@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$50277 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAUstruct_log@Database@@@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@AAU12@@Z ; std::addressof<Database::struct_log>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBE_NPBUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@12
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@Ustruct_log@Database@@@std@@YAPAUstruct_log@Database@@AAU12@@Z ; std::addressof<Database::struct_log>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	mov	DWORD PTR __Idx$50277[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@12
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve
$LN3@push_back@12:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$50277[ebp]
	imul	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log>
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@12
$LN4@push_back@12:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@12
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Reserve
$LN1@push_back@12:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IBEXPAUstruct_log@Database@@0@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_log@Database@@@std@@Ustruct_log@Database@@U34@@std@@YAXAAV?$allocator@Ustruct_log@Database@@@0@PAUstruct_log@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::struct_log>,Database::struct_log,Database::struct_log>
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 92					; 0000005cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@12:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAUstruct_log@Database@@@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAUban@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$50202 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAUban@Database@@@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@Uban@Database@@@std@@YAPAUban@Database@@AAU12@@Z ; std::addressof<Database::ban>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBE_NPBUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@13
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@Uban@Database@@@std@@YAPAUban@Database@@AAU12@@Z ; std::addressof<Database::ban>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 144				; 00000090H
	idiv	ecx
	mov	DWORD PTR __Idx$50202[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@13
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve
$LN3@push_back@13:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$50202[ebp]
	imul	eax, 144				; 00000090H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ; std::forward<Database::ban>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban>
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 144				; 00000090H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@13
$LN4@push_back@13:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@13
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Reserve
$LN1@push_back@13:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IBEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ; std::forward<Database::ban>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@U34@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::ban>,Database::ban,Database::ban>
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 144				; 00000090H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@13:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAUban@Database@@@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAUadmin@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$50127 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAUadmin@Database@@@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@Uadmin@Database@@@std@@YAPAUadmin@Database@@AAU12@@Z ; std::addressof<Database::admin>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBE_NPBUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@14
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@Uadmin@Database@@@std@@YAPAUadmin@Database@@AAU12@@Z ; std::addressof<Database::admin>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	mov	DWORD PTR __Idx$50127[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@14
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve
$LN3@push_back@14:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$50127[ebp]
	imul	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin>
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@14
$LN4@push_back@14:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@14
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Reserve
$LN1@push_back@14:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IBEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@U34@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::admin>,Database::admin,Database::admin>
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 92					; 0000005cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@14:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAUadmin@Database@@@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$50004 = -24					; size = 4
__Ptr$49997 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@11
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::message,std::allocator<Database::message> >::_Xlen
	jmp	$LN7@reserve@11
$LN5@reserve@11:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@11
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@Umessage@Database@@@std@@QAEPAUmessage@Database@@I@Z ; std::allocator<Database::message>::allocate
	mov	DWORD PTR __Ptr$49997[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$49997[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUmessage@Database@@@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEPAUmessage@Database@@PAU23@00@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Umove<Database::message *>
	jmp	SHORT $LN8@reserve@11
__catch$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$49997[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@I@Z ; std::allocator<Database::message>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@11:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::size
	mov	DWORD PTR __Size$50004[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@11
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXPAUmessage@Database@@0@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Umessage@Database@@@std@@QAEXPAUmessage@Database@@I@Z ; std::allocator<Database::message>::deallocate
$LN1@reserve@11:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 36					; 00000024H
	add	ecx, DWORD PTR __Ptr$49997[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 770
	mov	eax, DWORD PTR __Size$50004[ebp]
	imul	eax, 36					; 00000024H
	add	eax, DWORD PTR __Ptr$49997[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$49997[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve@11:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::reserve
; Function compile flags: /Odtp
;	COMDAT ?_Assign_rv@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T364911 = -12						; size = 4
$T364910 = -6						; size = 1
$T364909 = -5						; size = 1
__Next$49209 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@2
	jmp	$LN8@Assign_rv@2
$LN7@Assign_rv@2:
; Line 609
	lea	ecx, DWORD PTR $T364909[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_chatresponse@Database@@@2@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T364910[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_chatresponse@Database@@@2@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::get_allocator
	push	eax
	call	??$?9Ustruct_chatresponse@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_chatresponse@Database@@@0@0@Z ; std::operator!=<Database::struct_chatresponse,Database::struct_chatresponse>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@2
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$49209[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@2@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::begin
	jmp	SHORT $LN4@Assign_rv@2
$LN3@Assign_rv@2:
; Line 613
	lea	ecx, DWORD PTR __Next$49209[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator++
$LN4@Assign_rv@2:
	lea	edx, DWORD PTR $T364911[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@2@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$49209[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@2
; Line 614
	lea	ecx, DWORD PTR __Next$49209[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@QBEAAUstruct_chatresponse@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >::operator*
	push	eax
	call	??$forward@Ustruct_chatresponse@Database@@@std@@YA$$QAUstruct_chatresponse@Database@@AAU12@@Z ; std::forward<Database::struct_chatresponse>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back
	jmp	SHORT $LN3@Assign_rv@2
$LN2@Assign_rv@2:
; Line 616
	jmp	SHORT $LN8@Assign_rv@2
$LN5@Assign_rv@2:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@2:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Assign_rv
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Assign_rv@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T364916 = -12						; size = 4
$T364915 = -6						; size = 1
$T364914 = -5						; size = 1
__Next$48989 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@3
	jmp	$LN8@Assign_rv@3
$LN7@Assign_rv@3:
; Line 609
	lea	ecx, DWORD PTR $T364914[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_log@Database@@@2@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T364915[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QBE?AV?$allocator@Ustruct_log@Database@@@2@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::get_allocator
	push	eax
	call	??$?9Ustruct_log@Database@@U01@@std@@YA_NABV?$allocator@Ustruct_log@Database@@@0@0@Z ; std::operator!=<Database::struct_log,Database::struct_log>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@3
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$48989[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@2@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::begin
	jmp	SHORT $LN4@Assign_rv@3
$LN3@Assign_rv@3:
; Line 613
	lea	ecx, DWORD PTR __Next$48989[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator++
$LN4@Assign_rv@3:
	lea	edx, DWORD PTR $T364916[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@2@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$48989[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@3
; Line 614
	lea	ecx, DWORD PTR __Next$48989[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@QBEAAUstruct_log@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> > >::operator*
	push	eax
	call	??$forward@Ustruct_log@Database@@@std@@YA$$QAUstruct_log@Database@@AAU12@@Z ; std::forward<Database::struct_log>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back
	jmp	SHORT $LN3@Assign_rv@3
$LN2@Assign_rv@3:
; Line 616
	jmp	SHORT $LN8@Assign_rv@3
$LN5@Assign_rv@3:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@3:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Assign_rv
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Assign_rv@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T364921 = -12						; size = 4
$T364920 = -6						; size = 1
$T364919 = -5						; size = 1
__Next$48769 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@4
	jmp	$LN8@Assign_rv@4
$LN7@Assign_rv@4:
; Line 609
	lea	ecx, DWORD PTR $T364919[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBE?AV?$allocator@Uban@Database@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T364920[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QBE?AV?$allocator@Uban@Database@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::get_allocator
	push	eax
	call	??$?9Uban@Database@@U01@@std@@YA_NABV?$allocator@Uban@Database@@@0@0@Z ; std::operator!=<Database::ban,Database::ban>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@4
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$48769[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::begin
	jmp	SHORT $LN4@Assign_rv@4
$LN3@Assign_rv@4:
; Line 613
	lea	ecx, DWORD PTR __Next$48769[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
$LN4@Assign_rv@4:
	lea	edx, DWORD PTR $T364921[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$48769[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@4
; Line 614
	lea	ecx, DWORD PTR __Next$48769[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEAAUban@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
	push	eax
	call	??$forward@Uban@Database@@@std@@YA$$QAUban@Database@@AAU12@@Z ; std::forward<Database::ban>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back
	jmp	SHORT $LN3@Assign_rv@4
$LN2@Assign_rv@4:
; Line 616
	jmp	SHORT $LN8@Assign_rv@4
$LN5@Assign_rv@4:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@4:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Assign_rv
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Assign_rv@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T364926 = -12						; size = 4
$T364925 = -6						; size = 1
$T364924 = -5						; size = 1
__Next$48549 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@5
	jmp	$LN8@Assign_rv@5
$LN7@Assign_rv@5:
; Line 609
	lea	ecx, DWORD PTR $T364924[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBE?AV?$allocator@Uadmin@Database@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T364925[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QBE?AV?$allocator@Uadmin@Database@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::get_allocator
	push	eax
	call	??$?9Uadmin@Database@@U01@@std@@YA_NABV?$allocator@Uadmin@Database@@@0@0@Z ; std::operator!=<Database::admin,Database::admin>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@5
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$48549[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::begin
	jmp	SHORT $LN4@Assign_rv@5
$LN3@Assign_rv@5:
; Line 613
	lea	ecx, DWORD PTR __Next$48549[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
$LN4@Assign_rv@5:
	lea	edx, DWORD PTR $T364926[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$48549[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@5
; Line 614
	lea	ecx, DWORD PTR __Next$48549[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEAAUadmin@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
	push	eax
	call	??$forward@Uadmin@Database@@@std@@YA$$QAUadmin@Database@@AAU12@@Z ; std::forward<Database::admin>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back
	jmp	SHORT $LN3@Assign_rv@5
$LN2@Assign_rv@5:
; Line 616
	jmp	SHORT $LN8@Assign_rv@5
$LN5@Assign_rv@5:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@5:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Assign_rv
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@10
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXXZ ; std::vector<Database::message,std::allocator<Database::message> >::_Xlen
	jmp	SHORT $LN6@Reserve@10
$LN4@Reserve@10:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBEIXZ ; std::vector<Database::message,std::allocator<Database::message> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@10
; Line 1296
	jmp	SHORT $LN6@Reserve@10
$LN2@Reserve@10:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEII@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::reserve
$LN6@Reserve@10:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T364931 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T364931[ebp], esp
	push	eax
	call	??0?$allocator@Ustruct_chatresponse@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_chatresponse>::allocator<Database::struct_chatresponse>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_chatresponse@Database@@@1@@Z ; std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::~_Vector_val<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
__ehhandler$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T364941 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T364941[ebp], esp
	push	eax
	call	??0?$allocator@Ustruct_log@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::struct_log>::allocator<Database::struct_log>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@V?$allocator@Ustruct_log@Database@@@1@@Z ; std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::struct_log,std::allocator<Database::struct_log> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >::~_Vector_val<Database::struct_log,std::allocator<Database::struct_log> >
__ehhandler$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T364951 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T364951[ebp], esp
	push	eax
	call	??0?$allocator@Uban@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::ban>::allocator<Database::ban>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@V?$allocator@Uban@Database@@@1@@Z ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::_Vector_val<Database::ban,std::allocator<Database::ban> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::ban,std::allocator<Database::ban> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::~_Vector_val<Database::ban,std::allocator<Database::ban> >
__ehhandler$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T364961 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T364961[ebp], esp
	push	eax
	call	??0?$allocator@Uadmin@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::admin>::allocator<Database::admin>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@V?$allocator@Uadmin@Database@@@1@@Z ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::_Vector_val<Database::admin,std::allocator<Database::admin> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::admin,std::allocator<Database::admin> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::~_Vector_val<Database::admin,std::allocator<Database::admin> >
__ehhandler$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXABUmessage@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$45588 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXABUmessage@Database@@@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUmessage@Database@@@std@@YAPBUmessage@Database@@ABU12@@Z ; std::addressof<Database::message const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBE_NPBUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@15
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUmessage@Database@@@std@@YAPBUmessage@Database@@ABU12@@Z ; std::addressof<Database::message const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
	mov	DWORD PTR __Idx$45588[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@15
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve
$LN3@push_back@15:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$45588[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@AAU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@AAU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@15
$LN4@push_back@15:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@15
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve
$LN1@push_back@15:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@ABU34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@ABU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@15:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXABUmessage@Database@@@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::push_back
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAUmessage@Database@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$49978 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAUmessage@Database@@@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@Umessage@Database@@@std@@YAPAUmessage@Database@@AAU12@@Z ; std::addressof<Database::message>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBE_NPBUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@18
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@Umessage@Database@@@std@@YAPAUmessage@Database@@AAU12@@Z ; std::addressof<Database::message>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 36					; 00000024H
	idiv	ecx
	mov	DWORD PTR __Idx$49978[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@18
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve
$LN3@push_back@18:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$49978[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ; std::forward<Database::message>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message>
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@18
$LN4@push_back@18:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@18
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXI@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Reserve
$LN1@push_back@18:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IBEXPAUmessage@Database@@0@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ; std::forward<Database::message>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Umessage@Database@@@std@@Umessage@Database@@U34@@std@@YAXAAV?$allocator@Umessage@Database@@@0@PAUmessage@Database@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Database::message>,Database::message,Database::message>
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@18:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAUmessage@Database@@@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Assign_rv@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T366644 = -12						; size = 4
$T366643 = -6						; size = 1
$T366642 = -5						; size = 1
__Next$48217 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAV12@@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@6
	jmp	$LN8@Assign_rv@6
$LN7@Assign_rv@6:
; Line 609
	lea	ecx, DWORD PTR $T366642[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBE?AV?$allocator@Umessage@Database@@@2@XZ ; std::vector<Database::message,std::allocator<Database::message> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T366643[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QBE?AV?$allocator@Umessage@Database@@@2@XZ ; std::vector<Database::message,std::allocator<Database::message> >::get_allocator
	push	eax
	call	??$?9Umessage@Database@@U01@@std@@YA_NABV?$allocator@Umessage@Database@@@0@0@Z ; std::operator!=<Database::message,Database::message>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@6
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXXZ ; std::vector<Database::message,std::allocator<Database::message> >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$48217[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@2@XZ ; std::vector<Database::message,std::allocator<Database::message> >::begin
	jmp	SHORT $LN4@Assign_rv@6
$LN3@Assign_rv@6:
; Line 613
	lea	ecx, DWORD PTR __Next$48217[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator++
$LN4@Assign_rv@6:
	lea	edx, DWORD PTR $T366644[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@2@XZ ; std::vector<Database::message,std::allocator<Database::message> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$48217[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@6
; Line 614
	lea	ecx, DWORD PTR __Next$48217[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@QBEAAUmessage@Database@@XZ ; std::_Vector_iterator<std::_Vector_val<Database::message,std::allocator<Database::message> > >::operator*
	push	eax
	call	??$forward@Umessage@Database@@@std@@YA$$QAUmessage@Database@@AAU12@@Z ; std::forward<Database::message>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::push_back
	jmp	SHORT $LN3@Assign_rv@6
$LN2@Assign_rv@6:
; Line 616
	jmp	SHORT $LN8@Assign_rv@6
$LN5@Assign_rv@6:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::message,std::allocator<Database::message> >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@6:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::_Assign_rv
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T366647 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T366647[ebp], esp
	push	eax
	call	??0?$allocator@Umessage@Database@@@std@@QAE@ABV01@@Z ; std::allocator<Database::message>::allocator<Database::message>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@V?$allocator@Umessage@Database@@@1@@Z ; std::_Vector_val<Database::message,std::allocator<Database::message> >::_Vector_val<Database::message,std::allocator<Database::message> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@@std@@YA$$QAV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@0@AAV10@@Z ; std::forward<std::vector<Database::message,std::allocator<Database::message> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEX$$QAV12@@Z ; std::vector<Database::message,std::allocator<Database::message> >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::message,std::allocator<Database::message> >::~_Vector_val<Database::message,std::allocator<Database::message> >
__ehhandler$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2524
	push	ebp
	mov	ebp, esp
; Line 2525
	jmp	SHORT $LN3@Move@11
$LN2@Move@11:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Move@11:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Move@11
; Line 2526
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
	jmp	SHORT $LN2@Move@11
$LN1@Move@11:
; Line 2527
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2528
	pop	ebp
	ret	0
??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00@Z
_TEXT	SEGMENT
$T367845 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00@Z PROC ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>, COMDAT
; Line 2545
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2547
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	mov	BYTE PTR $T367845[ebp], al
	movzx	edx, BYTE PTR $T367845[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
	add	esp, 16					; 00000010H
; Line 2548
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00@Z ENDP ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T367848 = -16						; size = 4
__Ptr$50762 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@0@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::erase, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Make_iter
; Line 1192
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Make_iter
; Line 1194
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@20
; Line 1207
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00@Z ; std::_Move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$50762[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$50762[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy
; Line 1211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$50762[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@erase@20:
; Line 1213
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T367848[ebp], eax
	mov	ecx, DWORD PTR $T367848[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@0@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T367855 = -20						; size = 4
$T367854 = -16						; size = 4
$T367853 = -12						; size = 4
$T367852 = -8						; size = 4
$T367851 = -4						; size = 4
?clear@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T367852[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T367851[ebp], ecx
	lea	edx, DWORD PTR $T367854[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T367853[ebp], eax
	mov	ecx, DWORD PTR $T367851[ebp]
	push	ecx
	mov	edx, DWORD PTR $T367853[ebp]
	push	edx
	lea	eax, DWORD PTR $T367855[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::erase
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::clear
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T368527 = -20						; size = 4
$T368526 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z PROC ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T368527[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T368527[ebp], 0
	je	SHORT $LN3@construct@29
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T368527[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@29
$LN3@construct@29:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@29:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T368526[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T368527[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z ENDP ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z PROC ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@$$QAV32@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@12
$LN5@Uninit_mov@12:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@12:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@12
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@12
$LN4@Uninit_mov@12:
	jmp	SHORT $LN10@Uninit_mov@12
__catch$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@12
$LN2@Uninit_mov@12:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@12:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@12
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@@Z ; std::_Dest_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@12
$LN1@Uninit_mov@12:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@12:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@12:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
$T369157 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	mov	BYTE PTR $T369157[ebp], al
	movzx	edx, BYTE PTR $T369157[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@@Z ; std::_Val_type<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V12@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PAV21@00@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Umove<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PAV12@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Uninitialized_move<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PAV21@00@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Umove<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$50066 = -24					; size = 4
__Ptr$50059 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@16
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Xlen
	jmp	$LN7@reserve@16
$LN5@reserve@16:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@16
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocate
	mov	DWORD PTR __Ptr$50059[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$50059[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Umove<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > *>
	jmp	SHORT $LN8@reserve@16
__catch$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$50059[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@16:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::size
	mov	DWORD PTR __Size$50066[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@16
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	sar	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@I@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::deallocate
$LN1@reserve@16:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 4
	add	eax, DWORD PTR __Ptr$50059[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 770
	mov	edx, DWORD PTR __Size$50066[ebp]
	shl	edx, 4
	add	edx, DWORD PTR __Ptr$50059[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 771
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$50059[ebp]
	mov	DWORD PTR [ecx], edx
$LN7@reserve@16:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::reserve
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@15
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Xlen
	jmp	SHORT $LN6@Reserve@15
$LN4@Reserve@15:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@15
; Line 1296
	jmp	SHORT $LN6@Reserve@15
$LN2@Reserve@15:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::reserve
$LN6@Reserve@15:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$45788 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBE_NPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@22
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV10@@Z ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 4
	mov	DWORD PTR __Idx$45788[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@22
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve
$LN3@push_back@22:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$45788[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@22
$LN4@push_back@22:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@22
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve
$LN1@push_back@22:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@22:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$50040 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBE_NPBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@23
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::addressof<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 4
	mov	DWORD PTR __Idx$50040[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@23
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve
$LN3@push_back@23:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$50040[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@23
$LN4@push_back@23:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@23
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Reserve
$LN1@push_back@23:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IBEXPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V32@@std@@YAXAAV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@PAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@23:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Assign_rv@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T369458 = -12						; size = 4
$T369457 = -6						; size = 1
$T369456 = -5						; size = 1
__Next$48337 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV12@@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Assign_rv, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@8
	jmp	$LN8@Assign_rv@8
$LN7@Assign_rv@8:
; Line 609
	lea	ecx, DWORD PTR $T369456[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T369457[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QBE?AV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::get_allocator
	push	eax
	call	??$?9V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V01@@std@@YA_NABV?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0@Z ; std::operator!=<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@8
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$48337[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN4@Assign_rv@8
$LN3@Assign_rv@8:
; Line 613
	lea	ecx, DWORD PTR __Next$48337[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN4@Assign_rv@8:
	lea	edx, DWORD PTR $T369458[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR __Next$48337[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@8
; Line 614
	lea	ecx, DWORD PTR __Next$48337[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back
	jmp	SHORT $LN3@Assign_rv@8
$LN2@Assign_rv@8:
; Line 616
	jmp	SHORT $LN8@Assign_rv@8
$LN5@Assign_rv@8:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@8:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Assign_rv
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T369461 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T369461[ebp], esp
	push	eax
	call	??0?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEX$$QAV12@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__ehhandler$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::open
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\sqlite.cpp
xdata$x	SEGMENT
__unwindtable$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T370921 = -18						; size = 1
$T370920 = -17						; size = 1
__$EHRec$ = -12						; size = 12
_filename$ = 8						; size = 28
?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::open, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	_sqlite3_open
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@open@4
; Line 23
	mov	BYTE PTR $T370920[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T370920[ebp]
	jmp	SHORT $LN2@open@4
$LN1@open@4:
; Line 25
	mov	BYTE PTR $T370921[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T370921[ebp]
$LN2@open@4:
; Line 26
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::open
PUBLIC	__$ArrayPad$
PUBLIC	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$5
__ehfuncinfo$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
_TEXT	SEGMENT
tv179 = -172						; size = 4
tv177 = -168						; size = 4
tv133 = -164						; size = 4
_this$ = -160						; size = 4
$T371333 = -156						; size = 4
$T371324 = -152						; size = 4
_col$40150 = -148					; size = 4
_values$40149 = -144					; size = 16
_result$40140 = -128					; size = 4
_cols$40139 = -124					; size = 4
_statement$ = -120					; size = 4
_error$ = -116						; size = 28
_results$ = -88						; size = 16
$T40186 = -72						; size = 28
$T40155 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_query$ = 12						; size = 28
?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z PROC ; Database::SQLite::query, COMDAT
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371333[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 31
	lea	ecx, DWORD PTR _results$[ebp]
	call	??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 33
	push	0
	lea	eax, DWORD PTR _statement$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _query$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_sqlite3_prepare_v2
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN9@query
; Line 35
	mov	eax, DWORD PTR _statement$[ebp]
	push	eax
	call	_sqlite3_column_count
	add	esp, 4
	mov	DWORD PTR _cols$40139[ebp], eax
; Line 36
	mov	DWORD PTR _result$40140[ebp], 0
$LN8@query:
; Line 37
	mov	ecx, 1
	test	ecx, ecx
	je	$LN7@query
; Line 39
	mov	edx, DWORD PTR _statement$[ebp]
	push	edx
	call	_sqlite3_step
	add	esp, 4
	mov	DWORD PTR _result$40140[ebp], eax
; Line 41
	cmp	DWORD PTR _result$40140[ebp], 100	; 00000064H
	jne	$LN6@query
; Line 43
	lea	ecx, DWORD PTR _values$40149[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 44
	mov	DWORD PTR _col$40150[ebp], 0
	jmp	SHORT $LN5@query
$LN4@query:
	mov	eax, DWORD PTR _col$40150[ebp]
	add	eax, 1
	mov	DWORD PTR _col$40150[ebp], eax
$LN5@query:
	mov	ecx, DWORD PTR _col$40150[ebp]
	cmp	ecx, DWORD PTR _cols$40139[ebp]
	jge	SHORT $LN3@query
; Line 46
	mov	edx, DWORD PTR _col$40150[ebp]
	push	edx
	mov	eax, DWORD PTR _statement$[ebp]
	push	eax
	call	_sqlite3_column_text
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR $T40155[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T40155[ebp]
	push	ecx
	lea	ecx, DWORD PTR _values$40149[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T40155[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 47
	jmp	SHORT $LN4@query
$LN3@query:
; Line 48
	lea	edx, DWORD PTR _values$40149[ebp]
	push	edx
	lea	ecx, DWORD PTR _results$[ebp]
	call	?push_back@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAEXABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::push_back
; Line 49
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _values$40149[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Line 50
	jmp	SHORT $LN2@query
$LN6@query:
; Line 52
	jmp	SHORT $LN7@query
$LN2@query:
; Line 54
	jmp	$LN8@query
$LN7@query:
; Line 56
	mov	eax, DWORD PTR _statement$[ebp]
	push	eax
	call	_sqlite3_finalize
	add	esp, 4
$LN9@query:
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_sqlite3_errmsg
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _error$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 60
	push	OFFSET $SG-80963
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@query
; Line 61
	push	OFFSET $SG-80964
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	lea	eax, DWORD PTR $T40186[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv177[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T371324[ebp], esp
	lea	eax, DWORD PTR _query$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv177[ebp]
	push	ecx
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv179[ebp], eax
	push	61					; 0000003dH
	push	OFFSET $SG-80965
	push	OFFSET $SG-80966
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T40186[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@query:
; Line 63
	lea	edx, DWORD PTR _results$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR $T371333[ebp]
	or	eax, 1
	mov	DWORD PTR $T371333[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _error$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _results$[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _query$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 64
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$0:
	lea	ecx, DWORD PTR _query$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$1:
	lea	ecx, DWORD PTR _results$[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$2:
	lea	ecx, DWORD PTR _values$40149[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$3:
	lea	ecx, DWORD PTR $T40155[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$4:
	lea	ecx, DWORD PTR _error$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$5:
	lea	ecx, DWORD PTR $T40186[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z$7:
	mov	eax, DWORD PTR $T371333[ebp]
	and	eax, 1
	je	$LN20@query
	and	DWORD PTR $T371333[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
$LN20@query:
	ret	0
__ehhandler$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ENDP ; Database::SQLite::query
PUBLIC	?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ ; Database::SQLite::getServerSettings
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$4
	DD	01H
	DD	FLAT:__unwindfunclet$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$5
	DD	0ffffffffH
	DD	00H
__catchsym$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffc4H
	DD	FLAT:__catch$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$1
__tryblocktable$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ DD 00H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$9
__ehfuncinfo$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ
_TEXT	SEGMENT
tv282 = -212						; size = 4
tv279 = -208						; size = 4
tv309 = -202						; size = 2
tv308 = -200						; size = 4
tv307 = -193						; size = 1
tv306 = -192						; size = 4
tv305 = -185						; size = 1
tv304 = -184						; size = 4
tv302 = -178						; size = 2
tv301 = -176						; size = 4
tv300 = -169						; size = 1
tv299 = -168						; size = 4
tv298 = -161						; size = 1
tv297 = -160						; size = 4
tv296 = -153						; size = 1
tv295 = -152						; size = 4
tv294 = -145						; size = 1
tv293 = -144						; size = 4
tv292 = -140						; size = 4
tv291 = -136						; size = 4
tv290 = -130						; size = 2
tv289 = -128						; size = 4
tv288 = -124						; size = 4
tv287 = -120						; size = 4
tv286 = -116						; size = 4
tv146 = -112						; size = 4
tv285 = -108						; size = 4
tv284 = -104						; size = 4
tv272 = -100						; size = 4
tv271 = -96						; size = 4
_this$ = -92						; size = 4
$T371355 = -88						; size = 4
$T371354 = -84						; size = 4
$T371353 = -80						; size = 4
$T371350 = -76						; size = 4
$T371349 = -72						; size = 4
$T371348 = -68						; size = 4
$T371347 = -64						; size = 4
_e$43058 = -60						; size = 4
_row$43042 = -56					; size = 16
_settings$43043 = -40					; size = 4
_it$43032 = -36						; size = 4
_result$43028 = -32					; size = 16
__$EHRec$ = -16						; size = 16
?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ PROC ; Database::SQLite::getServerSettings, COMDAT
; _this$ = ecx
; Line 1003
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1005
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1006
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371347[ebp], esp
	push	OFFSET $SG-81282
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv271[ebp], eax
	lea	eax, DWORD PTR _result$43028[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv272[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 1007
	lea	ecx, DWORD PTR _it$43032[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$43028[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@getServerS
$LN2@getServerS:
	lea	ecx, DWORD PTR _it$43032[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@getServerS:
	lea	edx, DWORD PTR $T371348[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$43028[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$43032[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@getServerS
; Line 1009
	lea	ecx, DWORD PTR _it$43032[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv284[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1010
	push	160					; 000000a0H
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T371350[ebp], ecx
	cmp	DWORD PTR $T371350[ebp], 0
	je	SHORT $LN7@getServerS
	mov	ecx, DWORD PTR $T371350[ebp]
	call	??0struct_settings@Database@@QAE@XZ
	mov	DWORD PTR tv146[ebp], eax
	jmp	SHORT $LN8@getServerS
$LN7@getServerS:
	mov	DWORD PTR tv146[ebp], 0
$LN8@getServerS:
	mov	edx, DWORD PTR tv146[ebp]
	mov	DWORD PTR $T371349[ebp], edx
	mov	eax, DWORD PTR $T371349[ebp]
	mov	DWORD PTR _settings$43043[ebp], eax
; Line 1011
	push	0
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv286[ebp], eax
	mov	ecx, DWORD PTR tv286[ebp]
	push	ecx
	mov	ecx, DWORD PTR _settings$43043[ebp]
	add	ecx, 124				; 0000007cH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 1012
	push	1
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv287[ebp], eax
	mov	edx, DWORD PTR tv287[ebp]
	push	edx
	mov	ecx, DWORD PTR _settings$43043[ebp]
	add	ecx, 96					; 00000060H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 1013
	push	2
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv288[ebp], eax
	mov	eax, DWORD PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR _settings$43043[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 1014
	push	3
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv289[ebp], eax
	mov	ecx, DWORD PTR tv289[ebp]
	push	ecx
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	WORD PTR tv290[ebp], ax
	mov	edx, DWORD PTR _settings$43043[ebp]
	mov	ax, WORD PTR tv290[ebp]
	mov	WORD PTR [edx+28], ax
; Line 1015
	push	4
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv291[ebp], eax
	mov	ecx, DWORD PTR tv291[ebp]
	push	ecx
	mov	ecx, DWORD PTR _settings$43043[ebp]
	add	ecx, 32					; 00000020H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 1016
	push	5
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv292[ebp], eax
	mov	edx, DWORD PTR tv292[ebp]
	push	edx
	mov	ecx, DWORD PTR _settings$43043[ebp]
	add	ecx, 60					; 0000003cH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 1017
	push	6
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv293[ebp], eax
	mov	eax, DWORD PTR tv293[ebp]
	push	eax
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv294[ebp], al
	mov	ecx, DWORD PTR _settings$43043[ebp]
	mov	dl, BYTE PTR tv294[ebp]
	mov	BYTE PTR [ecx+92], dl
; Line 1018
	push	7
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv295[ebp], eax
	mov	eax, DWORD PTR tv295[ebp]
	push	eax
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv296[ebp], al
	mov	ecx, DWORD PTR _settings$43043[ebp]
	mov	dl, BYTE PTR tv296[ebp]
	mov	BYTE PTR [ecx+93], dl
; Line 1019
	push	8
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv297[ebp], eax
	mov	eax, DWORD PTR tv297[ebp]
	push	eax
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv298[ebp], al
	mov	ecx, DWORD PTR _settings$43043[ebp]
	mov	dl, BYTE PTR tv298[ebp]
	mov	BYTE PTR [ecx+152], dl
; Line 1020
	push	9
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv299[ebp], eax
	mov	eax, DWORD PTR tv299[ebp]
	push	eax
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv300[ebp], al
	mov	ecx, DWORD PTR _settings$43043[ebp]
	mov	dl, BYTE PTR tv300[ebp]
	mov	BYTE PTR [ecx+153], dl
; Line 1021
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv301[ebp], eax
	mov	eax, DWORD PTR tv301[ebp]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	WORD PTR tv302[ebp], ax
	mov	ecx, DWORD PTR _settings$43043[ebp]
	mov	dl, BYTE PTR tv302[ebp]
	mov	BYTE PTR [ecx+154], dl
; Line 1022
	mov	eax, DWORD PTR _settings$43043[ebp]
	mov	BYTE PTR [eax+155], 0
; Line 1023
	push	11					; 0000000bH
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv304[ebp], eax
	mov	ecx, DWORD PTR tv304[ebp]
	push	ecx
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv305[ebp], al
	mov	edx, DWORD PTR _settings$43043[ebp]
	mov	al, BYTE PTR tv305[ebp]
	mov	BYTE PTR [edx+156], al
; Line 1024
	push	12					; 0000000cH
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv306[ebp], eax
	mov	ecx, DWORD PTR tv306[ebp]
	push	ecx
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv307[ebp], al
	mov	edx, DWORD PTR _settings$43043[ebp]
	mov	al, BYTE PTR tv307[ebp]
	mov	BYTE PTR [edx+157], al
; Line 1025
	push	13					; 0000000dH
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv308[ebp], eax
	mov	ecx, DWORD PTR tv308[ebp]
	push	ecx
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	WORD PTR tv309[ebp], ax
	mov	edx, DWORD PTR _settings$43043[ebp]
	mov	al, BYTE PTR tv309[ebp]
	mov	BYTE PTR [edx+158], al
; Line 1027
	mov	ecx, DWORD PTR _settings$43043[ebp]
	mov	DWORD PTR $T371353[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _row$43042[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$43028[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR $T371353[ebp]
	jmp	$LN5@getServerS
; Line 1028
	jmp	$LN2@getServerS
$LN1@getServerS:
; Line 1029
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$43028[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN9@getServerS
__catch$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$0:
; Line 1032
	mov	edx, DWORD PTR _e$43058[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$43058[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371354[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv279[ebp], eax
	push	1032					; 00000408H
	push	OFFSET $SG-81283
	push	OFFSET $SG-81284
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 1033
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$2
	ret	0
__catch$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$1:
; Line 1036
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371355[ebp], esp
	push	OFFSET $SG-81285
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv282[ebp], eax
	push	1036					; 0000040cH
	push	OFFSET $SG-81286
	push	OFFSET $SG-81287
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 1037
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$2
	ret	0
$LN9@getServerS:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$2:
; Line 1039
	xor	eax, eax
$LN5@getServerS:
; Line 1040
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$4:
	lea	ecx, DWORD PTR _result$43028[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ$5:
	lea	ecx, DWORD PTR _row$43042[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ ENDP ; Database::SQLite::getServerSettings
PUBLIC	__$ArrayPad$
PUBLIC	?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::addRestrictedWeapon
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T371385 = -80						; size = 4
$T371384 = -76						; size = 4
$T371383 = -72						; size = 16
$T371382 = -56						; size = 4
_e$43016 = -52						; size = 4
$T43010 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sWeapon$ = 8						; size = 28
?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::addRestrictedWeapon, COMDAT
; _this$ = ecx
; Line 987
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 989
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 990
	lea	eax, DWORD PTR _sWeapon$[ebp]
	push	eax
	push	OFFSET $SG-81276
	lea	ecx, DWORD PTR $T43010[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371382[ebp], esp
	push	OFFSET $SG-81275
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T371383[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T371383[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T43010[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 991
	jmp	SHORT $LN4@addRestric@2
__catch$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 994
	mov	eax, DWORD PTR _e$43016[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$43016[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371384[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	994					; 000003e2H
	push	OFFSET $SG-81277
	push	OFFSET $SG-81278
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 995
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 998
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371385[ebp], esp
	push	OFFSET $SG-81279
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	998					; 000003e6H
	push	OFFSET $SG-81280
	push	OFFSET $SG-81281
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 999
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@addRestric@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 1000
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sWeapon$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sWeapon$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T43010[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::addRestrictedWeapon
PUBLIC	__$ArrayPad$
PUBLIC	?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::deleteRestrictedWeapon
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T371415 = -80						; size = 4
$T371414 = -76						; size = 4
$T371413 = -72						; size = 16
$T371412 = -56						; size = 4
_e$42997 = -52						; size = 4
$T42991 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sWeapon$ = 8						; size = 28
?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::deleteRestrictedWeapon, COMDAT
; _this$ = ecx
; Line 971
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 973
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 974
	lea	eax, DWORD PTR _sWeapon$[ebp]
	push	eax
	push	OFFSET $SG-81269
	lea	ecx, DWORD PTR $T42991[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371412[ebp], esp
	push	OFFSET $SG-81268
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T371413[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T371413[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T42991[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 975
	jmp	SHORT $LN4@deleteRest
__catch$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 978
	mov	eax, DWORD PTR _e$42997[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42997[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371414[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	978					; 000003d2H
	push	OFFSET $SG-81270
	push	OFFSET $SG-81271
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 979
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 982
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371415[ebp], esp
	push	OFFSET $SG-81272
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	982					; 000003d6H
	push	OFFSET $SG-81273
	push	OFFSET $SG-81274
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 983
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@deleteRest:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 984
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sWeapon$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sWeapon$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T42991[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::deleteRestrictedWeapon
PUBLIC	?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::restrictedWeaponsList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$9
	DD	00H
	DD	FLAT:__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6
	DD	01H
	DD	00H
__catchsym$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffb8H
	DD	FLAT:__catch$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1
__tryblocktable$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 02H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10
__ehfuncinfo$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
_TEXT	SEGMENT
tv199 = -120						; size = 4
tv196 = -116						; size = 4
tv206 = -112						; size = 4
tv65 = -108						; size = 4
tv192 = -104						; size = 4
tv191 = -100						; size = 4
_this$ = -96						; size = 4
$T371455 = -92						; size = 4
$T371444 = -88						; size = 4
$T371443 = -84						; size = 4
$T371442 = -80						; size = 4
$T371441 = -76						; size = 4
_e$42978 = -72						; size = 4
_row$42977 = -68					; size = 16
_it$42967 = -52						; size = 4
_result$42963 = -48					; size = 16
_lRestrictedWeapons$ = -32				; size = 16
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ PROC ; Database::SQLite::restrictedWeaponsList, COMDAT
; _this$ = ecx
; Line 947
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371455[ebp], 0
; Line 948
	lea	ecx, DWORD PTR _lRestrictedWeapons$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 950
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 951
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371441[ebp], esp
	push	OFFSET $SG-81262
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv191[ebp], eax
	lea	eax, DWORD PTR _result$42963[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 952
	lea	ecx, DWORD PTR _it$42967[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42963[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@restricted
$LN2@restricted:
	lea	ecx, DWORD PTR _it$42967[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@restricted:
	lea	edx, DWORD PTR $T371442[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42963[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42967[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@restricted
; Line 954
	lea	ecx, DWORD PTR _it$42967[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42977[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 955
	push	0
	lea	ecx, DWORD PTR _row$42977[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR tv206[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lRestrictedWeapons$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 956
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$42977[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	SHORT $LN2@restricted
$LN1@restricted:
; Line 957
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$42963[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	SHORT $LN7@restricted
__catch$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0:
; Line 960
	mov	edx, DWORD PTR _e$42978[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$42978[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371443[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	push	960					; 000003c0H
	push	OFFSET $SG-81263
	push	OFFSET $SG-81264
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 961
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
__catch$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1:
; Line 964
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371444[ebp], esp
	push	OFFSET $SG-81265
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv199[ebp], eax
	push	964					; 000003c4H
	push	OFFSET $SG-81266
	push	OFFSET $SG-81267
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 965
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
$LN7@restricted:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2:
; Line 967
	lea	eax, DWORD PTR _lRestrictedWeapons$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR $T371455[ebp]
	or	ecx, 1
	mov	DWORD PTR $T371455[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _lRestrictedWeapons$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 968
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3:
	lea	ecx, DWORD PTR _lRestrictedWeapons$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$42963[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$42977[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$9:
	mov	eax, DWORD PTR $T371455[ebp]
	and	eax, 1
	je	$LN17@restricted
	and	DWORD PTR $T371455[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN17@restricted:
	ret	0
__ehhandler$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?restrictedWeaponsList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ENDP ; Database::SQLite::restrictedWeaponsList
PUBLIC	__$ArrayPad$
PUBLIC	?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateServerSetting
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7
	DD	01H
	DD	00H
__catchsym$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff94H
	DD	FLAT:__catch$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12
__ehfuncinfo$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv189 = -180						; size = 4
tv186 = -176						; size = 4
tv183 = -172						; size = 4
tv182 = -168						; size = 4
tv180 = -164						; size = 4
tv195 = -160						; size = 4
tv178 = -156						; size = 4
tv194 = -152						; size = 4
tv176 = -148						; size = 4
tv193 = -144						; size = 4
_this$ = -140						; size = 4
$T371477 = -136						; size = 4
$T371476 = -132						; size = 4
$T371475 = -128						; size = 16
$T371474 = -112						; size = 4
_e$42941 = -108						; size = 4
$T42934 = -104						; size = 28
$T42933 = -76						; size = 28
$T42932 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_propertyName$ = 8					; size = 28
_value$ = 36						; size = 28
?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::updateServerSetting, COMDAT
; _this$ = ecx
; Line 930
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 932
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 933
	lea	eax, DWORD PTR _propertyName$[ebp]
	push	eax
	push	OFFSET $SG-81256
	lea	ecx, DWORD PTR $T42932[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv176[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET $SG-81255
	mov	eax, DWORD PTR tv176[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42933[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv194[ebp], eax
	mov	edx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv178[ebp]
	push	ecx
	lea	edx, DWORD PTR $T42934[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371474[ebp], esp
	push	OFFSET $SG-81254
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv182[ebp], eax
	lea	eax, DWORD PTR $T371475[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv183[ebp], eax
	lea	ecx, DWORD PTR $T371475[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T42934[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T42933[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T42932[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 934
	jmp	$LN4@updateServ
__catch$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 937
	mov	ecx, DWORD PTR _e$42941[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$42941[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371476[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv186[ebp], eax
	push	937					; 000003a9H
	push	OFFSET $SG-81257
	push	OFFSET $SG-81258
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 938
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 941
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371477[ebp], esp
	push	OFFSET $SG-81259
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv189[ebp], eax
	push	941					; 000003adH
	push	OFFSET $SG-81260
	push	OFFSET $SG-81261
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 942
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@updateServ:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 943
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _propertyName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _value$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _value$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _propertyName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T42932[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T42933[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7:
	lea	ecx, DWORD PTR $T42934[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateServerSetting@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::updateServerSetting
PUBLIC	__$ArrayPad$
PUBLIC	?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::addChatResponse
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7
	DD	01H
	DD	00H
__catchsym$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff94H
	DD	FLAT:__catch$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12
__ehfuncinfo$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv189 = -180						; size = 4
tv186 = -176						; size = 4
tv183 = -172						; size = 4
tv182 = -168						; size = 4
tv180 = -164						; size = 4
tv195 = -160						; size = 4
tv178 = -156						; size = 4
tv194 = -152						; size = 4
tv176 = -148						; size = 4
tv193 = -144						; size = 4
_this$ = -140						; size = 4
$T371510 = -136						; size = 4
$T371509 = -132						; size = 4
$T371508 = -128						; size = 16
$T371507 = -112						; size = 4
_e$42918 = -108						; size = 4
$T42911 = -104						; size = 28
$T42910 = -76						; size = 28
$T42909 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_command$ = 8						; size = 28
_response$ = 36						; size = 28
?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::addChatResponse, COMDAT
; _this$ = ecx
; Line 914
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 916
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 917
	lea	eax, DWORD PTR _command$[ebp]
	push	eax
	push	OFFSET $SG-81248
	lea	ecx, DWORD PTR $T42909[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv176[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET $SG-81247
	mov	eax, DWORD PTR tv176[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42910[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv194[ebp], eax
	mov	edx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	eax, DWORD PTR _response$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv178[ebp]
	push	ecx
	lea	edx, DWORD PTR $T42911[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371507[ebp], esp
	push	OFFSET $SG-81246
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv182[ebp], eax
	lea	eax, DWORD PTR $T371508[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv183[ebp], eax
	lea	ecx, DWORD PTR $T371508[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T42911[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T42910[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T42909[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 918
	jmp	$LN4@addChatRes
__catch$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 921
	mov	ecx, DWORD PTR _e$42918[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$42918[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371509[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv186[ebp], eax
	push	921					; 00000399H
	push	OFFSET $SG-81249
	push	OFFSET $SG-81250
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 922
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 925
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371510[ebp], esp
	push	OFFSET $SG-81251
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv189[ebp], eax
	push	925					; 0000039dH
	push	OFFSET $SG-81252
	push	OFFSET $SG-81253
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 926
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@addChatRes:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 927
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _command$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _response$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _response$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _command$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T42909[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T42910[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7:
	lea	ecx, DWORD PTR $T42911[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addChatResponse@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::addChatResponse
PUBLIC	__$ArrayPad$
PUBLIC	?deleteChatResponse@SQLite@Database@@QAEXI@Z	; Database::SQLite::deleteChatResponse
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?deleteChatResponse@SQLite@Database@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?deleteChatResponse@SQLite@Database@@QAEXI@Z$3
	DD	0ffffffffH
	DD	00H
__catchsym$?deleteChatResponse@SQLite@Database@@QAEXI@Z$8 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?deleteChatResponse@SQLite@Database@@QAEXI@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?deleteChatResponse@SQLite@Database@@QAEXI@Z$1
__tryblocktable$?deleteChatResponse@SQLite@Database@@QAEXI@Z DD 00H
	DD	01H
	DD	02H
	DD	02H
	DD	FLAT:__catchsym$?deleteChatResponse@SQLite@Database@@QAEXI@Z$8
__ehfuncinfo$?deleteChatResponse@SQLite@Database@@QAEXI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?deleteChatResponse@SQLite@Database@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?deleteChatResponse@SQLite@Database@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?deleteChatResponse@SQLite@Database@@QAEXI@Z
_TEXT	SEGMENT
tv168 = -108						; size = 4
tv165 = -104						; size = 4
tv162 = -100						; size = 4
tv161 = -96						; size = 4
tv159 = -92						; size = 4
tv170 = -88						; size = 4
_this$ = -84						; size = 4
$T371543 = -80						; size = 4
$T371542 = -76						; size = 4
$T371541 = -72						; size = 16
$T371540 = -56						; size = 4
_e$42895 = -52						; size = 4
$T42890 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_chatresponseID$ = 8					; size = 4
?deleteChatResponse@SQLite@Database@@QAEXI@Z PROC	; Database::SQLite::deleteChatResponse, COMDAT
; _this$ = ecx
; Line 898
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?deleteChatResponse@SQLite@Database@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 900
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 901
	lea	eax, DWORD PTR _chatresponseID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42890[ebp]
	push	ecx
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv170[ebp], eax
	mov	edx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv159[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371540[ebp], esp
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	push	OFFSET $SG-81240
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv161[ebp], eax
	lea	edx, DWORD PTR $T371541[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv162[ebp], eax
	lea	ecx, DWORD PTR $T371541[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T42890[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 902
	jmp	SHORT $LN4@deleteChat
__catch$?deleteChatResponse@SQLite@Database@@QAEXI@Z$0:
; Line 905
	mov	eax, DWORD PTR _e$42895[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42895[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371542[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv165[ebp], eax
	push	905					; 00000389H
	push	OFFSET $SG-81241
	push	OFFSET $SG-81242
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 906
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN2@deleteChat
	ret	0
__catch$?deleteChatResponse@SQLite@Database@@QAEXI@Z$1:
; Line 909
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371543[ebp], esp
	push	OFFSET $SG-81243
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	909					; 0000038dH
	push	OFFSET $SG-81244
	push	OFFSET $SG-81245
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 910
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN2@deleteChat
	ret	0
$LN4@deleteChat:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN2@deleteChat:
; Line 911
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?deleteChatResponse@SQLite@Database@@QAEXI@Z$3:
	lea	ecx, DWORD PTR $T42890[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?deleteChatResponse@SQLite@Database@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?deleteChatResponse@SQLite@Database@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?deleteChatResponse@SQLite@Database@@QAEXI@Z ENDP	; Database::SQLite::deleteChatResponse
PUBLIC	__$ArrayPad$
PUBLIC	?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Database::SQLite::chatResponseListAsString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$5
	DD	02H
	DD	FLAT:__unwindfunclet$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$6
	DD	00H
	DD	00H
__catchsym$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffa8H
	DD	FLAT:__catch$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__tryblocktable$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 01H
	DD	03H
	DD	04H
	DD	02H
	DD	FLAT:__catchsym$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$10
__ehfuncinfo$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
tv201 = -136						; size = 4
tv198 = -132						; size = 4
tv188 = -128						; size = 4
tv65 = -124						; size = 4
tv194 = -120						; size = 4
tv193 = -116						; size = 4
_this$ = -112						; size = 4
$T371583 = -108						; size = 4
$T371572 = -104						; size = 4
$T371571 = -100						; size = 4
$T371570 = -96						; size = 4
$T371569 = -92						; size = 4
_e$42877 = -88						; size = 4
_row$42876 = -84					; size = 16
_it$42866 = -68						; size = 4
_result$42862 = -64					; size = 16
_list$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; Database::SQLite::chatResponseListAsString, COMDAT
; _this$ = ecx
; Line 872
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371583[ebp], 0
; Line 873
	lea	ecx, DWORD PTR _list$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 875
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 876
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371569[ebp], esp
	push	OFFSET $SG-81234
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv193[ebp], eax
	lea	eax, DWORD PTR _result$42862[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv194[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 877
	lea	ecx, DWORD PTR _it$42866[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42862[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@chatRespon
$LN2@chatRespon:
	lea	ecx, DWORD PTR _it$42866[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@chatRespon:
	lea	edx, DWORD PTR $T371570[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42862[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42866[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@chatRespon
; Line 879
	lea	ecx, DWORD PTR _it$42866[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42876[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 881
	push	44					; 0000002cH
	lea	ecx, DWORD PTR _list$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 882
	push	0
	lea	ecx, DWORD PTR _row$42876[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv188[ebp], eax
	mov	ecx, DWORD PTR tv188[ebp]
	push	ecx
	lea	ecx, DWORD PTR _list$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 883
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _row$42876[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	SHORT $LN2@chatRespon
$LN1@chatRespon:
; Line 884
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _result$42862[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@chatRespon
__catch$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0:
; Line 887
	mov	edx, DWORD PTR _e$42877[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$42877[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371571[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv198[ebp], eax
	push	887					; 00000377H
	push	OFFSET $SG-81235
	push	OFFSET $SG-81236
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 888
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
	ret	0
__catch$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
; Line 891
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371572[ebp], esp
	push	OFFSET $SG-81237
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv201[ebp], eax
	push	891					; 0000037bH
	push	OFFSET $SG-81238
	push	OFFSET $SG-81239
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 892
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
	ret	0
$LN7@chatRespon:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
; Line 894
	lea	eax, DWORD PTR _list$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T371583[ebp]
	or	ecx, 1
	mov	DWORD PTR $T371583[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _list$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$3:
	lea	ecx, DWORD PTR _list$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$42862[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$42876[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; Database::SQLite::chatResponseListAsString
PUBLIC	__$ArrayPad$
PUBLIC	?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ ; Database::SQLite::chatResponseList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$10
	DD	00H
	DD	FLAT:__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$6
	DD	04H
	DD	FLAT:__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$7
	DD	01H
	DD	00H
__catchsym$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff78H
	DD	FLAT:__catch$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$1
__tryblocktable$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$11
__ehfuncinfo$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ
_TEXT	SEGMENT
tv215 = -196						; size = 4
tv212 = -192						; size = 4
tv224 = -188						; size = 4
tv223 = -184						; size = 4
tv222 = -180						; size = 4
tv143 = -176						; size = 4
tv65 = -172						; size = 4
tv207 = -168						; size = 4
tv206 = -164						; size = 4
_this$ = -160						; size = 4
$T371617 = -156						; size = 4
$T371605 = -152						; size = 4
$T371604 = -148						; size = 4
$T371603 = -144						; size = 4
$T371602 = -140						; size = 4
_e$42844 = -136						; size = 4
_chatResponse$42842 = -132				; size = 60
__$ArrayPad$ = -72					; size = 4
_row$42841 = -68					; size = 16
_it$42831 = -52						; size = 4
_result$42827 = -48					; size = 16
_list$ = -32						; size = 16
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ PROC ; Database::SQLite::chatResponseList, COMDAT
; _this$ = ecx
; Line 843
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371617[ebp], 0
; Line 844
	lea	ecx, DWORD PTR _list$[ebp]
	call	??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 846
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 847
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371602[ebp], esp
	push	OFFSET $SG-81228
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv206[ebp], eax
	lea	eax, DWORD PTR _result$42827[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv207[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 848
	lea	ecx, DWORD PTR _it$42831[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42827[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@chatRespon@2
$LN2@chatRespon@2:
	lea	ecx, DWORD PTR _it$42831[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@chatRespon@2:
	lea	edx, DWORD PTR $T371603[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42827[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42831[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@chatRespon@2
; Line 850
	lea	ecx, DWORD PTR _it$42831[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42841[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 852
	lea	ecx, DWORD PTR _chatResponse$42842[ebp]
	call	??0struct_chatresponse@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 853
	push	0
	lea	ecx, DWORD PTR _row$42841[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	push	ecx
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv222[ebp], eax
	mov	edx, DWORD PTR tv222[ebp]
	mov	DWORD PTR _chatResponse$42842[ebp], edx
; Line 854
	push	1
	lea	ecx, DWORD PTR _row$42841[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv223[ebp], eax
	mov	eax, DWORD PTR tv223[ebp]
	push	eax
	lea	ecx, DWORD PTR _chatResponse$42842[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 855
	push	2
	lea	ecx, DWORD PTR _row$42841[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv224[ebp], eax
	mov	ecx, DWORD PTR tv224[ebp]
	push	ecx
	lea	ecx, DWORD PTR _chatResponse$42842[ebp+32]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 856
	lea	edx, DWORD PTR _chatResponse$42842[ebp]
	push	edx
	lea	ecx, DWORD PTR _list$[ebp]
	call	?push_back@?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAEXABUstruct_chatresponse@Database@@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::push_back
; Line 857
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _chatResponse$42842[ebp]
	call	??1struct_chatresponse@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$42841[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN2@chatRespon@2
$LN1@chatRespon@2:
; Line 858
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$42827[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@chatRespon@2
__catch$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$0:
; Line 861
	mov	eax, DWORD PTR _e$42844[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42844[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371604[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv212[ebp], eax
	push	861					; 0000035dH
	push	OFFSET $SG-81229
	push	OFFSET $SG-81230
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 862
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$2
	ret	0
__catch$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$1:
; Line 865
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371605[ebp], esp
	push	OFFSET $SG-81231
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv215[ebp], eax
	push	865					; 00000361H
	push	OFFSET $SG-81232
	push	OFFSET $SG-81233
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 866
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$2
	ret	0
$LN7@chatRespon@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$2:
; Line 868
	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
	mov	edx, DWORD PTR $T371617[ebp]
	or	edx, 1
	mov	DWORD PTR $T371617[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _list$[ebp]
	call	??1?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::~vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 869
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$3:
	lea	ecx, DWORD PTR _list$[ebp]
	jmp	??1?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::~vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$42827[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$42841[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$7:
	lea	ecx, DWORD PTR _chatResponse$42842[ebp]
	jmp	??1struct_chatresponse@Database@@QAE@XZ
__unwindfunclet$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ$10:
	mov	eax, DWORD PTR $T371617[ebp]
	and	eax, 1
	je	$LN18@chatRespon@2
	and	DWORD PTR $T371617[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >::~vector<Database::struct_chatresponse,std::allocator<Database::struct_chatresponse> >
$LN18@chatRespon@2:
	ret	0
__ehhandler$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-200]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?chatResponseList@SQLite@Database@@QAE?AV?$vector@Ustruct_chatresponse@Database@@V?$allocator@Ustruct_chatresponse@Database@@@std@@@std@@XZ ENDP ; Database::SQLite::chatResponseList
PUBLIC	__$ArrayPad$
PUBLIC	?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::addMailReceiver
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T371639 = -80						; size = 4
$T371638 = -76						; size = 4
$T371637 = -72						; size = 16
$T371636 = -56						; size = 4
_e$42487 = -52						; size = 4
$T42481 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sKey$ = 8						; size = 28
?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::addMailReceiver, COMDAT
; _this$ = ecx
; Line 827
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 829
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 830
	lea	eax, DWORD PTR _sKey$[ebp]
	push	eax
	push	OFFSET $SG-81222
	lea	ecx, DWORD PTR $T42481[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371636[ebp], esp
	push	OFFSET $SG-81221
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T371637[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T371637[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T42481[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 831
	jmp	SHORT $LN4@addMailRec
__catch$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 834
	mov	eax, DWORD PTR _e$42487[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42487[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371638[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	834					; 00000342H
	push	OFFSET $SG-81223
	push	OFFSET $SG-81224
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 835
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 838
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371639[ebp], esp
	push	OFFSET $SG-81225
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	838					; 00000346H
	push	OFFSET $SG-81226
	push	OFFSET $SG-81227
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 839
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@addMailRec:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 840
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sKey$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sKey$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T42481[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::addMailReceiver
PUBLIC	__$ArrayPad$
PUBLIC	?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::deleteMailReceiver
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T371669 = -80						; size = 4
$T371668 = -76						; size = 4
$T371667 = -72						; size = 16
$T371666 = -56						; size = 4
_e$42468 = -52						; size = 4
$T42462 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sKey$ = 8						; size = 28
?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::deleteMailReceiver, COMDAT
; _this$ = ecx
; Line 811
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 813
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 814
	lea	eax, DWORD PTR _sKey$[ebp]
	push	eax
	push	OFFSET $SG-81215
	lea	ecx, DWORD PTR $T42462[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371666[ebp], esp
	push	OFFSET $SG-81214
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T371667[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T371667[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T42462[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 815
	jmp	SHORT $LN4@deleteMail
__catch$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 818
	mov	eax, DWORD PTR _e$42468[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42468[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371668[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	818					; 00000332H
	push	OFFSET $SG-81216
	push	OFFSET $SG-81217
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 819
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 822
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371669[ebp], esp
	push	OFFSET $SG-81218
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	822					; 00000336H
	push	OFFSET $SG-81219
	push	OFFSET $SG-81220
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 823
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@deleteMail:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 824
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sKey$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sKey$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T42462[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?deleteMailReceiver@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::deleteMailReceiver
PUBLIC	?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::mailReceiverList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$9
	DD	00H
	DD	FLAT:__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6
	DD	01H
	DD	00H
__catchsym$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffb8H
	DD	FLAT:__catch$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1
__tryblocktable$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 02H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10
__ehfuncinfo$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
_TEXT	SEGMENT
tv199 = -120						; size = 4
tv196 = -116						; size = 4
tv206 = -112						; size = 4
tv65 = -108						; size = 4
tv192 = -104						; size = 4
tv191 = -100						; size = 4
_this$ = -96						; size = 4
$T371709 = -92						; size = 4
$T371698 = -88						; size = 4
$T371697 = -84						; size = 4
$T371696 = -80						; size = 4
$T371695 = -76						; size = 4
_e$42449 = -72						; size = 4
_row$42448 = -68					; size = 16
_it$42438 = -52						; size = 4
_result$42434 = -48					; size = 16
_lMailReceiver$ = -32					; size = 16
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ PROC ; Database::SQLite::mailReceiverList, COMDAT
; _this$ = ecx
; Line 787
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371709[ebp], 0
; Line 788
	lea	ecx, DWORD PTR _lMailReceiver$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 790
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 791
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371695[ebp], esp
	push	OFFSET $SG-81208
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv191[ebp], eax
	lea	eax, DWORD PTR _result$42434[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 792
	lea	ecx, DWORD PTR _it$42438[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42434[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@mailReceiv
$LN2@mailReceiv:
	lea	ecx, DWORD PTR _it$42438[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@mailReceiv:
	lea	edx, DWORD PTR $T371696[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42434[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42438[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@mailReceiv
; Line 794
	lea	ecx, DWORD PTR _it$42438[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42448[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 795
	push	0
	lea	ecx, DWORD PTR _row$42448[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR tv206[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lMailReceiver$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 796
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$42448[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	SHORT $LN2@mailReceiv
$LN1@mailReceiv:
; Line 797
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$42434[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	SHORT $LN7@mailReceiv
__catch$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0:
; Line 800
	mov	edx, DWORD PTR _e$42449[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$42449[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371697[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	push	800					; 00000320H
	push	OFFSET $SG-81209
	push	OFFSET $SG-81210
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 801
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
__catch$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1:
; Line 804
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371698[ebp], esp
	push	OFFSET $SG-81211
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv199[ebp], eax
	push	804					; 00000324H
	push	OFFSET $SG-81212
	push	OFFSET $SG-81213
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 805
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
$LN7@mailReceiv:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2:
; Line 807
	lea	eax, DWORD PTR _lMailReceiver$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR $T371709[ebp]
	or	ecx, 1
	mov	DWORD PTR $T371709[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _lMailReceiver$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 808
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3:
	lea	ecx, DWORD PTR _lMailReceiver$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$42434[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$42448[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$9:
	mov	eax, DWORD PTR $T371709[ebp]
	and	eax, 1
	je	$LN17@mailReceiv
	and	DWORD PTR $T371709[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN17@mailReceiv:
	ret	0
__ehhandler$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ENDP ; Database::SQLite::mailReceiverList
PUBLIC	__$ArrayPad$
PUBLIC	?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::addNmaKey
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T371731 = -80						; size = 4
$T371730 = -76						; size = 4
$T371729 = -72						; size = 16
$T371728 = -56						; size = 4
_e$42412 = -52						; size = 4
$T42406 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sKey$ = 8						; size = 28
?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::addNmaKey, COMDAT
; _this$ = ecx
; Line 771
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 773
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 774
	lea	eax, DWORD PTR _sKey$[ebp]
	push	eax
	push	OFFSET $SG-81202
	lea	ecx, DWORD PTR $T42406[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371728[ebp], esp
	push	OFFSET $SG-81201
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T371729[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T371729[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T42406[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 775
	jmp	SHORT $LN4@addNmaKey
__catch$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 778
	mov	eax, DWORD PTR _e$42412[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42412[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371730[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	778					; 0000030aH
	push	OFFSET $SG-81203
	push	OFFSET $SG-81204
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 779
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 782
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371731[ebp], esp
	push	OFFSET $SG-81205
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	782					; 0000030eH
	push	OFFSET $SG-81206
	push	OFFSET $SG-81207
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@addNmaKey:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 784
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sKey$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sKey$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T42406[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::addNmaKey
PUBLIC	__$ArrayPad$
PUBLIC	?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::deleteNmaKey
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T371761 = -80						; size = 4
$T371760 = -76						; size = 4
$T371759 = -72						; size = 16
$T371758 = -56						; size = 4
_e$42393 = -52						; size = 4
$T42387 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sKey$ = 8						; size = 28
?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::deleteNmaKey, COMDAT
; _this$ = ecx
; Line 755
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 757
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 758
	lea	eax, DWORD PTR _sKey$[ebp]
	push	eax
	push	OFFSET $SG-81195
	lea	ecx, DWORD PTR $T42387[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371758[ebp], esp
	push	OFFSET $SG-81194
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T371759[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T371759[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T42387[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 759
	jmp	SHORT $LN4@deleteNmaK@2
__catch$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 762
	mov	eax, DWORD PTR _e$42393[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42393[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371760[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	762					; 000002faH
	push	OFFSET $SG-81196
	push	OFFSET $SG-81197
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 763
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 766
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371761[ebp], esp
	push	OFFSET $SG-81198
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	766					; 000002feH
	push	OFFSET $SG-81199
	push	OFFSET $SG-81200
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 767
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@deleteNmaK@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 768
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sKey$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sKey$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T42387[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?deleteNmaKey@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::deleteNmaKey
PUBLIC	?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::nmalist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$9
	DD	00H
	DD	FLAT:__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6
	DD	01H
	DD	00H
__catchsym$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffb8H
	DD	FLAT:__catch$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1
__tryblocktable$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 02H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10
__ehfuncinfo$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
_TEXT	SEGMENT
tv199 = -120						; size = 4
tv196 = -116						; size = 4
tv206 = -112						; size = 4
tv65 = -108						; size = 4
tv192 = -104						; size = 4
tv191 = -100						; size = 4
_this$ = -96						; size = 4
$T371801 = -92						; size = 4
$T371790 = -88						; size = 4
$T371789 = -84						; size = 4
$T371788 = -80						; size = 4
$T371787 = -76						; size = 4
_e$42374 = -72						; size = 4
_row$42373 = -68					; size = 16
_it$42363 = -52						; size = 4
_result$42359 = -48					; size = 16
_lNma$ = -32						; size = 16
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ PROC ; Database::SQLite::nmalist, COMDAT
; _this$ = ecx
; Line 730
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371801[ebp], 0
; Line 731
	lea	ecx, DWORD PTR _lNma$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 733
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 734
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371787[ebp], esp
	push	OFFSET $SG-81188
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv191[ebp], eax
	lea	eax, DWORD PTR _result$42359[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv192[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 735
	lea	ecx, DWORD PTR _it$42363[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42359[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@nmalist
$LN2@nmalist:
	lea	ecx, DWORD PTR _it$42363[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@nmalist:
	lea	edx, DWORD PTR $T371788[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42359[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42363[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@nmalist
; Line 737
	lea	ecx, DWORD PTR _it$42363[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42373[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 739
	push	0
	lea	ecx, DWORD PTR _row$42373[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv206[ebp], eax
	mov	ecx, DWORD PTR tv206[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lNma$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 740
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$42373[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	SHORT $LN2@nmalist
$LN1@nmalist:
; Line 741
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$42359[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	SHORT $LN7@nmalist
__catch$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0:
; Line 744
	mov	edx, DWORD PTR _e$42374[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$42374[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371789[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	push	744					; 000002e8H
	push	OFFSET $SG-81189
	push	OFFSET $SG-81190
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 745
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
__catch$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1:
; Line 748
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371790[ebp], esp
	push	OFFSET $SG-81191
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv199[ebp], eax
	push	748					; 000002ecH
	push	OFFSET $SG-81192
	push	OFFSET $SG-81193
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 749
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
$LN7@nmalist:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2:
; Line 751
	lea	eax, DWORD PTR _lNma$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR $T371801[ebp]
	or	ecx, 1
	mov	DWORD PTR $T371801[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _lNma$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 752
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3:
	lea	ecx, DWORD PTR _lNma$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$42359[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$42373[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$9:
	mov	eax, DWORD PTR $T371801[ebp]
	and	eax, 1
	je	$LN17@nmalist
	and	DWORD PTR $T371801[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN17@nmalist:
	ret	0
__ehhandler$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ENDP ; Database::SQLite::nmalist
PUBLIC	__$ArrayPad$
PUBLIC	?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ ; Database::SQLite::advlist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$10
	DD	00H
	DD	FLAT:__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$6
	DD	04H
	DD	FLAT:__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$7
	DD	01H
	DD	00H
__catchsym$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff90H
	DD	FLAT:__catch$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$1
__tryblocktable$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$11
__ehfuncinfo$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ
_TEXT	SEGMENT
tv215 = -176						; size = 4
tv212 = -172						; size = 4
tv225 = -165						; size = 1
tv224 = -164						; size = 4
tv223 = -160						; size = 4
tv222 = -156						; size = 4
tv143 = -152						; size = 4
tv65 = -148						; size = 4
tv207 = -144						; size = 4
tv206 = -140						; size = 4
_this$ = -136						; size = 4
$T371835 = -132						; size = 4
$T371823 = -128						; size = 4
$T371822 = -124						; size = 4
$T371821 = -120						; size = 4
$T371820 = -116						; size = 4
_e$42324 = -112						; size = 4
_msg$42321 = -108					; size = 36
__$ArrayPad$ = -72					; size = 4
_row$42320 = -68					; size = 16
_it$42310 = -52						; size = 4
_result$42306 = -48					; size = 16
_vMessagelist$ = -32					; size = 16
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ PROC ; Database::SQLite::advlist, COMDAT
; _this$ = ecx
; Line 678
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371835[ebp], 0
; Line 679
	lea	ecx, DWORD PTR _vMessagelist$[ebp]
	call	??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 681
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 682
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371820[ebp], esp
	push	OFFSET $SG-81181
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv206[ebp], eax
	lea	eax, DWORD PTR _result$42306[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv207[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 683
	lea	ecx, DWORD PTR _it$42310[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42306[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@advlist
$LN2@advlist:
	lea	ecx, DWORD PTR _it$42310[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@advlist:
	lea	edx, DWORD PTR $T371821[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42306[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42310[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@advlist
; Line 685
	lea	ecx, DWORD PTR _it$42310[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42320[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 687
	lea	ecx, DWORD PTR _msg$42321[ebp]
	call	??0message@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 688
	push	0
	lea	ecx, DWORD PTR _row$42320[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	push	ecx
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv222[ebp], eax
	mov	edx, DWORD PTR tv222[ebp]
	mov	DWORD PTR _msg$42321[ebp], edx
; Line 689
	push	1
	lea	ecx, DWORD PTR _row$42320[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv223[ebp], eax
	mov	eax, DWORD PTR tv223[ebp]
	push	eax
	lea	ecx, DWORD PTR _msg$42321[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 690
	push	2
	lea	ecx, DWORD PTR _row$42320[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv224[ebp], eax
	mov	ecx, DWORD PTR tv224[ebp]
	push	ecx
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv225[ebp], al
	mov	dl, BYTE PTR tv225[ebp]
	mov	BYTE PTR _msg$42321[ebp+32], dl
; Line 691
	lea	eax, DWORD PTR _msg$42321[ebp]
	push	eax
	lea	ecx, DWORD PTR _vMessagelist$[ebp]
	call	?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXABUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::push_back
; Line 692
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _msg$42321[ebp]
	call	??1message@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$42320[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN2@advlist
$LN1@advlist:
; Line 693
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$42306[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@advlist
__catch$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$0:
; Line 696
	mov	ecx, DWORD PTR _e$42324[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$42324[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371822[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv212[ebp], eax
	push	696					; 000002b8H
	push	OFFSET $SG-81182
	push	OFFSET $SG-81183
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 697
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$2
	ret	0
__catch$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$1:
; Line 700
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371823[ebp], esp
	push	OFFSET $SG-81184
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv215[ebp], eax
	push	700					; 000002bcH
	push	OFFSET $SG-81185
	push	OFFSET $SG-81186
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 701
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$2
	ret	0
$LN7@advlist:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$2:
; Line 703
	lea	ecx, DWORD PTR _vMessagelist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::message,std::allocator<Database::message> >::vector<Database::message,std::allocator<Database::message> >
	mov	edx, DWORD PTR $T371835[ebp]
	or	edx, 1
	mov	DWORD PTR $T371835[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _vMessagelist$[ebp]
	call	??1?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::~vector<Database::message,std::allocator<Database::message> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 704
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$3:
	lea	ecx, DWORD PTR _vMessagelist$[ebp]
	jmp	??1?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::~vector<Database::message,std::allocator<Database::message> >
__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$42306[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$42320[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$7:
	lea	ecx, DWORD PTR _msg$42321[ebp]
	jmp	??1message@Database@@QAE@XZ
__unwindfunclet$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ$10:
	mov	eax, DWORD PTR $T371835[ebp]
	and	eax, 1
	je	$LN18@advlist
	and	DWORD PTR $T371835[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::message,std::allocator<Database::message> >::~vector<Database::message,std::allocator<Database::message> >
$LN18@advlist:
	ret	0
__ehhandler$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?advlist@SQLite@Database@@QAE?AV?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@XZ ENDP ; Database::SQLite::advlist
PUBLIC	__$ArrayPad$
PUBLIC	?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::addAdvMessage
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7
	DD	01H
	DD	00H
__catchsym$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff94H
	DD	FLAT:__catch$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12
__ehfuncinfo$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv189 = -180						; size = 4
tv186 = -176						; size = 4
tv183 = -172						; size = 4
tv182 = -168						; size = 4
tv180 = -164						; size = 4
tv195 = -160						; size = 4
tv178 = -156						; size = 4
tv194 = -152						; size = 4
tv176 = -148						; size = 4
tv193 = -144						; size = 4
_this$ = -140						; size = 4
$T371857 = -136						; size = 4
$T371856 = -132						; size = 4
$T371855 = -128						; size = 16
$T371854 = -112						; size = 4
_e$42284 = -108						; size = 4
$T42277 = -104						; size = 28
$T42276 = -76						; size = 28
$T42275 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sText$ = 8						; size = 28
_sYell$ = 36						; size = 28
?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::addAdvMessage, COMDAT
; _this$ = ecx
; Line 662
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 664
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 665
	lea	eax, DWORD PTR _sText$[ebp]
	push	eax
	push	OFFSET $SG-81175
	lea	ecx, DWORD PTR $T42275[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv176[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET $SG-81174
	mov	eax, DWORD PTR tv176[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42276[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv194[ebp], eax
	mov	edx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	eax, DWORD PTR _sYell$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv178[ebp]
	push	ecx
	lea	edx, DWORD PTR $T42277[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371854[ebp], esp
	push	OFFSET $SG-81173
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv182[ebp], eax
	lea	eax, DWORD PTR $T371855[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv183[ebp], eax
	lea	ecx, DWORD PTR $T371855[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T42277[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T42276[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T42275[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 666
	jmp	$LN4@addAdvMess
__catch$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 669
	mov	ecx, DWORD PTR _e$42284[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$42284[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371856[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv186[ebp], eax
	push	669					; 0000029dH
	push	OFFSET $SG-81176
	push	OFFSET $SG-81177
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 670
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 673
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371857[ebp], esp
	push	OFFSET $SG-81178
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv189[ebp], eax
	push	673					; 000002a1H
	push	OFFSET $SG-81179
	push	OFFSET $SG-81180
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 674
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@addAdvMess:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 675
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _sText$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sYell$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _sYell$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _sText$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T42275[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T42276[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7:
	lea	ecx, DWORD PTR $T42277[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::addAdvMessage
PUBLIC	?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::deleteAdvMessage
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	01H
	DD	02H
	DD	02H
	DD	FLAT:__catchsym$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
__ehfuncinfo$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv163 = -72						; size = 4
tv160 = -68						; size = 4
tv157 = -64						; size = 4
tv156 = -60						; size = 4
_this$ = -56						; size = 4
$T371890 = -52						; size = 4
$T371889 = -48						; size = 4
$T371888 = -44						; size = 16
$T371887 = -28						; size = 4
_e$42261 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_sAdvID$ = 8						; size = 28
?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::deleteAdvMessage, COMDAT
; _this$ = ecx
; Line 646
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 648
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 649
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371887[ebp], esp
	lea	ecx, DWORD PTR _sAdvID$[ebp]
	push	ecx
	push	OFFSET $SG-81167
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv156[ebp], eax
	lea	edx, DWORD PTR $T371888[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv157[ebp], eax
	lea	ecx, DWORD PTR $T371888[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Line 650
	jmp	SHORT $LN4@deleteAdvM
__catch$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 653
	mov	eax, DWORD PTR _e$42261[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$42261[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371889[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv160[ebp], eax
	push	653					; 0000028dH
	push	OFFSET $SG-81168
	push	OFFSET $SG-81169
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 654
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 657
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371890[ebp], esp
	push	OFFSET $SG-81170
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv163[ebp], eax
	push	657					; 00000291H
	push	OFFSET $SG-81171
	push	OFFSET $SG-81172
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 658
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@deleteAdvM:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 659
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sAdvID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sAdvID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?deleteAdvMessage@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::deleteAdvMessage
PUBLIC	__$ArrayPad$
PUBLIC	?updateAdvMessages@SQLite@Database@@QAEXXZ	; Database::SQLite::updateAdvMessages
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateAdvMessages@SQLite@Database@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?updateAdvMessages@SQLite@Database@@QAEXXZ$5
	DD	01H
	DD	FLAT:__unwindfunclet$?updateAdvMessages@SQLite@Database@@QAEXXZ$6
	DD	02H
	DD	FLAT:__unwindfunclet$?updateAdvMessages@SQLite@Database@@QAEXXZ$7
	DD	0ffffffffH
	DD	00H
__catchsym$?updateAdvMessages@SQLite@Database@@QAEXXZ$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffa0H
	DD	FLAT:__catch$?updateAdvMessages@SQLite@Database@@QAEXXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?updateAdvMessages@SQLite@Database@@QAEXXZ$1
__tryblocktable$?updateAdvMessages@SQLite@Database@@QAEXXZ DD 00H
	DD	03H
	DD	04H
	DD	02H
	DD	FLAT:__catchsym$?updateAdvMessages@SQLite@Database@@QAEXXZ$10
__ehfuncinfo$?updateAdvMessages@SQLite@Database@@QAEXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?updateAdvMessages@SQLite@Database@@QAEXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?updateAdvMessages@SQLite@Database@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateAdvMessages@SQLite@Database@@QAEXXZ
_TEXT	SEGMENT
tv223 = -156						; size = 4
tv220 = -152						; size = 4
tv227 = -145						; size = 1
tv226 = -144						; size = 4
tv157 = -140						; size = 4
tv225 = -136						; size = 4
tv215 = -132						; size = 4
tv214 = -128						; size = 4
tv212 = -124						; size = 4
_this$ = -120						; size = 4
$T371920 = -116						; size = 4
$T371919 = -112						; size = 4
$T371918 = -108						; size = 4
$T371917 = -104						; size = 4
$T371916 = -100						; size = 4
_e$42240 = -96						; size = 4
_msg$42220 = -92					; size = 36
__$ArrayPad$ = -56					; size = 4
_row$42219 = -52					; size = 16
_it$42209 = -36						; size = 4
_result$42205 = -32					; size = 16
__$EHRec$ = -16						; size = 16
?updateAdvMessages@SQLite@Database@@QAEXXZ PROC		; Database::SQLite::updateAdvMessages, COMDAT
; _this$ = ecx
; Line 618
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateAdvMessages@SQLite@Database@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 619
	push	OFFSET $SG-81159
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371916[ebp], esp
	push	OFFSET $SG-81160
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv212[ebp], eax
	call	?message@log@helper@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; helper::log::message
	add	esp, 32					; 00000020H
; Line 621
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 622
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?clear@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXXZ ; std::vector<Database::message,std::allocator<Database::message> >::clear
; Line 624
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371917[ebp], esp
	push	OFFSET $SG-81161
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv214[ebp], eax
	lea	eax, DWORD PTR _result$42205[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv215[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 625
	lea	ecx, DWORD PTR _it$42209[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42205[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@updateAdvM
$LN2@updateAdvM:
	lea	ecx, DWORD PTR _it$42209[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@updateAdvM:
	lea	edx, DWORD PTR $T371918[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$42205[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42209[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@updateAdvM
; Line 627
	lea	ecx, DWORD PTR _it$42209[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42219[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv225[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 629
	lea	ecx, DWORD PTR _msg$42220[ebp]
	call	??0message@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 630
	push	0
	lea	ecx, DWORD PTR _row$42219[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	push	ecx
	lea	ecx, DWORD PTR _msg$42220[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 631
	push	1
	lea	ecx, DWORD PTR _row$42219[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv226[ebp], eax
	mov	edx, DWORD PTR tv226[ebp]
	push	edx
	call	??$string_cast@_NDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?B_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<bool,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR tv227[ebp], al
	mov	al, BYTE PTR tv227[ebp]
	mov	BYTE PTR _msg$42220[ebp+32], al
; Line 632
	lea	ecx, DWORD PTR _msg$42220[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?push_back@?$vector@Umessage@Database@@V?$allocator@Umessage@Database@@@std@@@std@@QAEXABUmessage@Database@@@Z ; std::vector<Database::message,std::allocator<Database::message> >::push_back
; Line 633
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _msg$42220[ebp]
	call	??1message@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _row$42219[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN2@updateAdvM
$LN1@updateAdvM:
; Line 634
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$42205[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@updateAdvM
__catch$?updateAdvMessages@SQLite@Database@@QAEXXZ$0:
; Line 637
	mov	edx, DWORD PTR _e$42240[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$42240[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371919[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv220[ebp], eax
	push	637					; 0000027dH
	push	OFFSET $SG-81162
	push	OFFSET $SG-81163
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 638
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN5@updateAdvM
	ret	0
__catch$?updateAdvMessages@SQLite@Database@@QAEXXZ$1:
; Line 641
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371920[ebp], esp
	push	OFFSET $SG-81164
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv223[ebp], eax
	push	641					; 00000281H
	push	OFFSET $SG-81165
	push	OFFSET $SG-81166
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 642
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN5@updateAdvM
	ret	0
$LN7@updateAdvM:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN5@updateAdvM:
; Line 643
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateAdvMessages@SQLite@Database@@QAEXXZ$5:
	lea	ecx, DWORD PTR _result$42205[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?updateAdvMessages@SQLite@Database@@QAEXXZ$6:
	lea	ecx, DWORD PTR _row$42219[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?updateAdvMessages@SQLite@Database@@QAEXXZ$7:
	lea	ecx, DWORD PTR _msg$42220[ebp]
	jmp	??1message@Database@@QAE@XZ
__ehhandler$?updateAdvMessages@SQLite@Database@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateAdvMessages@SQLite@Database@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateAdvMessages@SQLite@Database@@QAEXXZ ENDP		; Database::SQLite::updateAdvMessages
PUBLIC	__$ArrayPad$
PUBLIC	?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z ; Database::SQLite::logList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$12
	DD	00H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$4
	DD	02H
	DD	00H
	DD	03H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$9
	DD	02H
	DD	00H
__catchsym$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$13 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff1cH
	DD	FLAT:__catch$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$1
__tryblocktable$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z DD 03H
	DD	08H
	DD	09H
	DD	02H
	DD	FLAT:__catchsym$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$13
__ehfuncinfo$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z
	DD	01H
	DD	FLAT:__tryblocktable$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z
_TEXT	SEGMENT
tv244 = -316						; size = 4
tv241 = -312						; size = 4
tv260 = -306						; size = 2
tv259 = -304						; size = 4
tv257 = -298						; size = 2
tv256 = -296						; size = 4
tv255 = -292						; size = 4
tv254 = -288						; size = 4
tv253 = -284						; size = 4
tv252 = -280						; size = 4
tv152 = -276						; size = 4
tv65 = -272						; size = 4
tv236 = -268						; size = 4
tv235 = -264						; size = 4
tv233 = -260						; size = 4
tv68 = -256						; size = 4
_this$ = -252						; size = 4
$T371965 = -248						; size = 4
$T371951 = -244						; size = 4
$T371950 = -240						; size = 4
$T371949 = -236						; size = 4
$T371948 = -232						; size = 4
_e$42186 = -228						; size = 4
_row$42181 = -224					; size = 16
_newLog$42182 = -208					; size = 92
_it$42171 = -112					; size = 4
_result$42161 = -108					; size = 16
_sQuery$ = -92						; size = 28
_vLogList$ = -64					; size = 16
$T42166 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_usLimit$ = 12						; size = 2
?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z PROC ; Database::SQLite::logList, COMDAT
; _this$ = ecx
; Line 584
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 300				; 0000012cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T371965[ebp], 0
; Line 585
	lea	ecx, DWORD PTR _vLogList$[ebp]
	call	??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 586
	lea	ecx, DWORD PTR _sQuery$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 588
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 589
	lea	eax, DWORD PTR _usLimit$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T42166[ebp]
	push	ecx
	call	??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ; dlib::cast_to_string<unsigned short>
	add	esp, 8
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv233[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T371948[ebp], esp
	mov	ecx, DWORD PTR tv233[ebp]
	push	ecx
	push	OFFSET $SG-81153
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv235[ebp], eax
	lea	edx, DWORD PTR _result$42161[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv236[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR $T42166[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 590
	lea	eax, DWORD PTR _it$42171[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$42161[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@logList
$LN2@logList:
	lea	ecx, DWORD PTR _it$42171[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@logList:
	lea	ecx, DWORD PTR $T371949[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$42161[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$42171[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	edx, al
	test	edx, edx
	je	$LN1@logList
; Line 592
	lea	ecx, DWORD PTR _it$42171[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
; Line 594
	lea	ecx, DWORD PTR _newLog$42182[ebp]
	call	??0struct_log@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 8
; Line 595
	push	0
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv152[ebp], eax
	mov	eax, DWORD PTR tv152[ebp]
	push	eax
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv252[ebp], eax
	mov	ecx, DWORD PTR tv252[ebp]
	mov	DWORD PTR _newLog$42182[ebp], ecx
; Line 596
	push	1
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv253[ebp], eax
	mov	edx, DWORD PTR tv253[ebp]
	push	edx
	lea	ecx, DWORD PTR _newLog$42182[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 597
	push	2
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv254[ebp], eax
	mov	eax, DWORD PTR tv254[ebp]
	push	eax
	lea	ecx, DWORD PTR _newLog$42182[ebp+32]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 598
	push	3
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv255[ebp], eax
	mov	ecx, DWORD PTR tv255[ebp]
	push	ecx
	lea	ecx, DWORD PTR _newLog$42182[ebp+60]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 599
	push	4
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv256[ebp], eax
	mov	edx, DWORD PTR tv256[ebp]
	push	edx
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	WORD PTR tv257[ebp], ax
	mov	al, BYTE PTR tv257[ebp]
	mov	BYTE PTR _newLog$42182[ebp+88], al
; Line 600
	push	5
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv259[ebp], eax
	mov	ecx, DWORD PTR tv259[ebp]
	push	ecx
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	WORD PTR tv260[ebp], ax
	mov	dl, BYTE PTR tv260[ebp]
	mov	BYTE PTR _newLog$42182[ebp+89], dl
; Line 602
	lea	eax, DWORD PTR _newLog$42182[ebp]
	push	eax
	lea	ecx, DWORD PTR _vLogList$[ebp]
	call	?push_back@?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAEXABUstruct_log@Database@@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::push_back
; Line 603
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _newLog$42182[ebp]
	call	??1struct_log@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _row$42181[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN2@logList
$LN1@logList:
; Line 604
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _result$42161[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@logList
__catch$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$0:
; Line 607
	mov	ecx, DWORD PTR _e$42186[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$42186[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371950[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv241[ebp], eax
	push	607					; 0000025fH
	push	OFFSET $SG-81154
	push	OFFSET $SG-81155
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 608
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$2
	ret	0
__catch$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$1:
; Line 611
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371951[ebp], esp
	push	OFFSET $SG-81156
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv244[ebp], eax
	push	611					; 00000263H
	push	OFFSET $SG-81157
	push	OFFSET $SG-81158
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 612
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$2
	ret	0
$LN7@logList:
	mov	DWORD PTR __$EHRec$[ebp+12], 2
__tryend$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$2:
; Line 614
	lea	ecx, DWORD PTR _vLogList$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::vector<Database::struct_log,std::allocator<Database::struct_log> >
	mov	edx, DWORD PTR $T371965[ebp]
	or	edx, 1
	mov	DWORD PTR $T371965[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sQuery$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _vLogList$[ebp]
	call	??1?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::~vector<Database::struct_log,std::allocator<Database::struct_log> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 615
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$3:
	lea	ecx, DWORD PTR _vLogList$[ebp]
	jmp	??1?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::~vector<Database::struct_log,std::allocator<Database::struct_log> >
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$4:
	lea	ecx, DWORD PTR _sQuery$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$5:
	lea	ecx, DWORD PTR $T42166[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$7:
	lea	ecx, DWORD PTR _result$42161[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$8:
	lea	ecx, DWORD PTR _row$42181[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$9:
	lea	ecx, DWORD PTR _newLog$42182[ebp]
	jmp	??1struct_log@Database@@QAE@XZ
__unwindfunclet$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z$12:
	mov	eax, DWORD PTR $T371965[ebp]
	and	eax, 1
	je	$LN20@logList
	and	DWORD PTR $T371965[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::struct_log,std::allocator<Database::struct_log> >::~vector<Database::struct_log,std::allocator<Database::struct_log> >
$LN20@logList:
	ret	0
__ehhandler$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?logList@SQLite@Database@@QAE?AV?$vector@Ustruct_log@Database@@V?$allocator@Ustruct_log@Database@@@std@@@std@@G@Z ENDP ; Database::SQLite::logList
PUBLIC	__$ArrayPad$
PUBLIC	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$6
	DD	03H
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$10
	DD	08H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$12
	DD	0aH
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$13
	DD	0bH
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$14
	DD	0cH
	DD	FLAT:__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$15
	DD	03H
	DD	00H
__catchsym$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$20 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0fffffeb4H
	DD	FLAT:__catch$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$1
__tryblocktable$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z DD 04H
	DD	0dH
	DD	0eH
	DD	02H
	DD	FLAT:__catchsym$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$20
__ehfuncinfo$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z
	DD	01H
	DD	FLAT:__tryblocktable$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z
_TEXT	SEGMENT
tv246 = -452						; size = 4
tv243 = -448						; size = 4
tv240 = -444						; size = 4
tv239 = -440						; size = 4
tv237 = -436						; size = 4
tv256 = -432						; size = 4
tv235 = -428						; size = 4
tv255 = -424						; size = 4
tv233 = -420						; size = 4
tv254 = -416						; size = 4
tv231 = -412						; size = 4
tv253 = -408						; size = 4
tv229 = -404						; size = 4
tv252 = -400						; size = 4
tv227 = -396						; size = 4
tv251 = -392						; size = 4
tv225 = -388						; size = 4
tv250 = -384						; size = 4
tv223 = -380						; size = 4
tv67 = -376						; size = 4
tv221 = -372						; size = 4
tv70 = -368						; size = 4
_this$ = -364						; size = 4
$T371987 = -360						; size = 4
$T371986 = -356						; size = 4
$T371985 = -352						; size = 16
$T371984 = -336						; size = 4
_e$41819 = -332						; size = 4
_sQuery$ = -328						; size = 28
_text$ = -300						; size = 28
$T41810 = -272						; size = 28
$T41808 = -244						; size = 28
$T41807 = -216						; size = 28
$T41805 = -188						; size = 28
$T41804 = -160						; size = 28
$T41803 = -132						; size = 28
$T41802 = -104						; size = 28
$T41806 = -76						; size = 28
$T41809 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sUser$ = 8						; size = 28
_sText$ = 36						; size = 28
_ccType$ = 64						; size = 4
_ccSubType$ = 68					; size = 4
?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z PROC ; Database::SQLite::log, COMDAT
; _this$ = ecx
; Line 562
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 436				; 000001b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 563
	lea	ecx, DWORD PTR _sQuery$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	eax, DWORD PTR _sText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 565
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 566
	cmp	DWORD PTR _ccType$[ebp], 1
	jne	SHORT $LN1@log
; Line 568
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	?getCleanString@security@helper@@YAXAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::security::getCleanString
	add	esp, 4
$LN1@log:
; Line 571
	lea	edx, DWORD PTR _ccSubType$[ebp]
	push	edx
	lea	eax, DWORD PTR $T41809[ebp]
	push	eax
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv221[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	edx, DWORD PTR _ccType$[ebp]
	push	edx
	lea	eax, DWORD PTR $T41806[ebp]
	push	eax
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv223[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	edx, DWORD PTR _sUser$[ebp]
	push	edx
	push	OFFSET $SG-81147
	lea	eax, DWORD PTR $T41802[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv250[ebp], eax
	mov	ecx, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv225[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	push	OFFSET $SG-81146
	mov	edx, DWORD PTR tv225[ebp]
	push	edx
	lea	eax, DWORD PTR $T41803[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv251[ebp], eax
	mov	ecx, DWORD PTR tv251[ebp]
	mov	DWORD PTR tv227[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	lea	edx, DWORD PTR _text$[ebp]
	push	edx
	mov	eax, DWORD PTR tv227[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41804[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv252[ebp], eax
	mov	edx, DWORD PTR tv252[ebp]
	mov	DWORD PTR tv229[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	push	OFFSET $SG-81145
	mov	eax, DWORD PTR tv229[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41805[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv253[ebp], eax
	mov	edx, DWORD PTR tv253[ebp]
	mov	DWORD PTR tv231[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	mov	eax, DWORD PTR tv223[ebp]
	push	eax
	mov	ecx, DWORD PTR tv231[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41807[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv254[ebp], eax
	mov	eax, DWORD PTR tv254[ebp]
	mov	DWORD PTR tv233[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 11		; 0000000bH
	push	OFFSET $SG-81144
	mov	ecx, DWORD PTR tv233[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41808[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv255[ebp], eax
	mov	eax, DWORD PTR tv255[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	mov	ecx, DWORD PTR tv221[ebp]
	push	ecx
	mov	edx, DWORD PTR tv235[ebp]
	push	edx
	lea	eax, DWORD PTR $T41810[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv256[ebp], eax
	mov	ecx, DWORD PTR tv256[ebp]
	mov	DWORD PTR tv237[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 13		; 0000000dH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T371984[ebp], esp
	push	OFFSET $SG-81143
	mov	eax, DWORD PTR tv237[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv239[ebp], eax
	lea	ecx, DWORD PTR $T371985[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv240[ebp], eax
	lea	ecx, DWORD PTR $T371985[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	lea	ecx, DWORD PTR $T41810[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 11		; 0000000bH
	lea	ecx, DWORD PTR $T41808[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR $T41807[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR $T41805[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	lea	ecx, DWORD PTR $T41804[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR $T41803[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR $T41802[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T41806[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T41809[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 572
	jmp	$LN5@log
__catch$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$0:
; Line 575
	mov	edx, DWORD PTR _e$41819[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$41819[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371986[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv243[ebp], eax
	push	575					; 0000023fH
	push	OFFSET $SG-81148
	push	OFFSET $SG-81149
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 576
	mov	DWORD PTR __$EHRec$[ebp+12], 3
	mov	eax, __tryend$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$2
	ret	0
__catch$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$1:
; Line 579
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T371987[ebp], esp
	push	OFFSET $SG-81150
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv246[ebp], eax
	push	579					; 00000243H
	push	OFFSET $SG-81151
	push	OFFSET $SG-81152
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 580
	mov	DWORD PTR __$EHRec$[ebp+12], 3
	mov	eax, __tryend$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$2
	ret	0
$LN5@log:
	mov	DWORD PTR __$EHRec$[ebp+12], 3
__tryend$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$2:
; Line 581
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _text$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sQuery$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _sUser$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sText$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$3:
	lea	ecx, DWORD PTR _sText$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$4:
	lea	ecx, DWORD PTR _sUser$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$5:
	lea	ecx, DWORD PTR _sQuery$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$6:
	lea	ecx, DWORD PTR _text$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$7:
	lea	ecx, DWORD PTR $T41809[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$8:
	lea	ecx, DWORD PTR $T41806[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$9:
	lea	ecx, DWORD PTR $T41802[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$10:
	lea	ecx, DWORD PTR $T41803[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$11:
	lea	ecx, DWORD PTR $T41804[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$12:
	lea	ecx, DWORD PTR $T41805[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$13:
	lea	ecx, DWORD PTR $T41807[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$14:
	lea	ecx, DWORD PTR $T41808[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z$15:
	lea	ecx, DWORD PTR $T41810[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-456]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ENDP ; Database::SQLite::log
PUBLIC	__$ArrayPad$
PUBLIC	?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::sendRequest
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7
	DD	01H
	DD	00H
__catchsym$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff94H
	DD	FLAT:__catch$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$12
__ehfuncinfo$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv189 = -180						; size = 4
tv186 = -176						; size = 4
tv183 = -172						; size = 4
tv182 = -168						; size = 4
tv180 = -164						; size = 4
tv195 = -160						; size = 4
tv178 = -156						; size = 4
tv194 = -152						; size = 4
tv176 = -148						; size = 4
tv193 = -144						; size = 4
_this$ = -140						; size = 4
$T372028 = -136						; size = 4
$T372027 = -132						; size = 4
$T372026 = -128						; size = 16
$T372025 = -112						; size = 4
_e$41783 = -108						; size = 4
$T41776 = -104						; size = 28
$T41775 = -76						; size = 28
$T41774 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sName$ = 8						; size = 28
_sRequest$ = 36						; size = 28
?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::sendRequest, COMDAT
; _this$ = ecx
; Line 546
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 164				; 000000a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 548
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 549
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	push	OFFSET $SG-81137
	lea	ecx, DWORD PTR $T41774[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv176[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET $SG-81136
	mov	eax, DWORD PTR tv176[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41775[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv194[ebp], eax
	mov	edx, DWORD PTR tv194[ebp]
	mov	DWORD PTR tv178[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	eax, DWORD PTR _sRequest$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv178[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41776[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv195[ebp], eax
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv180[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372025[ebp], esp
	push	OFFSET $SG-81135
	mov	edx, DWORD PTR tv180[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv182[ebp], eax
	lea	eax, DWORD PTR $T372026[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv183[ebp], eax
	lea	ecx, DWORD PTR $T372026[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T41776[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T41775[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T41774[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 550
	jmp	$LN4@sendReques
__catch$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 553
	mov	ecx, DWORD PTR _e$41783[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$41783[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372027[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv186[ebp], eax
	push	553					; 00000229H
	push	OFFSET $SG-81138
	push	OFFSET $SG-81139
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 554
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 557
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372028[ebp], esp
	push	OFFSET $SG-81140
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv189[ebp], eax
	push	557					; 0000022dH
	push	OFFSET $SG-81141
	push	OFFSET $SG-81142
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 558
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@sendReques:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 559
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sRequest$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _sRequest$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T41774[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T41775[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7:
	lea	ecx, DWORD PTR $T41776[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::sendRequest
PUBLIC	__$ArrayPad$
PUBLIC	?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::unwhite
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T372061 = -80						; size = 4
$T372060 = -76						; size = 4
$T372059 = -72						; size = 16
$T372058 = -56						; size = 4
_e$41760 = -52						; size = 4
$T41754 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sName$ = 8						; size = 28
?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::unwhite, COMDAT
; _this$ = ecx
; Line 530
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 532
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 533
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	push	OFFSET $SG-81129
	lea	ecx, DWORD PTR $T41754[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372058[ebp], esp
	push	OFFSET $SG-81128
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T372059[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T372059[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T41754[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 534
	jmp	SHORT $LN4@unwhite
__catch$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 537
	mov	eax, DWORD PTR _e$41760[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$41760[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372060[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	537					; 00000219H
	push	OFFSET $SG-81130
	push	OFFSET $SG-81131
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 538
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 541
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372061[ebp], esp
	push	OFFSET $SG-81132
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	541					; 0000021dH
	push	OFFSET $SG-81133
	push	OFFSET $SG-81134
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 542
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@unwhite:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 543
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T41754[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?unwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::unwhite
PUBLIC	__$ArrayPad$
PUBLIC	?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::addwhite
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	00H
	DD	00H
__catchsym$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
__ehfuncinfo$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv171 = -108						; size = 4
tv168 = -104						; size = 4
tv165 = -100						; size = 4
tv164 = -96						; size = 4
tv162 = -92						; size = 4
tv174 = -88						; size = 4
_this$ = -84						; size = 4
$T372091 = -80						; size = 4
$T372090 = -76						; size = 4
$T372089 = -72						; size = 16
$T372088 = -56						; size = 4
_e$41741 = -52						; size = 4
$T41735 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sName$ = 8						; size = 28
?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::addwhite, COMDAT
; _this$ = ecx
; Line 514
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 516
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 517
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	push	OFFSET $SG-81122
	lea	ecx, DWORD PTR $T41735[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv162[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372088[ebp], esp
	push	OFFSET $SG-81121
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv164[ebp], eax
	lea	edx, DWORD PTR $T372089[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv165[ebp], eax
	lea	ecx, DWORD PTR $T372089[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T41735[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 518
	jmp	SHORT $LN4@addwhite
__catch$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 521
	mov	eax, DWORD PTR _e$41741[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$41741[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372090[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv168[ebp], eax
	push	521					; 00000209H
	push	OFFSET $SG-81123
	push	OFFSET $SG-81124
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 525
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372091[ebp], esp
	push	OFFSET $SG-81125
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	push	525					; 0000020dH
	push	OFFSET $SG-81126
	push	OFFSET $SG-81127
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 526
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@addwhite:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 527
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T41735[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addwhite@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::addwhite
PUBLIC	__$ArrayPad$
PUBLIC	?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::whitelist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10
	DD	00H
	DD	FLAT:__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6
	DD	04H
	DD	FLAT:__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$7
	DD	01H
	DD	00H
__catchsym$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff98H
	DD	FLAT:__catch$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1
__tryblocktable$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 02H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$11
__ehfuncinfo$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
_TEXT	SEGMENT
tv206 = -160						; size = 4
tv203 = -156						; size = 4
tv201 = -152						; size = 4
tv214 = -148						; size = 4
tv213 = -144						; size = 4
tv65 = -140						; size = 4
tv197 = -136						; size = 4
tv196 = -132						; size = 4
_this$ = -128						; size = 4
$T372133 = -124						; size = 4
$T372121 = -120						; size = 4
$T372120 = -116						; size = 4
$T372119 = -112						; size = 4
$T372118 = -108						; size = 4
_e$41722 = -104						; size = 4
_row$41720 = -100					; size = 16
_it$41710 = -84						; size = 4
_result$41706 = -80					; size = 16
_vWhitelist$ = -64					; size = 16
$T41721 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ PROC ; Database::SQLite::whitelist, COMDAT
; _this$ = ecx
; Line 490
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T372133[ebp], 0
; Line 491
	lea	ecx, DWORD PTR _vWhitelist$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 493
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 494
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372118[ebp], esp
	push	OFFSET $SG-81115
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	lea	eax, DWORD PTR _result$41706[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv197[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 495
	lea	ecx, DWORD PTR _it$41710[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$41706[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@whitelist
$LN2@whitelist:
	lea	ecx, DWORD PTR _it$41710[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@whitelist:
	lea	edx, DWORD PTR $T372119[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$41706[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$41710[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@whitelist
; Line 497
	lea	ecx, DWORD PTR _it$41710[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$41720[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 498
	push	0
	lea	ecx, DWORD PTR _row$41720[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv213[ebp], eax
	mov	ecx, DWORD PTR tv213[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41721[ebp]
	push	edx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv214[ebp], eax
	mov	eax, DWORD PTR tv214[ebp]
	mov	DWORD PTR tv201[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR tv201[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vWhitelist$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T41721[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 499
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$41720[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN2@whitelist
$LN1@whitelist:
; Line 500
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$41706[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@whitelist
__catch$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$0:
; Line 503
	mov	edx, DWORD PTR _e$41722[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$41722[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372120[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv203[ebp], eax
	push	503					; 000001f7H
	push	OFFSET $SG-81116
	push	OFFSET $SG-81117
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 504
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
__catch$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$1:
; Line 507
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372121[ebp], esp
	push	OFFSET $SG-81118
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv206[ebp], eax
	push	507					; 000001fbH
	push	OFFSET $SG-81119
	push	OFFSET $SG-81120
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 508
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2
	ret	0
$LN7@whitelist:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$2:
; Line 510
	lea	eax, DWORD PTR _vWhitelist$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR $T372133[ebp]
	or	ecx, 1
	mov	DWORD PTR $T372133[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _vWhitelist$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 511
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$3:
	lea	ecx, DWORD PTR _vWhitelist$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$41706[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$41720[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$7:
	lea	ecx, DWORD PTR $T41721[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ$10:
	mov	eax, DWORD PTR $T372133[ebp]
	and	eax, 1
	je	$LN18@whitelist
	and	DWORD PTR $T372133[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN18@whitelist:
	ret	0
__ehhandler$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ENDP ; Database::SQLite::whitelist
PUBLIC	?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::unban
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	01H
	DD	02H
	DD	02H
	DD	FLAT:__catchsym$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
__ehfuncinfo$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv163 = -72						; size = 4
tv160 = -68						; size = 4
tv157 = -64						; size = 4
tv156 = -60						; size = 4
_this$ = -56						; size = 4
$T372155 = -52						; size = 4
$T372154 = -48						; size = 4
$T372153 = -44						; size = 16
$T372152 = -28						; size = 4
_e$41321 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_sBanID$ = 8						; size = 28
?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::unban, COMDAT
; _this$ = ecx
; Line 442
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 444
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 445
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372152[ebp], esp
	lea	ecx, DWORD PTR _sBanID$[ebp]
	push	ecx
	push	OFFSET $SG-81103
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv156[ebp], eax
	lea	edx, DWORD PTR $T372153[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv157[ebp], eax
	lea	ecx, DWORD PTR $T372153[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Line 446
	jmp	SHORT $LN4@unban
__catch$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 449
	mov	eax, DWORD PTR _e$41321[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$41321[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372154[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv160[ebp], eax
	push	449					; 000001c1H
	push	OFFSET $SG-81104
	push	OFFSET $SG-81105
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 450
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 453
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372155[ebp], esp
	push	OFFSET $SG-81106
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv163[ebp], eax
	push	453					; 000001c5H
	push	OFFSET $SG-81107
	push	OFFSET $SG-81108
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 454
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@unban:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 455
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sBanID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sBanID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::unban
PUBLIC	__$ArrayPad$
PUBLIC	?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z ; Database::SQLite::addBan
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$5
	DD	02H
	DD	00H
	DD	03H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$10
	DD	08H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$12
	DD	0aH
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$13
	DD	0bH
	DD	FLAT:__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$14
	DD	02H
	DD	00H
__catchsym$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$19 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0fffffeecH
	DD	FLAT:__catch$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$1
__tryblocktable$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z DD 03H
	DD	0cH
	DD	0dH
	DD	02H
	DD	FLAT:__catchsym$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$19
__ehfuncinfo$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z
_TEXT	SEGMENT
tv237 = -396						; size = 4
tv234 = -392						; size = 4
tv231 = -388						; size = 4
tv230 = -384						; size = 4
tv228 = -380						; size = 4
tv250 = -376						; size = 4
tv226 = -372						; size = 4
tv249 = -368						; size = 4
tv224 = -364						; size = 4
tv248 = -360						; size = 4
tv222 = -356						; size = 4
tv247 = -352						; size = 4
tv220 = -348						; size = 4
tv246 = -344						; size = 4
tv218 = -340						; size = 4
tv245 = -336						; size = 4
tv216 = -332						; size = 4
tv244 = -328						; size = 4
tv214 = -324						; size = 4
tv243 = -320						; size = 4
tv212 = -316						; size = 4
tv242 = -312						; size = 4
_this$ = -308						; size = 4
$T372184 = -304						; size = 4
$T372183 = -300						; size = 4
$T372182 = -296						; size = 16
$T372181 = -280						; size = 4
_e$41304 = -276						; size = 4
$T41295 = -272						; size = 28
$T41294 = -244						; size = 28
$T41293 = -216						; size = 28
$T41291 = -188						; size = 28
$T41290 = -160						; size = 28
$T41288 = -132						; size = 28
$T41287 = -104						; size = 28
$T41289 = -76						; size = 28
$T41292 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sGuID$ = 8						; size = 28
_sName$ = 36						; size = 28
_adminID$ = 64						; size = 4
_sReason$ = 68						; size = 28
?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z PROC ; Database::SQLite::addBan, COMDAT
; _this$ = ecx
; Line 426
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 380				; 0000017cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 2
; Line 428
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 429
	lea	eax, DWORD PTR _adminID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41292[ebp]
	push	ecx
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv242[ebp], eax
	mov	edx, DWORD PTR tv242[ebp]
	mov	DWORD PTR tv212[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41289[ebp]
	push	ecx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv243[ebp], eax
	mov	edx, DWORD PTR tv243[ebp]
	mov	DWORD PTR tv214[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	eax, DWORD PTR _sGuID$[ebp]
	push	eax
	push	OFFSET $SG-81097
	lea	ecx, DWORD PTR $T41287[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv244[ebp], eax
	mov	edx, DWORD PTR tv244[ebp]
	mov	DWORD PTR tv216[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	push	OFFSET $SG-81096
	mov	eax, DWORD PTR tv216[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41288[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv245[ebp], eax
	mov	edx, DWORD PTR tv245[ebp]
	mov	DWORD PTR tv218[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	eax, DWORD PTR tv214[ebp]
	push	eax
	mov	ecx, DWORD PTR tv218[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41290[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv246[ebp], eax
	mov	eax, DWORD PTR tv246[ebp]
	mov	DWORD PTR tv220[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	push	OFFSET $SG-81095
	mov	ecx, DWORD PTR tv220[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41291[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv247[ebp], eax
	mov	eax, DWORD PTR tv247[ebp]
	mov	DWORD PTR tv222[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	mov	ecx, DWORD PTR tv212[ebp]
	push	ecx
	mov	edx, DWORD PTR tv222[ebp]
	push	edx
	lea	eax, DWORD PTR $T41293[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv248[ebp], eax
	mov	ecx, DWORD PTR tv248[ebp]
	mov	DWORD PTR tv224[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	push	OFFSET $SG-81094
	mov	edx, DWORD PTR tv224[ebp]
	push	edx
	lea	eax, DWORD PTR $T41294[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	mov	DWORD PTR tv226[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 11		; 0000000bH
	lea	edx, DWORD PTR _sReason$[ebp]
	push	edx
	mov	eax, DWORD PTR tv226[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41295[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv250[ebp], eax
	mov	edx, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv228[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372181[ebp], esp
	push	OFFSET $SG-81093
	mov	ecx, DWORD PTR tv228[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv230[ebp], eax
	lea	edx, DWORD PTR $T372182[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv231[ebp], eax
	lea	ecx, DWORD PTR $T372182[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 11		; 0000000bH
	lea	ecx, DWORD PTR $T41295[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR $T41294[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR $T41293[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	lea	ecx, DWORD PTR $T41291[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR $T41290[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR $T41288[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T41287[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T41289[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T41292[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 430
	jmp	$LN4@addBan
__catch$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$0:
; Line 433
	mov	eax, DWORD PTR _e$41304[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$41304[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372183[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv234[ebp], eax
	push	433					; 000001b1H
	push	OFFSET $SG-81098
	push	OFFSET $SG-81099
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 434
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$2
	ret	0
__catch$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$1:
; Line 437
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372184[ebp], esp
	push	OFFSET $SG-81100
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv237[ebp], eax
	push	437					; 000001b5H
	push	OFFSET $SG-81101
	push	OFFSET $SG-81102
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 438
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$2
	ret	0
$LN4@addBan:
	mov	DWORD PTR __$EHRec$[ebp+12], 2
__tryend$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$2:
; Line 439
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sGuID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sReason$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	88					; 00000058H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$3:
	lea	ecx, DWORD PTR _sReason$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$4:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$5:
	lea	ecx, DWORD PTR _sGuID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$6:
	lea	ecx, DWORD PTR $T41292[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$7:
	lea	ecx, DWORD PTR $T41289[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$8:
	lea	ecx, DWORD PTR $T41287[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$9:
	lea	ecx, DWORD PTR $T41288[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$10:
	lea	ecx, DWORD PTR $T41290[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$11:
	lea	ecx, DWORD PTR $T41291[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$12:
	lea	ecx, DWORD PTR $T41293[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$13:
	lea	ecx, DWORD PTR $T41294[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z$14:
	lea	ecx, DWORD PTR $T41295[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z ENDP ; Database::SQLite::addBan
PUBLIC	__$ArrayPad$
PUBLIC	?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z ; Database::SQLite::addAdmin
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$10
	DD	08H
	DD	FLAT:__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$11
	DD	01H
	DD	00H
__catchsym$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$16 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff24H
	DD	FLAT:__catch$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$1
__tryblocktable$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z DD 02H
	DD	09H
	DD	0aH
	DD	02H
	DD	FLAT:__catchsym$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$16
__ehfuncinfo$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z
	DD	01H
	DD	FLAT:__tryblocktable$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z
_TEXT	SEGMENT
tv219 = -324						; size = 4
tv216 = -320						; size = 4
tv213 = -316						; size = 4
tv212 = -312						; size = 4
tv210 = -308						; size = 4
tv229 = -304						; size = 4
tv208 = -300						; size = 4
tv228 = -296						; size = 4
tv206 = -292						; size = 4
tv227 = -288						; size = 4
tv204 = -284						; size = 4
tv226 = -280						; size = 4
tv202 = -276						; size = 4
tv225 = -272						; size = 4
tv200 = -268						; size = 4
tv224 = -264						; size = 4
tv198 = -260						; size = 4
tv223 = -256						; size = 4
_this$ = -252						; size = 4
$T372224 = -248						; size = 4
$T372223 = -244						; size = 4
$T372222 = -240						; size = 16
$T372221 = -224						; size = 4
_e$41194 = -220						; size = 4
$T41186 = -216						; size = 28
$T41180 = -188						; size = 28
$T41179 = -160						; size = 28
$T41177 = -132						; size = 28
$T41176 = -104						; size = 28
$T41178 = -76						; size = 28
$T41185 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sEaID$ = 8						; size = 28
_sName$ = 36						; size = 28
_uiLevel$ = 64						; size = 1
?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z PROC ; Database::SQLite::addAdmin, COMDAT
; _this$ = ecx
; Line 346
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 308				; 00000134H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 348
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 349
	lea	eax, DWORD PTR _uiLevel$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41185[ebp]
	push	ecx
	call	??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z ; dlib::cast_to_string<unsigned char>
	add	esp, 8
	mov	DWORD PTR tv223[ebp], eax
	mov	edx, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv198[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41178[ebp]
	push	ecx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv224[ebp], eax
	mov	edx, DWORD PTR tv224[ebp]
	mov	DWORD PTR tv200[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	eax, DWORD PTR _sEaID$[ebp]
	push	eax
	push	OFFSET $SG-81066
	lea	ecx, DWORD PTR $T41176[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv225[ebp], eax
	mov	edx, DWORD PTR tv225[ebp]
	mov	DWORD PTR tv202[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	push	OFFSET $SG-81065
	mov	eax, DWORD PTR tv202[ebp]
	push	eax
	lea	ecx, DWORD PTR $T41177[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv226[ebp], eax
	mov	edx, DWORD PTR tv226[ebp]
	mov	DWORD PTR tv204[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	eax, DWORD PTR tv200[ebp]
	push	eax
	mov	ecx, DWORD PTR tv204[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41179[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv227[ebp], eax
	mov	eax, DWORD PTR tv227[ebp]
	mov	DWORD PTR tv206[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	push	OFFSET $SG-81064
	mov	ecx, DWORD PTR tv206[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41180[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv228[ebp], eax
	mov	eax, DWORD PTR tv228[ebp]
	mov	DWORD PTR tv208[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	mov	ecx, DWORD PTR tv198[ebp]
	push	ecx
	mov	edx, DWORD PTR tv208[ebp]
	push	edx
	lea	eax, DWORD PTR $T41186[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv229[ebp], eax
	mov	ecx, DWORD PTR tv229[ebp]
	mov	DWORD PTR tv210[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372221[ebp], esp
	push	OFFSET $SG-81063
	mov	eax, DWORD PTR tv210[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv212[ebp], eax
	lea	ecx, DWORD PTR $T372222[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv213[ebp], eax
	lea	ecx, DWORD PTR $T372222[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	lea	ecx, DWORD PTR $T41186[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR $T41180[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR $T41179[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T41177[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T41176[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T41178[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T41185[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 350
	jmp	$LN4@addAdmin
__catch$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$0:
; Line 353
	mov	edx, DWORD PTR _e$41194[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$41194[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372223[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv216[ebp], eax
	push	353					; 00000161H
	push	OFFSET $SG-81067
	push	OFFSET $SG-81068
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 354
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$2
	ret	0
__catch$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$1:
; Line 357
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372224[ebp], esp
	push	OFFSET $SG-81069
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv219[ebp], eax
	push	357					; 00000165H
	push	OFFSET $SG-81070
	push	OFFSET $SG-81071
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 358
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$2
	ret	0
$LN4@addAdmin:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$2:
; Line 359
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _sEaID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	60					; 0000003cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$3:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$4:
	lea	ecx, DWORD PTR _sEaID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$5:
	lea	ecx, DWORD PTR $T41185[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$6:
	lea	ecx, DWORD PTR $T41178[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$7:
	lea	ecx, DWORD PTR $T41176[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$8:
	lea	ecx, DWORD PTR $T41177[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$9:
	lea	ecx, DWORD PTR $T41179[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$10:
	lea	ecx, DWORD PTR $T41180[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z$11:
	lea	ecx, DWORD PTR $T41186[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0E@Z ENDP ; Database::SQLite::addAdmin
PUBLIC	?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::deleteAdmin
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	01H
	DD	02H
	DD	02H
	DD	FLAT:__catchsym$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
__ehfuncinfo$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv163 = -72						; size = 4
tv160 = -68						; size = 4
tv157 = -64						; size = 4
tv156 = -60						; size = 4
_this$ = -56						; size = 4
$T372261 = -52						; size = 4
$T372260 = -48						; size = 4
$T372259 = -44						; size = 16
$T372258 = -28						; size = 4
_e$41161 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_sAdminID$ = 8						; size = 28
?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::deleteAdmin, COMDAT
; _this$ = ecx
; Line 330
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 56					; 00000038H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 332
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 333
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372258[ebp], esp
	lea	ecx, DWORD PTR _sAdminID$[ebp]
	push	ecx
	push	OFFSET $SG-81057
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv156[ebp], eax
	lea	edx, DWORD PTR $T372259[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv157[ebp], eax
	lea	ecx, DWORD PTR $T372259[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Line 334
	jmp	SHORT $LN4@deleteAdmi
__catch$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 337
	mov	eax, DWORD PTR _e$41161[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$41161[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372260[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv160[ebp], eax
	push	337					; 00000151H
	push	OFFSET $SG-81058
	push	OFFSET $SG-81059
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 338
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 341
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372261[ebp], esp
	push	OFFSET $SG-81060
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv163[ebp], eax
	push	341					; 00000155H
	push	OFFSET $SG-81061
	push	OFFSET $SG-81062
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 342
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN4@deleteAdmi:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 343
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sAdminID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sAdminID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?deleteAdmin@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::deleteAdmin
PUBLIC	__$ArrayPad$
PUBLIC	?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ ; Database::SQLite::adminlist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$11
	DD	00H
	DD	FLAT:__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$6
	DD	04H
	DD	FLAT:__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$7
	DD	05H
	DD	FLAT:__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$8
	DD	01H
	DD	00H
__catchsym$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff34H
	DD	FLAT:__catch$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$1
__tryblocktable$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ DD 02H
	DD	06H
	DD	07H
	DD	02H
	DD	FLAT:__catchsym$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$12
__ehfuncinfo$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ
_TEXT	SEGMENT
tv240 = -288						; size = 4
tv237 = -284						; size = 4
tv255 = -277						; size = 1
tv254 = -276						; size = 4
tv252 = -270						; size = 2
tv251 = -268						; size = 4
tv235 = -264						; size = 4
tv250 = -260						; size = 4
tv249 = -256						; size = 4
tv248 = -252						; size = 4
tv247 = -248						; size = 4
tv143 = -244						; size = 4
tv65 = -240						; size = 4
tv230 = -236						; size = 4
tv229 = -232						; size = 4
_this$ = -228						; size = 4
$T372303 = -224						; size = 4
$T372290 = -220						; size = 4
$T372289 = -216						; size = 4
$T372288 = -212						; size = 4
$T372287 = -208						; size = 4
_e$41140 = -204						; size = 4
_row$41114 = -200					; size = 16
_a$41115 = -184						; size = 92
_it$41104 = -84						; size = 4
_result$41100 = -80					; size = 16
_vAdminlist$ = -64					; size = 16
$T41117 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ PROC ; Database::SQLite::adminlist, COMDAT
; _this$ = ecx
; Line 296
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 272				; 00000110H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T372303[ebp], 0
; Line 297
	lea	ecx, DWORD PTR _vAdminlist$[ebp]
	call	??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 299
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 300
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372287[ebp], esp
	push	OFFSET $SG-81049
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv229[ebp], eax
	lea	eax, DWORD PTR _result$41100[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv230[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 301
	lea	ecx, DWORD PTR _it$41104[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$41100[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN4@adminlist
$LN3@adminlist:
	lea	ecx, DWORD PTR _it$41104[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN4@adminlist:
	lea	edx, DWORD PTR $T372288[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$41100[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$41104[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN2@adminlist
; Line 303
	lea	ecx, DWORD PTR _it$41104[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 305
	lea	ecx, DWORD PTR _a$41115[ebp]
	call	??0admin@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 306
	push	0
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	push	ecx
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv247[ebp], eax
	mov	edx, DWORD PTR tv247[ebp]
	mov	DWORD PTR _a$41115[ebp], edx
; Line 307
	push	1
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv248[ebp], eax
	mov	eax, DWORD PTR tv248[ebp]
	push	eax
	lea	ecx, DWORD PTR _a$41115[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 308
	push	2
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41117[ebp]
	push	edx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv250[ebp], eax
	mov	eax, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	ecx, DWORD PTR tv235[ebp]
	push	ecx
	lea	ecx, DWORD PTR _a$41115[ebp+32]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T41117[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 309
	push	3
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv251[ebp], eax
	mov	edx, DWORD PTR tv251[ebp]
	push	edx
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	WORD PTR tv252[ebp], ax
	mov	al, BYTE PTR tv252[ebp]
	mov	BYTE PTR _a$41115[ebp+60], al
; Line 310
	push	5
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv254[ebp], eax
	mov	ecx, DWORD PTR tv254[ebp]
	push	ecx
	lea	ecx, DWORD PTR _a$41115[ebp+64]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 311
	push	OFFSET $SG-81050
	lea	edx, DWORD PTR _a$41115[ebp+64]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR tv255[ebp], al
	movzx	eax, BYTE PTR tv255[ebp]
	test	eax, eax
	je	SHORT $LN1@adminlist
; Line 312
	push	OFFSET $SG-81051
	lea	ecx, DWORD PTR _a$41115[ebp+64]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN1@adminlist:
; Line 314
	lea	ecx, DWORD PTR _a$41115[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vAdminlist$[ebp]
	call	?push_back@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAEXABUadmin@Database@@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::push_back
; Line 315
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _a$41115[ebp]
	call	??1admin@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$41114[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN3@adminlist
$LN2@adminlist:
; Line 316
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$41100[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN8@adminlist
__catch$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$0:
; Line 319
	mov	edx, DWORD PTR _e$41140[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$41140[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372289[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv237[ebp], eax
	push	319					; 0000013fH
	push	OFFSET $SG-81052
	push	OFFSET $SG-81053
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 320
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$2
	ret	0
__catch$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$1:
; Line 323
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372290[ebp], esp
	push	OFFSET $SG-81054
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv240[ebp], eax
	push	323					; 00000143H
	push	OFFSET $SG-81055
	push	OFFSET $SG-81056
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 324
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$2
	ret	0
$LN8@adminlist:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$2:
; Line 326
	lea	eax, DWORD PTR _vAdminlist$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::vector<Database::admin,std::allocator<Database::admin> >
	mov	ecx, DWORD PTR $T372303[ebp]
	or	ecx, 1
	mov	DWORD PTR $T372303[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _vAdminlist$[ebp]
	call	??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 327
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$3:
	lea	ecx, DWORD PTR _vAdminlist$[ebp]
	jmp	??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$41100[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$41114[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$7:
	lea	ecx, DWORD PTR _a$41115[ebp]
	jmp	??1admin@Database@@QAE@XZ
__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$8:
	lea	ecx, DWORD PTR $T41117[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ$11:
	mov	eax, DWORD PTR $T372303[ebp]
	and	eax, 1
	je	$LN20@adminlist
	and	DWORD PTR $T372303[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
$LN20@adminlist:
	ret	0
__ehhandler$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-292]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ ENDP ; Database::SQLite::adminlist
PUBLIC	__$ArrayPad$
PUBLIC	?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Database::SQLite::getAdminPayday
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$6
	DD	0ffffffffH
	DD	00H
__catchsym$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffa8H
	DD	FLAT:__catch$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$1
__tryblocktable$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 00H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$10
__ehfuncinfo$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
tv234 = -160						; size = 4
tv231 = -156						; size = 4
tv238 = -152						; size = 4
tv237 = -145						; size = 1
tv154 = -144						; size = 4
tv158 = -140						; size = 4
tv218 = -136						; size = 4
tv217 = -132						; size = 4
tv215 = -128						; size = 4
tv211 = -124						; size = 4
_this$ = -120						; size = 4
$T372336 = -116						; size = 4
$T372327 = -112						; size = 4
$T372326 = -108						; size = 4
$T372325 = -104						; size = 4
$T372324 = -100						; size = 4
$T372323 = -96						; size = 4
$T372322 = -92						; size = 4
_e$40756 = -88						; size = 4
_row$40742 = -84					; size = 16
_it$40732 = -68						; size = 4
_result$40726 = -64					; size = 16
$T40727 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_adminID$ = 12						; size = 4
?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Database::SQLite::getAdminPayday, COMDAT
; _this$ = ecx
; Line 267
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T372336[ebp], 0
; Line 269
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 270
	lea	eax, DWORD PTR _adminID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40727[ebp]
	push	ecx
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv211[ebp], eax
	mov	edx, DWORD PTR tv211[ebp]
	mov	DWORD PTR tv215[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372322[ebp], esp
	mov	ecx, DWORD PTR tv215[ebp]
	push	ecx
	push	OFFSET $SG-81039
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv217[ebp], eax
	lea	edx, DWORD PTR _result$40726[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T40727[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 271
	lea	eax, DWORD PTR _it$40732[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$40726[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN4@getAdminPa
$LN3@getAdminPa:
	lea	ecx, DWORD PTR _it$40732[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN4@getAdminPa:
	lea	ecx, DWORD PTR $T372323[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$40726[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$40732[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	edx, al
	test	edx, edx
	je	$LN2@getAdminPa
; Line 273
	lea	ecx, DWORD PTR _it$40732[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$40742[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv158[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 275
	push	0
	lea	ecx, DWORD PTR _row$40742[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv154[ebp], eax
	push	OFFSET $SG-81040
	mov	eax, DWORD PTR tv154[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR tv237[ebp], al
	movzx	ecx, BYTE PTR tv237[ebp]
	test	ecx, ecx
	je	SHORT $LN1@getAdminPa
; Line 276
	push	OFFSET $SG-81041
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T372336[ebp]
	or	edx, 1
	mov	DWORD PTR $T372336[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$40742[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$40726[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN7@getAdminPa
$LN1@getAdminPa:
; Line 278
	push	0
	lea	ecx, DWORD PTR _row$40742[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv238[ebp], eax
	mov	eax, DWORD PTR tv238[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T372336[ebp]
	or	ecx, 1
	mov	DWORD PTR $T372336[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$40742[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$40726[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN7@getAdminPa
; Line 279
	jmp	$LN3@getAdminPa
$LN2@getAdminPa:
; Line 280
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$40726[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN8@getAdminPa
__catch$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$0:
; Line 283
	mov	edx, DWORD PTR _e$40756[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$40756[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372324[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv231[ebp], eax
	push	283					; 0000011bH
	push	OFFSET $SG-81042
	push	OFFSET $SG-81043
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 284
	mov	eax, DWORD PTR _e$40756[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$40756[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR $T372325[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T372325[ebp]
	push	ecx
	call	__CxxThrowException@8
; Line 285
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$2
	ret	0
__catch$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$1:
; Line 288
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372326[ebp], esp
	push	OFFSET $SG-81044
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv234[ebp], eax
	push	288					; 00000120H
	push	OFFSET $SG-81045
	push	OFFSET $SG-81046
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 289
	mov	DWORD PTR $T372327[ebp], OFFSET $SG-81047
	push	OFFSET __TI2PAD
	lea	edx, DWORD PTR $T372327[ebp]
	push	edx
	call	__CxxThrowException@8
; Line 290
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$2
	ret	0
$LN8@getAdminPa:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$2:
; Line 292
	push	OFFSET $SG-81048
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372336[ebp]
	or	eax, 1
	mov	DWORD PTR $T372336[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN7@getAdminPa:
; Line 293
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$3:
	lea	ecx, DWORD PTR $T40727[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$5:
	lea	ecx, DWORD PTR _result$40726[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$6:
	lea	ecx, DWORD PTR _row$40742[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Database::SQLite::getAdminPayday
PUBLIC	__$ArrayPad$
PUBLIC	?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Database::SQLite::getAdminName
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$6
	DD	0ffffffffH
	DD	00H
__catchsym$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$10 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffa8H
	DD	FLAT:__catch$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$1
__tryblocktable$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 00H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$10
__ehfuncinfo$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
tv219 = -152						; size = 4
tv216 = -148						; size = 4
tv222 = -144						; size = 4
tv146 = -140						; size = 4
tv206 = -136						; size = 4
tv205 = -132						; size = 4
tv203 = -128						; size = 4
tv199 = -124						; size = 4
_this$ = -120						; size = 4
$T372371 = -116						; size = 4
$T372362 = -112						; size = 4
$T372361 = -108						; size = 4
$T372360 = -104						; size = 4
$T372359 = -100						; size = 4
$T372358 = -96						; size = 4
$T372357 = -92						; size = 4
_e$40708 = -88						; size = 4
_row$40707 = -84					; size = 16
_it$40697 = -68						; size = 4
_result$40687 = -64					; size = 16
$T40692 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_adminID$ = 12						; size = 4
?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Database::SQLite::getAdminName, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T372371[ebp], 0
; Line 244
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 245
	lea	eax, DWORD PTR _adminID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40692[ebp]
	push	ecx
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv199[ebp], eax
	mov	edx, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv203[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372357[ebp], esp
	mov	ecx, DWORD PTR tv203[ebp]
	push	ecx
	push	OFFSET $SG-81031
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv205[ebp], eax
	lea	edx, DWORD PTR _result$40687[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv206[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T40692[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 246
	lea	eax, DWORD PTR _it$40697[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$40687[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@getAdminNa
$LN2@getAdminNa:
	lea	ecx, DWORD PTR _it$40697[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@getAdminNa:
	lea	ecx, DWORD PTR $T372358[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$40687[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$40697[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@getAdminNa
; Line 248
	lea	ecx, DWORD PTR _it$40697[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$40707[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv146[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 249
	push	0
	lea	ecx, DWORD PTR _row$40707[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv222[ebp], eax
	mov	eax, DWORD PTR tv222[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T372371[ebp]
	or	ecx, 1
	mov	DWORD PTR $T372371[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$40707[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$40687[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN6@getAdminNa
; Line 250
	jmp	$LN2@getAdminNa
$LN1@getAdminNa:
; Line 251
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _result$40687[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@getAdminNa
__catch$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$0:
; Line 254
	mov	edx, DWORD PTR _e$40708[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$40708[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372359[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv216[ebp], eax
	push	254					; 000000feH
	push	OFFSET $SG-81032
	push	OFFSET $SG-81033
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 255
	mov	eax, DWORD PTR _e$40708[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$40708[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR $T372360[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T372360[ebp]
	push	ecx
	call	__CxxThrowException@8
; Line 256
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$2
	ret	0
__catch$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$1:
; Line 259
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372361[ebp], esp
	push	OFFSET $SG-81034
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv219[ebp], eax
	push	259					; 00000103H
	push	OFFSET $SG-81035
	push	OFFSET $SG-81036
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 260
	mov	DWORD PTR $T372362[ebp], OFFSET $SG-81037
	push	OFFSET __TI2PAD
	lea	edx, DWORD PTR $T372362[ebp]
	push	edx
	call	__CxxThrowException@8
; Line 261
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$2
	ret	0
$LN7@getAdminNa:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$2:
; Line 263
	push	OFFSET $SG-81038
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372371[ebp]
	or	eax, 1
	mov	DWORD PTR $T372371[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@getAdminNa:
; Line 264
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$3:
	lea	ecx, DWORD PTR $T40692[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$5:
	lea	ecx, DWORD PTR _result$40687[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$6:
	lea	ecx, DWORD PTR _row$40707[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Database::SQLite::getAdminName
PUBLIC	__$ArrayPad$
PUBLIC	?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::getAdminID
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	00H
	DD	00H
__catchsym$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff70H
	DD	FLAT:__catch$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	06H
	DD	07H
	DD	02H
	DD	FLAT:__catchsym$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12
__ehfuncinfo$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv232 = -228						; size = 4
tv229 = -224						; size = 4
tv240 = -220						; size = 4
tv239 = -216						; size = 4
tv238 = -212						; size = 4
tv221 = -208						; size = 4
tv220 = -204						; size = 4
tv218 = -200						; size = 4
tv237 = -196						; size = 4
tv216 = -192						; size = 4
tv236 = -188						; size = 4
tv235 = -184						; size = 4
_this$ = -180						; size = 4
$T372399 = -176						; size = 4
$T372398 = -172						; size = 4
$T372397 = -168						; size = 4
$T372396 = -164						; size = 4
$T372395 = -160						; size = 4
$T372394 = -156						; size = 4
$T372393 = -152						; size = 4
$T372392 = -148						; size = 4
_e$40669 = -144						; size = 4
_row$40666 = -140					; size = 16
_it$40656 = -124					; size = 4
_result$40653 = -120					; size = 16
_sQuery$40622 = -104					; size = 28
$T40652 = -76						; size = 28
$T40650 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sToken$ = 8						; size = 28
?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::getAdminID, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 212				; 000000d4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 214
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 215
	push	OFFSET $SG-81023
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv235[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 216
	push	39					; 00000027H
	lea	eax, DWORD PTR _sToken$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40650[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv236[ebp], eax
	mov	edx, DWORD PTR tv236[ebp]
	mov	DWORD PTR tv216[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR tv216[ebp]
	push	eax
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40650[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 217
	push	OFFSET $SG-81024
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 218
	push	39					; 00000027H
	lea	ecx, DWORD PTR _sToken$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T40652[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv237[ebp], eax
	mov	eax, DWORD PTR tv237[ebp]
	mov	DWORD PTR tv218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	mov	ecx, DWORD PTR tv218[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40652[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 220
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372392[ebp], esp
	lea	edx, DWORD PTR _sQuery$40622[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv220[ebp], eax
	lea	eax, DWORD PTR _result$40653[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv221[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 221
	lea	ecx, DWORD PTR _it$40656[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$40653[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@getAdminID
$LN2@getAdminID:
	lea	ecx, DWORD PTR _it$40656[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@getAdminID:
	lea	edx, DWORD PTR $T372393[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$40653[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$40656[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@getAdminID
; Line 223
	lea	ecx, DWORD PTR _it$40656[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$40666[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv238[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
; Line 224
	push	0
	lea	ecx, DWORD PTR _row$40666[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv239[ebp], eax
	mov	ecx, DWORD PTR tv239[ebp]
	push	ecx
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv240[ebp], eax
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR $T372394[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _row$40666[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$40653[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sToken$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372394[ebp]
	jmp	$LN6@getAdminID
; Line 225
	jmp	$LN2@getAdminID
$LN1@getAdminID:
; Line 226
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$40653[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN7@getAdminID
__catch$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 229
	mov	eax, DWORD PTR _e$40669[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$40669[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372395[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv229[ebp], eax
	push	229					; 000000e5H
	push	OFFSET $SG-81025
	push	OFFSET $SG-81026
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 230
	mov	ecx, DWORD PTR _e$40669[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$40669[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR $T372396[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T372396[ebp]
	push	ecx
	call	__CxxThrowException@8
; Line 231
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 234
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372397[ebp], esp
	push	OFFSET $SG-81027
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv232[ebp], eax
	push	234					; 000000eaH
	push	OFFSET $SG-81028
	push	OFFSET $SG-81029
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 235
	mov	DWORD PTR $T372398[ebp], OFFSET $SG-81030
	push	OFFSET __TI2PAD
	lea	edx, DWORD PTR $T372398[ebp]
	push	edx
	call	__CxxThrowException@8
; Line 236
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN7@getAdminID:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 238
	mov	DWORD PTR $T372399[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sToken$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372399[ebp]
$LN6@getAdminID:
; Line 239
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sToken$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR _sQuery$40622[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T40650[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T40652[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	lea	ecx, DWORD PTR _result$40653[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	lea	ecx, DWORD PTR _row$40666[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::getAdminID
PUBLIC	__$ArrayPad$
PUBLIC	?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::getAdminLevel
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	00H
	DD	00H
__catchsym$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff70H
	DD	FLAT:__catch$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__tryblocktable$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 01H
	DD	06H
	DD	07H
	DD	02H
	DD	FLAT:__catchsym$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12
__ehfuncinfo$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv232 = -228						; size = 4
tv229 = -224						; size = 4
tv240 = -220						; size = 4
tv239 = -216						; size = 4
tv238 = -212						; size = 4
tv221 = -208						; size = 4
tv220 = -204						; size = 4
tv218 = -200						; size = 4
tv237 = -196						; size = 4
tv216 = -192						; size = 4
tv236 = -188						; size = 4
tv235 = -184						; size = 4
_this$ = -180						; size = 4
$T372437 = -176						; size = 4
$T372436 = -172						; size = 4
$T372435 = -168						; size = 4
$T372434 = -164						; size = 4
$T372433 = -160						; size = 4
$T372432 = -156						; size = 4
$T372431 = -152						; size = 4
$T372430 = -148						; size = 4
_e$40598 = -144						; size = 4
_row$40577 = -140					; size = 16
_it$40567 = -124					; size = 4
_result$40564 = -120					; size = 16
_sQuery$40557 = -104					; size = 28
$T40562 = -76						; size = 28
$T40559 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_sToken$ = 8						; size = 28
?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Database::SQLite::getAdminLevel, COMDAT
; _this$ = ecx
; Line 182
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 212				; 000000d4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 184
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 185
	push	OFFSET $SG-81013
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv235[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 186
	push	OFFSET $SG-81014
	lea	eax, DWORD PTR _sToken$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40559[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv236[ebp], eax
	mov	edx, DWORD PTR tv236[ebp]
	mov	DWORD PTR tv216[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR tv216[ebp]
	push	eax
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40559[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 187
	push	OFFSET $SG-81015
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 188
	push	OFFSET $SG-81016
	lea	ecx, DWORD PTR _sToken$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T40562[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv237[ebp], eax
	mov	eax, DWORD PTR tv237[ebp]
	mov	DWORD PTR tv218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	mov	ecx, DWORD PTR tv218[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40562[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 190
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372430[ebp], esp
	lea	edx, DWORD PTR _sQuery$40557[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv220[ebp], eax
	lea	eax, DWORD PTR _result$40564[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv221[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 191
	lea	ecx, DWORD PTR _it$40567[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$40564[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@getAdminLe
$LN2@getAdminLe:
	lea	ecx, DWORD PTR _it$40567[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@getAdminLe:
	lea	edx, DWORD PTR $T372431[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$40564[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$40567[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@getAdminLe
; Line 193
	lea	ecx, DWORD PTR _it$40567[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$40577[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv238[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
; Line 194
	push	0
	lea	ecx, DWORD PTR _row$40577[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv239[ebp], eax
	mov	ecx, DWORD PTR tv239[ebp]
	push	ecx
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv240[ebp], eax
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR $T372432[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _row$40577[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$40564[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sToken$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372432[ebp]
	jmp	$LN6@getAdminLe
; Line 195
	jmp	$LN2@getAdminLe
$LN1@getAdminLe:
; Line 196
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$40564[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN7@getAdminLe
__catch$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
; Line 199
	mov	eax, DWORD PTR _e$40598[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _e$40598[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372433[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv229[ebp], eax
	push	199					; 000000c7H
	push	OFFSET $SG-81017
	push	OFFSET $SG-81018
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 200
	mov	ecx, DWORD PTR _e$40598[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$40598[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	mov	DWORD PTR $T372434[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T372434[ebp]
	push	ecx
	call	__CxxThrowException@8
; Line 201
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
__catch$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
; Line 204
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372435[ebp], esp
	push	OFFSET $SG-81019
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv232[ebp], eax
	push	204					; 000000ccH
	push	OFFSET $SG-81020
	push	OFFSET $SG-81021
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 205
	mov	DWORD PTR $T372436[ebp], OFFSET $SG-81022
	push	OFFSET __TI2PAD
	lea	edx, DWORD PTR $T372436[ebp]
	push	edx
	call	__CxxThrowException@8
; Line 206
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	ret	0
$LN7@getAdminLe:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
; Line 208
	mov	DWORD PTR $T372437[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _sToken$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372437[ebp]
$LN6@getAdminLe:
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _sToken$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR _sQuery$40557[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T40559[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T40562[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	lea	ecx, DWORD PTR _result$40564[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	lea	ecx, DWORD PTR _row$40577[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Database::SQLite::getAdminLevel
PUBLIC	__$ArrayPad$
PUBLIC	?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z ; Database::SQLite::getChatResponse
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$7
	DD	00H
	DD	00H
__catchsym$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffa8H
	DD	FLAT:__catch$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$1
__tryblocktable$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z DD 01H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$11
__ehfuncinfo$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
_TEXT	SEGMENT
tv215 = -144						; size = 4
tv212 = -140						; size = 4
tv219 = -136						; size = 4
tv148 = -132						; size = 4
tv201 = -128						; size = 4
tv200 = -124						; size = 4
tv198 = -120						; size = 4
tv193 = -116						; size = 4
_this$ = -112						; size = 4
$T372481 = -108						; size = 4
$T372471 = -104						; size = 4
$T372470 = -100						; size = 4
$T372469 = -96						; size = 4
$T372468 = -92						; size = 4
_e$40543 = -88						; size = 4
_row$40542 = -84					; size = 16
_it$40532 = -68						; size = 4
_result$40525 = -64					; size = 16
$T40526 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_cmd$ = 12						; size = 28
?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z PROC ; Database::SQLite::getChatResponse, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T372481[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 161
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 162
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	push	OFFSET $SG-81006
	lea	ecx, DWORD PTR $T40526[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv198[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372468[ebp], esp
	push	OFFSET $SG-81005
	mov	ecx, DWORD PTR tv198[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv200[ebp], eax
	lea	edx, DWORD PTR _result$40525[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv201[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T40526[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 163
	lea	eax, DWORD PTR _it$40532[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$40525[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@getChatRes
$LN2@getChatRes:
	lea	ecx, DWORD PTR _it$40532[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@getChatRes:
	lea	ecx, DWORD PTR $T372469[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$40525[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$40532[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@getChatRes
; Line 165
	lea	ecx, DWORD PTR _it$40532[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$40542[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 166
	push	0
	lea	ecx, DWORD PTR _row$40542[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv219[ebp], eax
	mov	eax, DWORD PTR tv219[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T372481[ebp]
	or	ecx, 1
	mov	DWORD PTR $T372481[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _row$40542[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _result$40525[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@getChatRes
; Line 167
	jmp	$LN2@getChatRes
$LN1@getChatRes:
; Line 168
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _result$40525[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@getChatRes
__catch$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$0:
; Line 171
	mov	edx, DWORD PTR _e$40543[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$40543[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372470[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv212[ebp], eax
	push	171					; 000000abH
	push	OFFSET $SG-81007
	push	OFFSET $SG-81008
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 172
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$2
	ret	0
__catch$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$1:
; Line 175
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372471[ebp], esp
	push	OFFSET $SG-81009
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv215[ebp], eax
	push	175					; 000000afH
	push	OFFSET $SG-81010
	push	OFFSET $SG-81011
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 176
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$2
	ret	0
$LN7@getChatRes:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$2:
; Line 178
	push	OFFSET $SG-81012
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372481[ebp]
	or	eax, 1
	mov	DWORD PTR $T372481[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@getChatRes:
; Line 179
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$3:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$4:
	lea	ecx, DWORD PTR $T40526[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$6:
	lea	ecx, DWORD PTR _result$40525[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$7:
	lea	ecx, DWORD PTR _row$40542[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z ENDP ; Database::SQLite::getChatResponse
PUBLIC	__$ArrayPad$
PUBLIC	?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z ; Database::SQLite::getAdminPassword
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$7
	DD	00H
	DD	00H
__catchsym$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffa8H
	DD	FLAT:__catch$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$1
__tryblocktable$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z DD 01H
	DD	05H
	DD	06H
	DD	02H
	DD	FLAT:__catchsym$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$11
__ehfuncinfo$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
_TEXT	SEGMENT
tv215 = -144						; size = 4
tv212 = -140						; size = 4
tv219 = -136						; size = 4
tv148 = -132						; size = 4
tv201 = -128						; size = 4
tv200 = -124						; size = 4
tv198 = -120						; size = 4
tv193 = -116						; size = 4
_this$ = -112						; size = 4
$T372516 = -108						; size = 4
$T372506 = -104						; size = 4
$T372505 = -100						; size = 4
$T372504 = -96						; size = 4
$T372503 = -92						; size = 4
_e$40510 = -88						; size = 4
_row$40509 = -84					; size = 16
_it$40499 = -68						; size = 4
_result$40366 = -64					; size = 16
$T40367 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_adminName$ = 12					; size = 28
?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z PROC ; Database::SQLite::getAdminPassword, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T372516[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 138
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 139
	lea	eax, DWORD PTR _adminName$[ebp]
	push	eax
	push	OFFSET $SG-80998
	lea	ecx, DWORD PTR $T40367[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	edx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv198[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372503[ebp], esp
	push	OFFSET $SG-80997
	mov	ecx, DWORD PTR tv198[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv200[ebp], eax
	lea	edx, DWORD PTR _result$40366[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv201[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T40367[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 140
	lea	eax, DWORD PTR _it$40499[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$40366[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@getAdminPa@2
$LN2@getAdminPa@2:
	lea	ecx, DWORD PTR _it$40499[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@getAdminPa@2:
	lea	ecx, DWORD PTR $T372504[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$40366[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$40499[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@getAdminPa@2
; Line 142
	lea	ecx, DWORD PTR _it$40499[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$40509[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 143
	push	0
	lea	ecx, DWORD PTR _row$40509[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv219[ebp], eax
	mov	eax, DWORD PTR tv219[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T372516[ebp]
	or	ecx, 1
	mov	DWORD PTR $T372516[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _row$40509[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _result$40366[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _adminName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@getAdminPa@2
; Line 144
	jmp	$LN2@getAdminPa@2
$LN1@getAdminPa@2:
; Line 145
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _result$40366[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@getAdminPa@2
__catch$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$0:
; Line 148
	mov	edx, DWORD PTR _e$40510[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _e$40510[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372505[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv212[ebp], eax
	push	148					; 00000094H
	push	OFFSET $SG-80999
	push	OFFSET $SG-81000
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 149
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$2
	ret	0
__catch$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$1:
; Line 152
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372506[ebp], esp
	push	OFFSET $SG-81001
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv215[ebp], eax
	push	152					; 00000098H
	push	OFFSET $SG-81002
	push	OFFSET $SG-81003
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 153
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$2
	ret	0
$LN7@getAdminPa@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$2:
; Line 155
	push	OFFSET $SG-81004
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T372516[ebp]
	or	eax, 1
	mov	DWORD PTR $T372516[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _adminName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@getAdminPa@2:
; Line 156
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$3:
	lea	ecx, DWORD PTR _adminName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$4:
	lea	ecx, DWORD PTR $T40367[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$6:
	lea	ecx, DWORD PTR _result$40366[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z$7:
	lea	ecx, DWORD PTR _row$40509[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getAdminPassword@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z ENDP ; Database::SQLite::getAdminPassword
PUBLIC	__$ArrayPad$
PUBLIC	?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateAdminLevel
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	01H
	DD	00H
__catchsym$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffb0H
	DD	FLAT:__catch$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$11
__ehfuncinfo$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv181 = -144						; size = 4
tv178 = -140						; size = 4
tv175 = -136						; size = 4
tv174 = -132						; size = 4
tv172 = -128						; size = 4
tv186 = -124						; size = 4
tv170 = -120						; size = 4
tv185 = -116						; size = 4
_this$ = -112						; size = 4
$T372541 = -108						; size = 4
$T372540 = -104						; size = 4
$T372539 = -100						; size = 16
$T372538 = -84						; size = 4
_e$40352 = -80						; size = 4
$T40346 = -76						; size = 28
$T40345 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_adminID$ = 8						; size = 28
_level$ = 36						; size = 28
?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::updateAdminLevel, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 122
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 123
	lea	eax, DWORD PTR _level$[ebp]
	push	eax
	push	OFFSET $SG-80991
	lea	ecx, DWORD PTR $T40345[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv185[ebp], eax
	mov	edx, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv170[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET $SG-80990
	mov	eax, DWORD PTR tv170[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40346[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv186[ebp], eax
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372538[ebp], esp
	lea	ecx, DWORD PTR _adminID$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv172[ebp]
	push	edx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	lea	eax, DWORD PTR $T372539[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv175[ebp], eax
	lea	ecx, DWORD PTR $T372539[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T40346[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40345[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 124
	jmp	SHORT $LN4@updateAdmi
__catch$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 127
	mov	ecx, DWORD PTR _e$40352[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$40352[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372540[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv178[ebp], eax
	push	127					; 0000007fH
	push	OFFSET $SG-80992
	push	OFFSET $SG-80993
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 128
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 131
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372541[ebp], esp
	push	OFFSET $SG-80994
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv181[ebp], eax
	push	131					; 00000083H
	push	OFFSET $SG-80995
	push	OFFSET $SG-80996
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 132
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@updateAdmi:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 133
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _adminID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _level$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _level$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _adminID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T40345[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T40346[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateAdminLevel@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::updateAdminLevel
PUBLIC	__$ArrayPad$
PUBLIC	?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateAdminPayday
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	01H
	DD	00H
__catchsym$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$11 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffffb0H
	DD	FLAT:__catch$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	04H
	DD	05H
	DD	02H
	DD	FLAT:__catchsym$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$11
__ehfuncinfo$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv181 = -144						; size = 4
tv178 = -140						; size = 4
tv175 = -136						; size = 4
tv174 = -132						; size = 4
tv172 = -128						; size = 4
tv186 = -124						; size = 4
tv170 = -120						; size = 4
tv185 = -116						; size = 4
_this$ = -112						; size = 4
$T372573 = -108						; size = 4
$T372572 = -104						; size = 4
$T372571 = -100						; size = 16
$T372570 = -84						; size = 4
_e$40331 = -80						; size = 4
$T40325 = -76						; size = 28
$T40324 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_adminID$ = 8						; size = 28
_date$ = 36						; size = 28
?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::updateAdminPayday, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 106
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 107
	lea	eax, DWORD PTR _date$[ebp]
	push	eax
	push	OFFSET $SG-80984
	lea	ecx, DWORD PTR $T40324[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv185[ebp], eax
	mov	edx, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv170[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	push	OFFSET $SG-80983
	mov	eax, DWORD PTR tv170[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40325[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv186[ebp], eax
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372570[ebp], esp
	lea	ecx, DWORD PTR _adminID$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv172[ebp]
	push	edx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	lea	eax, DWORD PTR $T372571[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv175[ebp], eax
	lea	ecx, DWORD PTR $T372571[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T40325[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40324[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 108
	jmp	SHORT $LN4@updateAdmi@2
__catch$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 111
	mov	ecx, DWORD PTR _e$40331[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$40331[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372572[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv178[ebp], eax
	push	111					; 0000006fH
	push	OFFSET $SG-80985
	push	OFFSET $SG-80986
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 112
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 115
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372573[ebp], esp
	push	OFFSET $SG-80987
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv181[ebp], eax
	push	115					; 00000073H
	push	OFFSET $SG-80988
	push	OFFSET $SG-80989
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 116
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@updateAdmi@2:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 117
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _adminID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _date$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _date$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _adminID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T40324[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T40325[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateAdminPayday@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::updateAdminPayday
PUBLIC	__$ArrayPad$
PUBLIC	?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateAdminPassword
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$8
	DD	01H
	DD	00H
__catchsym$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$13 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff78H
	DD	FLAT:__catch$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	06H
	DD	07H
	DD	02H
	DD	FLAT:__catchsym$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$13
__ehfuncinfo$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv196 = -216						; size = 4
tv193 = -212						; size = 4
tv190 = -208						; size = 4
tv189 = -204						; size = 4
tv187 = -200						; size = 4
tv203 = -196						; size = 4
tv185 = -192						; size = 4
tv202 = -188						; size = 4
tv183 = -184						; size = 4
tv201 = -180						; size = 4
tv181 = -176						; size = 4
tv200 = -172						; size = 4
_this$ = -168						; size = 4
$T372605 = -164						; size = 4
$T372604 = -160						; size = 4
$T372603 = -156						; size = 16
$T372602 = -140						; size = 4
_e$40310 = -136						; size = 4
$T40303 = -132						; size = 28
$T40302 = -104						; size = 28
$T40301 = -76						; size = 28
$T40300 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_guid$ = 8						; size = 28
_pwd$ = 36						; size = 28
?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::updateAdminPassword, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 200				; 000000c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 90
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 91
	lea	eax, DWORD PTR _pwd$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40300[ebp]
	push	ecx
	call	?md5@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@@Z ; dlib::md5
	add	esp, 8
	mov	DWORD PTR tv200[ebp], eax
	mov	edx, DWORD PTR tv200[ebp]
	mov	DWORD PTR tv181[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	push	OFFSET $SG-80977
	lea	ecx, DWORD PTR $T40301[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv201[ebp], eax
	mov	edx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv183[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	push	OFFSET $SG-80976
	mov	eax, DWORD PTR tv183[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40302[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv202[ebp], eax
	mov	edx, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv185[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	eax, DWORD PTR _guid$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv185[ebp]
	push	ecx
	lea	edx, DWORD PTR $T40303[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv203[ebp], eax
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372602[ebp], esp
	push	OFFSET $SG-80975
	mov	edx, DWORD PTR tv187[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv189[ebp], eax
	lea	eax, DWORD PTR $T372603[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv190[ebp], eax
	lea	ecx, DWORD PTR $T372603[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T40303[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T40302[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T40301[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40300[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 92
	jmp	$LN4@updateAdmi@3
__catch$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 95
	mov	ecx, DWORD PTR _e$40310[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$40310[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372604[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv193[ebp], eax
	push	95					; 0000005fH
	push	OFFSET $SG-80978
	push	OFFSET $SG-80979
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 96
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 99
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372605[ebp], esp
	push	OFFSET $SG-80980
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	push	99					; 00000063H
	push	OFFSET $SG-80981
	push	OFFSET $SG-80982
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 100
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@updateAdmi@3:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 101
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _guid$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _pwd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _pwd$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _guid$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T40300[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T40301[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7:
	lea	ecx, DWORD PTR $T40302[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$8:
	lea	ecx, DWORD PTR $T40303[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::updateAdminPassword
PUBLIC	__$ArrayPad$
PUBLIC	?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateAdminName
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$8
	DD	01H
	DD	00H
__catchsym$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$13 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff78H
	DD	FLAT:__catch$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
__tryblocktable$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 02H
	DD	06H
	DD	07H
	DD	02H
	DD	FLAT:__catchsym$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$13
__ehfuncinfo$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv196 = -216						; size = 4
tv193 = -212						; size = 4
tv190 = -208						; size = 4
tv189 = -204						; size = 4
tv187 = -200						; size = 4
tv203 = -196						; size = 4
tv185 = -192						; size = 4
tv202 = -188						; size = 4
tv183 = -184						; size = 4
tv201 = -180						; size = 4
tv181 = -176						; size = 4
tv200 = -172						; size = 4
_this$ = -168						; size = 4
$T372639 = -164						; size = 4
$T372638 = -160						; size = 4
$T372637 = -156						; size = 16
$T372636 = -140						; size = 4
_e$40286 = -136						; size = 4
$T40279 = -132						; size = 28
$T40278 = -104						; size = 28
$T40277 = -76						; size = 28
$T40276 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_guid$ = 8						; size = 28
_name$ = 36						; size = 28
?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Database::SQLite::updateAdminName, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 200				; 000000c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 74
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 75
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40276[ebp]
	push	ecx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv200[ebp], eax
	mov	edx, DWORD PTR tv200[ebp]
	mov	DWORD PTR tv181[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR tv181[ebp]
	push	eax
	push	OFFSET $SG-80969
	lea	ecx, DWORD PTR $T40277[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv201[ebp], eax
	mov	edx, DWORD PTR tv201[ebp]
	mov	DWORD PTR tv183[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	push	OFFSET $SG-80968
	mov	eax, DWORD PTR tv183[ebp]
	push	eax
	lea	ecx, DWORD PTR $T40278[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv202[ebp], eax
	mov	edx, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv185[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	eax, DWORD PTR _guid$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv185[ebp]
	push	ecx
	lea	edx, DWORD PTR $T40279[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv203[ebp], eax
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372636[ebp], esp
	push	OFFSET $SG-80967
	mov	edx, DWORD PTR tv187[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv189[ebp], eax
	lea	eax, DWORD PTR $T372637[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv190[ebp], eax
	lea	ecx, DWORD PTR $T372637[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T40279[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T40278[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T40277[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T40276[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 76
	jmp	$LN4@updateAdmi@4
__catch$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
; Line 79
	mov	ecx, DWORD PTR _e$40286[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$40286[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372638[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv193[ebp], eax
	push	79					; 0000004fH
	push	OFFSET $SG-80970
	push	OFFSET $SG-80971
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 80
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
__catch$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
; Line 83
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372639[ebp], esp
	push	OFFSET $SG-80972
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	push	83					; 00000053H
	push	OFFSET $SG-80973
	push	OFFSET $SG-80974
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 84
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	ret	0
$LN4@updateAdmi@4:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
; Line 85
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _guid$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$4:
	lea	ecx, DWORD PTR _guid$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$5:
	lea	ecx, DWORD PTR $T40276[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$6:
	lea	ecx, DWORD PTR $T40277[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$7:
	lea	ecx, DWORD PTR $T40278[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$8:
	lea	ecx, DWORD PTR $T40279[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Database::SQLite::updateAdminName
PUBLIC	__$ArrayPad$
PUBLIC	?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ ; Database::SQLite::banlist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$11
	DD	00H
	DD	FLAT:__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$3
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$6
	DD	04H
	DD	FLAT:__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$7
	DD	05H
	DD	FLAT:__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$8
	DD	01H
	DD	00H
__catchsym$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$12 DD 08H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff04H
	DD	FLAT:__catch$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$1
__tryblocktable$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ DD 02H
	DD	06H
	DD	07H
	DD	02H
	DD	FLAT:__catchsym$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$12
__ehfuncinfo$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ
_TEXT	SEGMENT
tv240 = -336						; size = 4
tv237 = -332						; size = 4
tv254 = -328						; size = 4
tv235 = -324						; size = 4
tv253 = -320						; size = 4
tv252 = -316						; size = 4
tv251 = -312						; size = 4
tv250 = -308						; size = 4
tv249 = -304						; size = 4
tv248 = -300						; size = 4
tv247 = -296						; size = 4
tv143 = -292						; size = 4
tv65 = -288						; size = 4
tv230 = -284						; size = 4
tv229 = -280						; size = 4
_this$ = -276						; size = 4
$T373864 = -272						; size = 4
$T373851 = -268						; size = 4
$T373850 = -264						; size = 4
$T373849 = -260						; size = 4
$T373848 = -256						; size = 4
_e$41680 = -252						; size = 4
_b$41676 = -248						; size = 144
_row$41675 = -100					; size = 16
_it$41665 = -84						; size = 4
_result$41661 = -80					; size = 16
_vBanlist$ = -64					; size = 16
$T41679 = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ PROC ; Database::SQLite::banlist, COMDAT
; _this$ = ecx
; Line 458
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 320				; 00000140H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T373864[ebp], 0
; Line 459
	lea	ecx, DWORD PTR _vBanlist$[ebp]
	call	??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >
	mov	DWORD PTR __$EHRec$[ebp+12], 1
; Line 461
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 462
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373848[ebp], esp
	push	OFFSET $SG-81109
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv229[ebp], eax
	lea	eax, DWORD PTR _result$41661[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?query@SQLite@Database@@QAE?AV?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@@Z ; Database::SQLite::query
	mov	DWORD PTR tv230[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 463
	lea	ecx, DWORD PTR _it$41665[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$41661[ebp]
	call	?begin@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::begin
	jmp	SHORT $LN3@banlist
$LN2@banlist:
	lea	ecx, DWORD PTR _it$41665[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator++
$LN3@banlist:
	lea	edx, DWORD PTR $T373849[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$41661[ebp]
	call	?end@?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@2@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$41665[ebp]
	call	??M?$_Vector_const_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator<
	movzx	eax, al
	test	eax, eax
	je	$LN1@banlist
; Line 465
	lea	ecx, DWORD PTR _it$41665[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@@std@@QBEAAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv65[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 467
	lea	ecx, DWORD PTR _b$41676[ebp]
	call	??0ban@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 468
	push	0
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	push	ecx
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv247[ebp], eax
	mov	edx, DWORD PTR tv247[ebp]
	mov	DWORD PTR _b$41676[ebp], edx
; Line 469
	push	1
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv248[ebp], eax
	mov	eax, DWORD PTR tv248[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$41676[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 470
	push	2
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	push	ecx
	lea	ecx, DWORD PTR _b$41676[ebp+32]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 471
	push	3
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv250[ebp], eax
	mov	edx, DWORD PTR tv250[ebp]
	push	edx
	lea	ecx, DWORD PTR _b$41676[ebp+60]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 472
	push	4
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv251[ebp], eax
	mov	eax, DWORD PTR tv251[ebp]
	push	eax
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	DWORD PTR tv252[ebp], eax
	mov	ecx, DWORD PTR tv252[ebp]
	push	ecx
	lea	edx, DWORD PTR $T41679[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getAdminName@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Database::SQLite::getAdminName
	mov	DWORD PTR tv253[ebp], eax
	mov	eax, DWORD PTR tv253[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	ecx, DWORD PTR tv235[ebp]
	push	ecx
	lea	ecx, DWORD PTR _b$41676[ebp+88]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T41679[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 473
	push	5
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	?at@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::at
	mov	DWORD PTR tv254[ebp], eax
	mov	edx, DWORD PTR tv254[ebp]
	push	edx
	lea	ecx, DWORD PTR _b$41676[ebp+116]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 474
	lea	eax, DWORD PTR _b$41676[ebp]
	push	eax
	lea	ecx, DWORD PTR _vBanlist$[ebp]
	call	?push_back@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAEXABUban@Database@@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::push_back
; Line 475
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _b$41676[ebp]
	call	??1ban@Database@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _row$41675[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	jmp	$LN2@banlist
$LN1@banlist:
; Line 476
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _result$41661[ebp]
	call	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	jmp	$LN7@banlist
__catch$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$0:
; Line 479
	mov	ecx, DWORD PTR _e$41680[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _e$41680[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373850[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv237[ebp], eax
	push	479					; 000001dfH
	push	OFFSET $SG-81110
	push	OFFSET $SG-81111
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 480
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$2
	ret	0
__catch$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$1:
; Line 483
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373851[ebp], esp
	push	OFFSET $SG-81112
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv240[ebp], eax
	push	483					; 000001e3H
	push	OFFSET $SG-81113
	push	OFFSET $SG-81114
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
; Line 484
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$2
	ret	0
$LN7@banlist:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$2:
; Line 486
	lea	ecx, DWORD PTR _vBanlist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::vector<Database::ban,std::allocator<Database::ban> >
	mov	edx, DWORD PTR $T373864[ebp]
	or	edx, 1
	mov	DWORD PTR $T373864[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _vBanlist$[ebp]
	call	??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 487
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$3:
	lea	ecx, DWORD PTR _vBanlist$[ebp]
	jmp	??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$5:
	lea	ecx, DWORD PTR _result$41661[ebp]
	jmp	??1?$vector@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$allocator@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >::~vector<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::allocator<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$6:
	lea	ecx, DWORD PTR _row$41675[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$7:
	lea	ecx, DWORD PTR _b$41676[ebp]
	jmp	??1ban@Database@@QAE@XZ
__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$8:
	lea	ecx, DWORD PTR $T41679[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ$11:
	mov	eax, DWORD PTR $T373864[ebp]
	and	eax, 1
	je	$LN19@banlist
	and	DWORD PTR $T373864[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
$LN19@banlist:
	ret	0
__ehhandler$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ ENDP ; Database::SQLite::banlist
; Function compile flags: /Odtp
;	COMDAT ??__Esa@dlib@@YAXXZ
text$yc	SEGMENT
$T374872 = -1						; size = 1
??__Esa@dlib@@YAXXZ PROC				; dlib::`dynamic initializer for 'sa'', COMDAT
; File e:\library\dlib\dlib\string\string.h
; Line 488
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T374872[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Esa@dlib@@YAXXZ ENDP				; dlib::`dynamic initializer for 'sa''
_sa	DB	01H DUP (?)
_sa$initializer$ DD FLAT:??__Esa@dlib@@YAXXZ
END
