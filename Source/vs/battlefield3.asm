; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Work\daspirum\Source\src\battlefield3.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4string_cast_error@dlib@@6B@		; dlib::string_cast_error::`RTTI Complete Object Locator'
PUBLIC	??_R3string_cast_error@dlib@@8			; dlib::string_cast_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2string_cast_error@dlib@@8			; dlib::string_cast_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@string_cast_error@dlib@@8		; dlib::string_cast_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4cast_to_string_error@dlib@@6B@		; dlib::cast_to_string_error::`RTTI Complete Object Locator'
PUBLIC	??_R3cast_to_string_error@dlib@@8		; dlib::cast_to_string_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2cast_to_string_error@dlib@@8		; dlib::cast_to_string_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@cast_to_string_error@dlib@@8	; dlib::cast_to_string_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error@dlib@@6B@				; dlib::error::`RTTI Complete Object Locator'
PUBLIC	??_R3error@dlib@@8				; dlib::error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error@dlib@@8				; dlib::error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error@dlib@@8			; dlib::error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??0struct_player@Battlefield@@QAE@XZ		; Battlefield::struct_player::struct_player
PUBLIC	??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@XZ ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
PUBLIC	??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??1struct_settings@Database@@QAE@XZ		; Database::struct_settings::~struct_settings
PUBLIC	??_Gstruct_settings@Database@@QAEPAXI@Z		; Database::struct_settings::`scalar deleting destructor'
PUBLIC	??_GSQLite@Database@@QAEPAXI@Z			; Database::SQLite::`scalar deleting destructor'
PUBLIC	??1?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
PUBLIC	?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z ; std::allocator<Battlefield::struct_Vote>::deallocate
PUBLIC	??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z ; std::_Ptr_cat<Battlefield::struct_Vote,Battlefield::struct_Vote>
PUBLIC	??1struct_Vote@Battlefield@@QAE@XZ		; Battlefield::struct_Vote::~struct_Vote
PUBLIC	??_Gstruct_Vote@Battlefield@@QAEPAXI@Z		; Battlefield::struct_Vote::`scalar deleting destructor'
PUBLIC	??$_Destroy@Ustruct_Vote@Battlefield@@@std@@YAXPAUstruct_Vote@Battlefield@@@Z ; std::_Destroy<Battlefield::struct_Vote>
PUBLIC	?destroy@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@@Z ; std::allocator<Battlefield::struct_Vote>::destroy
PUBLIC	??$_Dest_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@@Z ; std::_Dest_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
PUBLIC	??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >
PUBLIC	??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >
PUBLIC	?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Destroy
PUBLIC	?_Tidy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Tidy
PUBLIC	??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
PUBLIC	??1Vote@Battlefield@@QAE@XZ			; Battlefield::Vote::~Vote
PUBLIC	??1struct_player@Battlefield@@QAE@XZ		; Battlefield::struct_player::~struct_player
PUBLIC	??B?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBE_NXZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator bool
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??0struct_chat@Battlefield@@QAE@XZ		; Battlefield::struct_chat::struct_chat
PUBLIC	??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_helper<unsigned int>::cast<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?pop_front@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::pop_front
PUBLIC	?push_back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXABUstruct_chat@Battlefield@@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::push_back
PUBLIC	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z	; std::char_traits<char>::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::size
PUBLIC	?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
PUBLIC	??D?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEAAUstruct_chat@Battlefield@@XZ ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
PUBLIC	??F?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
PUBLIC	?back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEAAUstruct_chat@Battlefield@@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::back
PUBLIC	?timeFromNow@helper@@YANEEG@Z			; helper::timeFromNow
PUBLIC	?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
PUBLIC	?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat
PUBLIC	??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
PUBLIC	?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif
PUBLIC	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
PUBLIC	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z ; dlib::split<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ; dlib::cast_to_string<unsigned short>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
PUBLIC	?hex@std@@YAAAVios_base@1@AAV21@@Z		; std::hex
PUBLIC	??$_dTcast@D@@YADD_W@Z				; _dTcast<char>
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::error::error
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_error::string_cast_error
PUBLIC	??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1string_cast_error@dlib@@UAE@XZ		; dlib::string_cast_error::~string_cast_error
PUBLIC	??_Gstring_cast_error@dlib@@UAEPAXI@Z		; dlib::string_cast_error::`scalar deleting destructor'
PUBLIC	??0string_cast_error@dlib@@QAE@ABV01@@Z		; dlib::string_cast_error::string_cast_error
PUBLIC	??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_helper<unsigned short>::cast<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
PUBLIC	??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z ; dlib::cast_to_string<double>
PUBLIC	??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ; dlib::cast_to_string<int>
PUBLIC	??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::~_Vector_val<Database::admin,std::allocator<Database::admin> >
PUBLIC	?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z ; std::allocator<Database::admin>::deallocate
PUBLIC	??$_Ptr_cat@Uadmin@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUadmin@Database@@0@Z ; std::_Ptr_cat<Database::admin,Database::admin>
PUBLIC	??1admin@Database@@QAE@XZ			; Database::admin::~admin
PUBLIC	??_Gadmin@Database@@QAEPAXI@Z			; Database::admin::`scalar deleting destructor'
PUBLIC	??$_Destroy@Uadmin@Database@@@std@@YAXPAUadmin@Database@@@Z ; std::_Destroy<Database::admin>
PUBLIC	?destroy@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@@Z ; std::allocator<Database::admin>::destroy
PUBLIC	??$_Dest_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@@Z ; std::_Dest_val<std::allocator<Database::admin>,Database::admin>
PUBLIC	??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Database::admin> >
PUBLIC	??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@@Z ; std::_Destroy_range<std::allocator<Database::admin> >
PUBLIC	?_Destroy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Destroy
PUBLIC	?_Tidy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::_Tidy
PUBLIC	??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
PUBLIC	?begin@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::begin
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
PUBLIC	?end@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::end
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEABUadmin@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator!=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?assign@?$char_traits@D@std@@SAPADPADID@Z	; std::char_traits<char>::assign
PUBLIC	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@E@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0error@dlib@@QAE@W4error_type@1@@Z		; dlib::error::error
PUBLIC	??0cast_to_string_error@dlib@@QAE@XZ		; dlib::cast_to_string_error::cast_to_string_error
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??0error@dlib@@QAE@ABV01@@Z			; dlib::error::error
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?type_to_string@error@dlib@@QBEPBDXZ		; dlib::error::type_to_string
PUBLIC	?what@error@dlib@@UBEPBDXZ			; dlib::error::what
PUBLIC	??_Gerror@dlib@@UAEPAXI@Z			; dlib::error::`scalar deleting destructor'
PUBLIC	??1error@dlib@@UAE@XZ				; dlib::error::~error
PUBLIC	??1cast_to_string_error@dlib@@UAE@XZ		; dlib::cast_to_string_error::~cast_to_string_error
PUBLIC	??_Gcast_to_string_error@dlib@@UAEPAXI@Z	; dlib::cast_to_string_error::`scalar deleting destructor'
PUBLIC	??0cast_to_string_error@dlib@@QAE@ABV01@@Z	; dlib::cast_to_string_error::cast_to_string_error
PUBLIC	??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z ; dlib::cast_to_string<unsigned char>
PUBLIC	??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::~_Vector_val<Database::ban,std::allocator<Database::ban> >
PUBLIC	?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z ; std::allocator<Database::ban>::deallocate
PUBLIC	??$_Ptr_cat@Uban@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUban@Database@@0@Z ; std::_Ptr_cat<Database::ban,Database::ban>
PUBLIC	??1ban@Database@@QAE@XZ				; Database::ban::~ban
PUBLIC	??_Gban@Database@@QAEPAXI@Z			; Database::ban::`scalar deleting destructor'
PUBLIC	??$_Destroy@Uban@Database@@@std@@YAXPAUban@Database@@@Z ; std::_Destroy<Database::ban>
PUBLIC	?destroy@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@@Z ; std::allocator<Database::ban>::destroy
PUBLIC	??$_Dest_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@@Z ; std::_Dest_val<std::allocator<Database::ban>,Database::ban>
PUBLIC	??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Database::ban> >
PUBLIC	??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@@Z ; std::_Destroy_range<std::allocator<Database::ban> >
PUBLIC	?_Destroy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Destroy
PUBLIC	?_Tidy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::_Tidy
PUBLIC	??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
PUBLIC	?begin@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::begin
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
PUBLIC	?end@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::end
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator!=
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
PUBLIC	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
PUBLIC	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?get_allocator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::get_allocator
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?9V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; std::operator!=<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Assign_rv@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV12@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Assign_rv
PUBLIC	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
PUBLIC	??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
PUBLIC	??$?0Ustruct_chat@Battlefield@@@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@ABV?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node><Battlefield::struct_chat>
PUBLIC	??0?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
PUBLIC	??0?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
PUBLIC	?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
PUBLIC	?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
PUBLIC	?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
PUBLIC	??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
PUBLIC	??$_Allocate@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocate
PUBLIC	??$addressof@Ustruct_chat@Battlefield@@@std@@YAPAUstruct_chat@Battlefield@@AAU12@@Z ; std::addressof<Battlefield::struct_chat>
PUBLIC	??0struct_chat@Battlefield@@QAE@ABU01@@Z	; Battlefield::struct_chat::struct_chat
PUBLIC	??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z ; std::_Construct<Battlefield::struct_chat,Battlefield::struct_chat const &>
PUBLIC	?construct@?$allocator@Ustruct_chat@Battlefield@@@std@@QAEXPAUstruct_chat@Battlefield@@ABU34@@Z ; std::allocator<Battlefield::struct_chat>::construct
PUBLIC	??$forward@ABUstruct_chat@Battlefield@@@std@@YAABUstruct_chat@Battlefield@@ABU12@@Z ; std::forward<Battlefield::struct_chat const &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_chat@Battlefield@@@std@@Ustruct_chat@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chat@Battlefield@@@0@PAUstruct_chat@Battlefield@@ABU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_chat>,Battlefield::struct_chat,Battlefield::struct_chat const &>
PUBLIC	?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Buynode
PUBLIC	?max_size@?$allocator@Ustruct_chat@Battlefield@@@std@@QBEIXZ ; std::allocator<Battlefield::struct_chat>::max_size
PUBLIC	?max_size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::max_size
PUBLIC	?_Incsize@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXI@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Incsize
PUBLIC	?_Insert@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@ABUstruct_chat@Battlefield@@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>
PUBLIC	??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
PUBLIC	??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
PUBLIC	?_Make_iter@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Make_iter
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_Mynode
PUBLIC	??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
PUBLIC	?erase@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::erase
PUBLIC	?_Myval@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAUstruct_chat@Battlefield@@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Myval
PUBLIC	??D?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEABUstruct_chat@Battlefield@@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
PUBLIC	??F?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
PUBLIC	??8?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator!=
PUBLIC	??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
PUBLIC	??$insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
PUBLIC	??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
PUBLIC	??1?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate
PUBLIC	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
PUBLIC	??1struct_chat@Battlefield@@QAE@XZ		; Battlefield::struct_chat::~struct_chat
PUBLIC	??1_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node::~_Node
PUBLIC	??_G_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAXI@Z ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node::`scalar deleting destructor'
PUBLIC	??$_Destroy@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::destroy
PUBLIC	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>,std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
PUBLIC	?clear@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::clear
PUBLIC	?_Tidy@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Tidy
PUBLIC	??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
PUBLIC	??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
PUBLIC	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
PUBLIC	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
PUBLIC	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
PUBLIC	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
PUBLIC	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
PUBLIC	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
PUBLIC	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
PUBLIC	??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
PUBLIC	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
PUBLIC	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
PUBLIC	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
PUBLIC	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
PUBLIC	??$_Find@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z ; std::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::find<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unchecked
PUBLIC	??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?_Rechecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV12@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rechecked
PUBLIC	??$_Rechecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAV10@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Rechecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator==<char,char>
PUBLIC	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z		; std::operator!=<char,char>
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Remove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z ; std::_Remove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$remove@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::remove<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	??_C@_0N@HGBOFMBA@EPORT_IN_USE?$AA@		; `string'
PUBLIC	??_C@_08NJAOJCGE@ETIMEOUT?$AA@			; `string'
PUBLIC	??_C@_0M@IHPKCGCP@ECONNECTION?$AA@		; `string'
PUBLIC	??_C@_09PKLEEDLJ@ELISTENER?$AA@			; `string'
PUBLIC	??_C@_08OIIHLIHK@ERESOLVE?$AA@			; `string'
PUBLIC	??_C@_08FKLNEDEP@EMONITOR?$AA@			; `string'
PUBLIC	??_C@_0P@KNGBPCNG@ECREATE_THREAD?$AA@		; `string'
PUBLIC	??_C@_0O@HFAJODEH@ECREATE_MUTEX?$AA@		; `string'
PUBLIC	??_C@_0BB@EIFDCKCH@ECREATE_SIGNALER?$AA@	; `string'
PUBLIC	??_C@_0N@LPJMHPLA@EUNSPECIFIED?$AA@		; `string'
PUBLIC	??_C@_0P@CNHBDIIJ@EGENERAL_TYPE1?$AA@		; `string'
PUBLIC	??_C@_0P@GFMGLEK@EGENERAL_TYPE2?$AA@		; `string'
PUBLIC	??_C@_0P@BPEHFKAL@EGENERAL_TYPE3?$AA@		; `string'
PUBLIC	??_C@_0BA@ECJKINJI@EINVALID_OPTION?$AA@		; `string'
PUBLIC	??_C@_0O@FKLOKCDD@ETOO_FEW_ARGS?$AA@		; `string'
PUBLIC	??_C@_0P@OJEAEGFK@ETOO_MANY_ARGS?$AA@		; `string'
PUBLIC	??_C@_07OMFDINFC@ESOCKET?$AA@			; `string'
PUBLIC	??_C@_07MEGFPAOI@ETHREAD?$AA@			; `string'
PUBLIC	??_C@_04OEMBKHEI@EGUI?$AA@			; `string'
PUBLIC	??_C@_06KBMJJNNM@EFATAL?$AA@			; `string'
PUBLIC	??_C@_0P@EHPKLALH@EBROKEN_ASSERT?$AA@		; `string'
PUBLIC	??_C@_0M@FAMIPOJD@EIMAGE_LOAD?$AA@		; `string'
PUBLIC	??_C@_0M@JJNDCELI@EDIR_CREATE?$AA@		; `string'
PUBLIC	??_C@_0BG@KGJDGDG@EINCOMPATIBLE_OPTIONS?$AA@	; `string'
PUBLIC	??_C@_0BJ@EOKNONCF@EMISSING_REQUIRED_OPTION?$AA@ ; `string'
PUBLIC	??_C@_0BE@MLIOEHOK@EINVALID_OPTION_ARG?$AA@	; `string'
PUBLIC	??_C@_0BF@HAKJKBFK@EMULTIPLE_OCCURANCES?$AA@	; `string'
PUBLIC	??_C@_0P@KBGGBGPJ@ECONFIG_READER?$AA@		; `string'
PUBLIC	??_C@_0M@FCNFANEH@EIMAGE_SAVE?$AA@		; `string'
PUBLIC	??_C@_0BA@PJCLMLLK@ECAST_TO_STRING?$AA@		; `string'
PUBLIC	??_C@_0N@NAMOGKME@ESTRING_CAST?$AA@		; `string'
PUBLIC	??_C@_0P@FAEPAFAG@EUTF8_TO_UTF32?$AA@		; `string'
PUBLIC	??_C@_0O@OEFMJDCD@EOPTION_PARSE?$AA@		; `string'
PUBLIC	??_C@_0BF@MDHLFKDO@undefined?5error?5type?$AA@	; `string'
PUBLIC	??_R0?AVerror@dlib@@@8				; dlib::error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVerror@dlib@@@8??0error@dlib@@QAE@ABV01@@Z44
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_C@_01GEODFPGF@?8?$AA@			; `string'
PUBLIC	??_C@_0CG@BENFANJG@string?5cast?5error?3?5invalid?5strin@ ; `string'
PUBLIC	??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_string<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8 ; std::_String_val<char,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R0?AU_Container_base0@std@@@8		; std::_Container_base0 `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z28
PUBLIC	__CT??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z28
PUBLIC	__CT??_R0?AU_Container_base0@std@@@81
PUBLIC	__CTA3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
PUBLIC	__TI3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
PUBLIC	??_R0?AVcast_to_string_error@dlib@@@8		; dlib::cast_to_string_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVcast_to_string_error@dlib@@@8??0cast_to_string_error@dlib@@QAE@ABV01@@Z44
PUBLIC	__CTA3?AVcast_to_string_error@dlib@@
PUBLIC	__TI3?AVcast_to_string_error@dlib@@
PUBLIC	?_Stz@?$fpos@H@std@@0HB				; std::fpos<int>::_Stz
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??_R0?AVstring_cast_error@dlib@@@8		; dlib::string_cast_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVstring_cast_error@dlib@@@8??0string_cast_error@dlib@@QAE@ABV01@@Z44
PUBLIC	__CTA3?AVstring_cast_error@dlib@@
PUBLIC	__TI3?AVstring_cast_error@dlib@@
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_7error@dlib@@6B@				; dlib::error::`vftable'
PUBLIC	??_7cast_to_string_error@dlib@@6B@		; dlib::cast_to_string_error::`vftable'
PUBLIC	??_7string_cast_error@dlib@@6B@			; dlib::string_cast_error::`vftable'
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp__atoi:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z:PROC
EXTRN	__imp__memchr:PROC
EXTRN	__imp___difftime64:PROC
EXTRN	__imp___localtime64:PROC
EXTRN	__imp___mktime64:PROC
EXTRN	__imp___time64:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z:PROC
EXTRN	__imp__tolower:PROC
EXTRN	__imp_?setf@ios_base@std@@QAEHHH@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z:PROC
EXTRN	__imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAG@Z:PROC
EXTRN	__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_Estring_cast_error@dlib@@UAEPAXI@Z:PROC	; dlib::string_cast_error::`vector deleting destructor'
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp__toupper:PROC
EXTRN	__imp_??7ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC
EXTRN	__imp_?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC
EXTRN	__imp_?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC
EXTRN	__imp_?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC
EXTRN	__imp_?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC
EXTRN	__imp_?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC
EXTRN	__imp_?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_Eerror@dlib@@UAEPAXI@Z:PROC			; dlib::error::`vector deleting destructor'
EXTRN	??_Ecast_to_string_error@dlib@@UAEPAXI@Z:PROC	; dlib::cast_to_string_error::`vector deleting destructor'
EXTRN	__imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z:PROC
EXTRN	__imp_?_Orphan_all@_Container_base0@std@@QAEXXZ:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp_??2@YAPAXI@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_?what@exception@std@@UBEPBDXZ:PROC
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_??3@YAXPAX@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
;	COMDAT ?whitelistIncrement@?HD@??refresh@game@Battlefield@@QAEXXZ@4EA
_BSS	SEGMENT
?whitelistIncrement@?HD@??refresh@game@Battlefield@@QAEXXZ@4EA DB 01H DUP (?) ; `Battlefield::game::refresh'::`115'::whitelistIncrement
;	COMDAT ??_7string_cast_error@dlib@@6B@
CONST	SEGMENT
??_7string_cast_error@dlib@@6B@ DD FLAT:??_R4string_cast_error@dlib@@6B@ ; dlib::string_cast_error::`vftable'
	DD	FLAT:??_Estring_cast_error@dlib@@UAEPAXI@Z
	DD	FLAT:?what@error@dlib@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4string_cast_error@dlib@@6B@
rdata$r	SEGMENT
??_R4string_cast_error@dlib@@6B@ DD 00H			; dlib::string_cast_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVstring_cast_error@dlib@@@8
	DD	FLAT:??_R3string_cast_error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_R3string_cast_error@dlib@@8
rdata$r	SEGMENT
??_R3string_cast_error@dlib@@8 DD 00H			; dlib::string_cast_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2string_cast_error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_R2string_cast_error@dlib@@8
rdata$r	SEGMENT
??_R2string_cast_error@dlib@@8 DD FLAT:??_R1A@?0A@EA@string_cast_error@dlib@@8 ; dlib::string_cast_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error@dlib@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@string_cast_error@dlib@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@string_cast_error@dlib@@8 DD FLAT:??_R0?AVstring_cast_error@dlib@@@8 ; dlib::string_cast_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3string_cast_error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_7cast_to_string_error@dlib@@6B@
CONST	SEGMENT
??_7cast_to_string_error@dlib@@6B@ DD FLAT:??_R4cast_to_string_error@dlib@@6B@ ; dlib::cast_to_string_error::`vftable'
	DD	FLAT:??_Ecast_to_string_error@dlib@@UAEPAXI@Z
	DD	FLAT:?what@error@dlib@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4cast_to_string_error@dlib@@6B@
rdata$r	SEGMENT
??_R4cast_to_string_error@dlib@@6B@ DD 00H		; dlib::cast_to_string_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVcast_to_string_error@dlib@@@8
	DD	FLAT:??_R3cast_to_string_error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_R3cast_to_string_error@dlib@@8
rdata$r	SEGMENT
??_R3cast_to_string_error@dlib@@8 DD 00H		; dlib::cast_to_string_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2cast_to_string_error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_R2cast_to_string_error@dlib@@8
rdata$r	SEGMENT
??_R2cast_to_string_error@dlib@@8 DD FLAT:??_R1A@?0A@EA@cast_to_string_error@dlib@@8 ; dlib::cast_to_string_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error@dlib@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@cast_to_string_error@dlib@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@cast_to_string_error@dlib@@8 DD FLAT:??_R0?AVcast_to_string_error@dlib@@@8 ; dlib::cast_to_string_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3cast_to_string_error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_7error@dlib@@6B@
CONST	SEGMENT
??_7error@dlib@@6B@ DD FLAT:??_R4error@dlib@@6B@	; dlib::error::`vftable'
	DD	FLAT:??_Eerror@dlib@@UAEPAXI@Z
	DD	FLAT:?what@error@dlib@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4error@dlib@@6B@
rdata$r	SEGMENT
??_R4error@dlib@@6B@ DD 00H				; dlib::error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror@dlib@@@8
	DD	FLAT:??_R3error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_R3error@dlib@@8
rdata$r	SEGMENT
??_R3error@dlib@@8 DD 00H				; dlib::error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_R2error@dlib@@8
rdata$r	SEGMENT
??_R2error@dlib@@8 DD FLAT:??_R1A@?0A@EA@error@dlib@@8	; dlib::error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error@dlib@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error@dlib@@8 DD FLAT:??_R0?AVerror@dlib@@@8 ; dlib::error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error@dlib@@8
rdata$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	050H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	058H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
_DATA	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
_DATA	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT __TI3?AVstring_cast_error@dlib@@
xdata$x	SEGMENT
__TI3?AVstring_cast_error@dlib@@ DD 00H
	DD	FLAT:??1string_cast_error@dlib@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVstring_cast_error@dlib@@
xdata$x	ENDS
;	COMDAT __CTA3?AVstring_cast_error@dlib@@
xdata$x	SEGMENT
__CTA3?AVstring_cast_error@dlib@@ DD 03H
	DD	FLAT:__CT??_R0?AVstring_cast_error@dlib@@@8??0string_cast_error@dlib@@QAE@ABV01@@Z44
	DD	FLAT:__CT??_R0?AVerror@dlib@@@8??0error@dlib@@QAE@ABV01@@Z44
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVstring_cast_error@dlib@@@8??0string_cast_error@dlib@@QAE@ABV01@@Z44
xdata$x	SEGMENT
__CT??_R0?AVstring_cast_error@dlib@@@8??0string_cast_error@dlib@@QAE@ABV01@@Z44 DD 00H
	DD	FLAT:??_R0?AVstring_cast_error@dlib@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	02cH
	DD	FLAT:??0string_cast_error@dlib@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVstring_cast_error@dlib@@@8
_DATA	SEGMENT
??_R0?AVstring_cast_error@dlib@@@8 DD FLAT:??_7type_info@@6B@ ; dlib::string_cast_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVstring_cast_error@dlib@@', 00H
_DATA	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ?_Stz@?$fpos@H@std@@0HB
CONST	SEGMENT
?_Stz@?$fpos@H@std@@0HB DD 00H				; std::fpos<int>::_Stz
CONST	ENDS
;	COMDAT __TI3?AVcast_to_string_error@dlib@@
xdata$x	SEGMENT
__TI3?AVcast_to_string_error@dlib@@ DD 00H
	DD	FLAT:??1cast_to_string_error@dlib@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVcast_to_string_error@dlib@@
xdata$x	ENDS
;	COMDAT __CTA3?AVcast_to_string_error@dlib@@
xdata$x	SEGMENT
__CTA3?AVcast_to_string_error@dlib@@ DD 03H
	DD	FLAT:__CT??_R0?AVcast_to_string_error@dlib@@@8??0cast_to_string_error@dlib@@QAE@ABV01@@Z44
	DD	FLAT:__CT??_R0?AVerror@dlib@@@8??0error@dlib@@QAE@ABV01@@Z44
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVcast_to_string_error@dlib@@@8??0cast_to_string_error@dlib@@QAE@ABV01@@Z44
xdata$x	SEGMENT
__CT??_R0?AVcast_to_string_error@dlib@@@8??0cast_to_string_error@dlib@@QAE@ABV01@@Z44 DD 00H
	DD	FLAT:??_R0?AVcast_to_string_error@dlib@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	02cH
	DD	FLAT:??0cast_to_string_error@dlib@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVcast_to_string_error@dlib@@@8
_DATA	SEGMENT
??_R0?AVcast_to_string_error@dlib@@@8 DD FLAT:??_7type_info@@6B@ ; dlib::cast_to_string_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVcast_to_string_error@dlib@@', 00H
_DATA	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
xdata$x	SEGMENT
__TI3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ DD 00H
	DD	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
xdata$x	SEGMENT
__CTA3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ DD 03H
	DD	FLAT:__CT??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z28
	DD	FLAT:__CT??_R0?AU_Container_base0@std@@@81
xdata$x	ENDS
;	COMDAT __CT??_R0?AU_Container_base0@std@@@81
xdata$x	SEGMENT
__CT??_R0?AU_Container_base0@std@@@81 DD 00H
	DD	FLAT:??_R0?AU_Container_base0@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT __CT??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT
__CT??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z28 DD 00H
	DD	FLAT:??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01cH
	DD	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AU_Container_base0@std@@@8
_DATA	SEGMENT
??_R0?AU_Container_base0@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Container_base0 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU_Container_base0@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8
_DATA	SEGMENT
??_R0?AV?$_String_val@DV?$allocator@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_String_val<char,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_String_val@DV?$allocator@D@std@@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
_DATA	SEGMENT
??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D'
	DB	'@2@@std@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0CG@BENFANJG@string?5cast?5error?3?5invalid?5strin@
CONST	SEGMENT
??_C@_0CG@BENFANJG@string?5cast?5error?3?5invalid?5strin@ DB 'string cast'
	DB	' error: invalid string = ''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GEODFPGF@?8?$AA@
CONST	SEGMENT
??_C@_01GEODFPGF@?8?$AA@ DB '''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVerror@dlib@@@8??0error@dlib@@QAE@ABV01@@Z44
xdata$x	SEGMENT
__CT??_R0?AVerror@dlib@@@8??0error@dlib@@QAE@ABV01@@Z44 DD 00H
	DD	FLAT:??_R0?AVerror@dlib@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	02cH
	DD	FLAT:??0error@dlib@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVerror@dlib@@@8
_DATA	SEGMENT
??_R0?AVerror@dlib@@@8 DD FLAT:??_7type_info@@6B@	; dlib::error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror@dlib@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_0BF@MDHLFKDO@undefined?5error?5type?$AA@
CONST	SEGMENT
??_C@_0BF@MDHLFKDO@undefined?5error?5type?$AA@ DB 'undefined error type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OEFMJDCD@EOPTION_PARSE?$AA@
CONST	SEGMENT
??_C@_0O@OEFMJDCD@EOPTION_PARSE?$AA@ DB 'EOPTION_PARSE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FAEPAFAG@EUTF8_TO_UTF32?$AA@
CONST	SEGMENT
??_C@_0P@FAEPAFAG@EUTF8_TO_UTF32?$AA@ DB 'EUTF8_TO_UTF32', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NAMOGKME@ESTRING_CAST?$AA@
CONST	SEGMENT
??_C@_0N@NAMOGKME@ESTRING_CAST?$AA@ DB 'ESTRING_CAST', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PJCLMLLK@ECAST_TO_STRING?$AA@
CONST	SEGMENT
??_C@_0BA@PJCLMLLK@ECAST_TO_STRING?$AA@ DB 'ECAST_TO_STRING', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FCNFANEH@EIMAGE_SAVE?$AA@
CONST	SEGMENT
??_C@_0M@FCNFANEH@EIMAGE_SAVE?$AA@ DB 'EIMAGE_SAVE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBGGBGPJ@ECONFIG_READER?$AA@
CONST	SEGMENT
??_C@_0P@KBGGBGPJ@ECONFIG_READER?$AA@ DB 'ECONFIG_READER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HAKJKBFK@EMULTIPLE_OCCURANCES?$AA@
CONST	SEGMENT
??_C@_0BF@HAKJKBFK@EMULTIPLE_OCCURANCES?$AA@ DB 'EMULTIPLE_OCCURANCES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MLIOEHOK@EINVALID_OPTION_ARG?$AA@
CONST	SEGMENT
??_C@_0BE@MLIOEHOK@EINVALID_OPTION_ARG?$AA@ DB 'EINVALID_OPTION_ARG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EOKNONCF@EMISSING_REQUIRED_OPTION?$AA@
CONST	SEGMENT
??_C@_0BJ@EOKNONCF@EMISSING_REQUIRED_OPTION?$AA@ DB 'EMISSING_REQUIRED_OP'
	DB	'TION', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KGJDGDG@EINCOMPATIBLE_OPTIONS?$AA@
CONST	SEGMENT
??_C@_0BG@KGJDGDG@EINCOMPATIBLE_OPTIONS?$AA@ DB 'EINCOMPATIBLE_OPTIONS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JJNDCELI@EDIR_CREATE?$AA@
CONST	SEGMENT
??_C@_0M@JJNDCELI@EDIR_CREATE?$AA@ DB 'EDIR_CREATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAMIPOJD@EIMAGE_LOAD?$AA@
CONST	SEGMENT
??_C@_0M@FAMIPOJD@EIMAGE_LOAD?$AA@ DB 'EIMAGE_LOAD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EHPKLALH@EBROKEN_ASSERT?$AA@
CONST	SEGMENT
??_C@_0P@EHPKLALH@EBROKEN_ASSERT?$AA@ DB 'EBROKEN_ASSERT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KBMJJNNM@EFATAL?$AA@
CONST	SEGMENT
??_C@_06KBMJJNNM@EFATAL?$AA@ DB 'EFATAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OEMBKHEI@EGUI?$AA@
CONST	SEGMENT
??_C@_04OEMBKHEI@EGUI?$AA@ DB 'EGUI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MEGFPAOI@ETHREAD?$AA@
CONST	SEGMENT
??_C@_07MEGFPAOI@ETHREAD?$AA@ DB 'ETHREAD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OMFDINFC@ESOCKET?$AA@
CONST	SEGMENT
??_C@_07OMFDINFC@ESOCKET?$AA@ DB 'ESOCKET', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OJEAEGFK@ETOO_MANY_ARGS?$AA@
CONST	SEGMENT
??_C@_0P@OJEAEGFK@ETOO_MANY_ARGS?$AA@ DB 'ETOO_MANY_ARGS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FKLOKCDD@ETOO_FEW_ARGS?$AA@
CONST	SEGMENT
??_C@_0O@FKLOKCDD@ETOO_FEW_ARGS?$AA@ DB 'ETOO_FEW_ARGS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ECJKINJI@EINVALID_OPTION?$AA@
CONST	SEGMENT
??_C@_0BA@ECJKINJI@EINVALID_OPTION?$AA@ DB 'EINVALID_OPTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BPEHFKAL@EGENERAL_TYPE3?$AA@
CONST	SEGMENT
??_C@_0P@BPEHFKAL@EGENERAL_TYPE3?$AA@ DB 'EGENERAL_TYPE3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GFMGLEK@EGENERAL_TYPE2?$AA@
CONST	SEGMENT
??_C@_0P@GFMGLEK@EGENERAL_TYPE2?$AA@ DB 'EGENERAL_TYPE2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CNHBDIIJ@EGENERAL_TYPE1?$AA@
CONST	SEGMENT
??_C@_0P@CNHBDIIJ@EGENERAL_TYPE1?$AA@ DB 'EGENERAL_TYPE1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPJMHPLA@EUNSPECIFIED?$AA@
CONST	SEGMENT
??_C@_0N@LPJMHPLA@EUNSPECIFIED?$AA@ DB 'EUNSPECIFIED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EIFDCKCH@ECREATE_SIGNALER?$AA@
CONST	SEGMENT
??_C@_0BB@EIFDCKCH@ECREATE_SIGNALER?$AA@ DB 'ECREATE_SIGNALER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HFAJODEH@ECREATE_MUTEX?$AA@
CONST	SEGMENT
??_C@_0O@HFAJODEH@ECREATE_MUTEX?$AA@ DB 'ECREATE_MUTEX', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KNGBPCNG@ECREATE_THREAD?$AA@
CONST	SEGMENT
??_C@_0P@KNGBPCNG@ECREATE_THREAD?$AA@ DB 'ECREATE_THREAD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FKLNEDEP@EMONITOR?$AA@
CONST	SEGMENT
??_C@_08FKLNEDEP@EMONITOR?$AA@ DB 'EMONITOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OIIHLIHK@ERESOLVE?$AA@
CONST	SEGMENT
??_C@_08OIIHLIHK@ERESOLVE?$AA@ DB 'ERESOLVE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PKLEEDLJ@ELISTENER?$AA@
CONST	SEGMENT
??_C@_09PKLEEDLJ@ELISTENER?$AA@ DB 'ELISTENER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHPKCGCP@ECONNECTION?$AA@
CONST	SEGMENT
??_C@_0M@IHPKCGCP@ECONNECTION?$AA@ DB 'ECONNECTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJAOJCGE@ETIMEOUT?$AA@
CONST	SEGMENT
??_C@_08NJAOJCGE@ETIMEOUT?$AA@ DB 'ETIMEOUT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HGBOFMBA@EPORT_IN_USE?$AA@
CONST	SEGMENT
??_C@_0N@HGBOFMBA@EPORT_IN_USE?$AA@ DB 'EPORT_IN_USE', 00H ; `string'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
$SG-254	DB	00H
$SG-262	DB	00H
$SG-269	DB	00H
$SG-272	DB	00H
$SG-277	DB	00H
$SG-283	DB	00H
$SG-289	DB	00H
$SG-349	DB	00H
$SG-360	DB	00H
$SG-401	DB	00H
$SG-403	DB	00H
$SG-405	DB	00H
$SG-407	DB	00H
$SG-409	DB	00H
$SG-423	DB	00H
$SG-427	DB	00H
$SG-431	DB	00H
$SG-451	DB	00H
$SG-457	DB	00H
$SG-459	DB	00H
$SG-462	DB	00H
$SG-464	DB	00H
$SG-474	DB	00H
$SG-476	DB	00H
$SG-477	DB	00H
$SG-480	DB	00H
$SG-482	DB	00H
$SG-483	DB	00H
$SG-486	DB	00H
$SG-488	DB	00H
$SG-489	DB	00H
$SG-492	DB	00H
$SG-495	DB	00H
$SG-498	DB	00H
$SG-501	DB	00H
$SG-504	DB	00H
$SG-507	DB	00H
$SG-510	DB	00H
$SG-513	DB	00H
$SG-516	DB	00H
$SG-518	DB	00H
$SG-519	DB	00H
$SG-522	DB	00H
$SG-525	DB	00H
$SG-527	DB	00H
$SG-528	DB	00H
$SG-530	DB	00H
$SG-531	DB	00H
$SG-533	DB	00H
$SG-535	DB	00H
$SG-536	DB	00H
$SG-538	DB	00H
$SG-539	DB	00H
$SG-573	DB	00H
$SG-582	DB	00H
$SG-606	DB	00H
$SG-609	DB	00H
$SG-611	DB	00H
$SG-618	DB	00H
$SG-621	DB	00H
$SG-642	DB	00H
	ORG $+1
$SG-237	DB	'.sqlite', 00H
$SG-238	DB	'db/', 00H
$SG-239	DB	'Could load database for server ', 00H
$SG-240	DB	'#000000', 00H
$SG-241	DB	' successfully added', 00H
$SG-242	DB	':', 00H
	ORG $+2
$SG-243	DB	'8', 00H
	ORG $+2
$SG-244	DB	'name', 00H
	ORG $+3
$SG-245	DB	'Server', 00H
	ORG $+1
$SG-246	DB	'all', 00H
$SG-247	DB	'team', 00H
	ORG $+3
$SG-248	DB	'1', 00H
	ORG $+2
$SG-249	DB	'squad', 00H
	ORG $+2
$SG-250	DB	'team', 00H
	ORG $+3
$SG-251	DB	' ', 00H
	ORG $+2
$SG-252	DB	'player', 00H
	ORG $+1
$SG-253	DB	'Welcome to eXp', 00H
	ORG $+1
$SG-255	DB	'all', 00H
$SG-256	DB	' joined the game!', 00H
	ORG $+2
$SG-257	DB	'eXp-Member ', 00H
$SG-258	DB	'true', 00H
	ORG $+3
$SG-259	DB	'player', 00H
	ORG $+1
$SG-260	DB	'Headshot Nr. ', 00H
	ORG $+2
$SG-261	DB	'U_Melee', 00H
$SG-263	DB	'all', 00H
$SG-264	DB	' knifed ', 00H
	ORG $+3
$SG-265	DB	'player', 00H
	ORG $+1
$SG-266	DB	' is currently restricted!', 00H
	ORG $+2
$SG-267	DB	'player', 00H
	ORG $+1
$SG-268	DB	' is currently restricted!', 00H
	ORG $+2
$SG-270	DB	'all', 00H
$SG-271	DB	'ATB: Unable to switch dead players. Phase 2 began.', 00H
	ORG $+1
$SG-273	DB	'all', 00H
$SG-274	DB	'ATB: Switching the last one connected.', 00H
	ORG $+1
$SG-275	DB	'player', 00H
	ORG $+1
$SG-276	DB	'Sorry! Autoteambalance =(', 00H
	ORG $+2
$SG-278	DB	'all', 00H
$SG-279	DB	''' had to be switched', 00H
	ORG $+3
$SG-280	DB	'Due to teambalance ''', 00H
	ORG $+3
$SG-281	DB	'player', 00H
	ORG $+1
$SG-282	DB	'You are on the Whitelist!', 00H
	ORG $+2
$SG-284	DB	'all', 00H
$SG-285	DB	' is on the whitelist. Not switching.', 00H
	ORG $+3
$SG-286	DB	'ATB: ', 00H
	ORG $+2
$SG-287	DB	'player', 00H
	ORG $+1
$SG-288	DB	'Sorry! Autoteambalance =(', 00H
	ORG $+2
$SG-290	DB	'all', 00H
$SG-291	DB	''' had to be switched', 00H
	ORG $+3
$SG-292	DB	'Due to teambalance ''', 00H
	ORG $+3
$SG-293	DB	'punkBuster.onMessage', 00H
	ORG $+3
$SG-294	DB	'slot #', 00H
	ORG $+1
$SG-295	DB	'[?]', 00H
$SG-296	DB	'/', 00H
	ORG $+2
$SG-297	DB	'Error while receiving payday. AdminID=', 00H
	ORG $+1
$SG-298	DB	'Battlefield::game::ingameCmd', 00H
	ORG $+3
$SG-299	DB	'..\src\battlefield3.cpp', 00H
$SG-300	DB	'player', 00H
	ORG $+1
$SG-301	DB	' days! No permission to continue!', 00H
	ORG $+2
$SG-302	DB	'Unpaid for ', 00H
$SG-303	DB	'player', 00H
	ORG $+1
$SG-304	DB	' paid days left.', 00H
	ORG $+3
$SG-305	DB	'You have only ', 00H
	ORG $+1
$SG-306	DB	'/kill', 00H
	ORG $+2
$SG-307	DB	'/kill', 00H
	ORG $+2
$SG-308	DB	'player', 00H
	ORG $+1
$SG-309	DB	'You killed yourself!', 00H
	ORG $+3
$SG-310	DB	'D->SELFKILL', 00H
$SG-311	DB	'D->Victim: ', 00H
$SG-312	DB	'player', 00H
	ORG $+1
$SG-313	DB	' killed you!', 00H
	ORG $+3
$SG-314	DB	'player', 00H
	ORG $+1
$SG-315	DB	'You killed ', 00H
$SG-316	DB	'player', 00H
	ORG $+1
$SG-317	DB	'?', 00H
	ORG $+2
$SG-318	DB	'|', 00H
	ORG $+2
$SG-319	DB	'Player not found! Did you mean ', 00H
$SG-320	DB	'/kick', 00H
	ORG $+2
$SG-321	DB	'player', 00H
	ORG $+1
$SG-322	DB	'You need to write a reason', 00H
	ORG $+1
$SG-323	DB	' Reason: ', 00H
	ORG $+2
$SG-324	DB	'K->Victim: ', 00H
$SG-325	DB	'player', 00H
	ORG $+1
$SG-326	DB	'You kicked ', 00H
$SG-327	DB	'player', 00H
	ORG $+1
$SG-328	DB	'?', 00H
	ORG $+2
$SG-329	DB	'|', 00H
	ORG $+2
$SG-330	DB	'Player not found! Did you mean ', 00H
$SG-331	DB	'player', 00H
	ORG $+1
$SG-332	DB	'/kick NAME REASON', 00H
	ORG $+2
$SG-333	DB	'/kicks', 00H
	ORG $+1
$SG-334	DB	'KS->Victim: ', 00H
	ORG $+3
$SG-335	DB	'player', 00H
	ORG $+1
$SG-336	DB	'You kicked ', 00H
$SG-337	DB	'player', 00H
	ORG $+1
$SG-338	DB	'?', 00H
	ORG $+2
$SG-339	DB	'|', 00H
	ORG $+2
$SG-340	DB	'Player not found! Did you mean ', 00H
$SG-341	DB	'player', 00H
	ORG $+1
$SG-342	DB	'?', 00H
	ORG $+2
$SG-343	DB	'|', 00H
	ORG $+2
$SG-344	DB	'Player not found! Did you mean ', 00H
$SG-345	DB	'player', 00H
	ORG $+1
$SG-346	DB	'/kicks NAME', 00H
$SG-347	DB	'/say', 00H
	ORG $+3
$SG-348	DB	'S->', 00H
$SG-350	DB	'all', 00H
$SG-351	DB	'/sayto', 00H
	ORG $+1
$SG-352	DB	' ', 00H
	ORG $+2
$SG-353	DB	' ', 00H
	ORG $+2
$SG-354	DB	'Msg:', 00H
	ORG $+3
$SG-355	DB	'S->Victim: ', 00H
$SG-356	DB	'player', 00H
	ORG $+1
$SG-357	DB	':', 00H
	ORG $+2
$SG-358	DB	'/yell', 00H
	ORG $+2
$SG-359	DB	'Y->', 00H
$SG-361	DB	'all', 00H
$SG-362	DB	'/yellto', 00H
$SG-363	DB	' ', 00H
	ORG $+2
$SG-364	DB	' ', 00H
	ORG $+2
$SG-365	DB	'Msg:', 00H
	ORG $+3
$SG-366	DB	'Y->Victim: ', 00H
$SG-367	DB	'player', 00H
	ORG $+1
$SG-368	DB	':', 00H
	ORG $+2
$SG-369	DB	'/move', 00H
	ORG $+2
$SG-370	DB	'MF->Victim: ', 00H
	ORG $+3
$SG-371	DB	'player', 00H
	ORG $+1
$SG-372	DB	'?', 00H
	ORG $+2
$SG-373	DB	'|', 00H
	ORG $+2
$SG-374	DB	'Player not found! Did you mean ', 00H
$SG-375	DB	'/movef', 00H
	ORG $+1
$SG-376	DB	'MF->Victim: ', 00H
	ORG $+3
$SG-377	DB	'player', 00H
	ORG $+1
$SG-378	DB	'?', 00H
	ORG $+2
$SG-379	DB	'|', 00H
	ORG $+2
$SG-380	DB	'Player not found! Did you mean ', 00H
$SG-381	DB	'/ban', 00H
	ORG $+3
$SG-382	DB	'player', 00H
	ORG $+1
$SG-383	DB	'You need to write a reason', 00H
	ORG $+1
$SG-384	DB	' Reason: ', 00H
	ORG $+2
$SG-385	DB	'B->Victim: ', 00H
$SG-386	DB	'player', 00H
	ORG $+1
$SG-387	DB	'You banned ', 00H
$SG-388	DB	'player', 00H
	ORG $+1
$SG-389	DB	'?', 00H
	ORG $+2
$SG-390	DB	'|', 00H
	ORG $+2
$SG-391	DB	'Player not found! Did you mean ', 00H
$SG-392	DB	'player', 00H
	ORG $+1
$SG-393	DB	'/ban NAME REASON', 00H
	ORG $+3
$SG-394	DB	'/mute', 00H
	ORG $+2
$SG-395	DB	'M->Victim: ', 00H
$SG-396	DB	'player', 00H
	ORG $+1
$SG-397	DB	'Disabled chat of ', 00H
	ORG $+2
$SG-398	DB	'player', 00H
	ORG $+1
$SG-399	DB	'YOUR CHAT HAS BEEN DISABLED', 00H
$SG-400	DB	'player', 00H
	ORG $+1
$SG-402	DB	'player', 00H
	ORG $+1
$SG-404	DB	'player', 00H
	ORG $+1
$SG-406	DB	'player', 00H
	ORG $+1
$SG-408	DB	'player', 00H
	ORG $+1
$SG-410	DB	'player', 00H
	ORG $+1
$SG-411	DB	'YOUR ARE FREE TO CHAT', 00H
	ORG $+2
$SG-412	DB	'player', 00H
	ORG $+1
$SG-413	DB	'?', 00H
	ORG $+2
$SG-414	DB	'|', 00H
	ORG $+2
$SG-415	DB	'Player not found! Did you mean ', 00H
$SG-416	DB	'player', 00H
	ORG $+1
$SG-417	DB	'/mute NAME', 00H
	ORG $+1
$SG-418	DB	'/hack', 00H
	ORG $+2
$SG-419	DB	'H->Victim: ', 00H
$SG-420	DB	'player', 00H
	ORG $+1
$SG-421	DB	'Hacked chat of ', 00H
$SG-422	DB	'player', 00H
	ORG $+1
$SG-424	DB	'player', 00H
	ORG $+1
$SG-425	DB	'YOU HAVE BEEN HACKED!', 00H
	ORG $+2
$SG-426	DB	'player', 00H
	ORG $+1
$SG-428	DB	'player', 00H
	ORG $+1
$SG-429	DB	'BRUTEFORCING EA-ACCOUNT PASSWORD...', 00H
$SG-430	DB	'player', 00H
	ORG $+1
$SG-432	DB	'player', 00H
	ORG $+1
$SG-433	DB	'| 10%', 00H
	ORG $+2
$SG-434	DB	'player', 00H
	ORG $+1
$SG-435	DB	'|| 21%', 00H
	ORG $+1
$SG-436	DB	'player', 00H
	ORG $+1
$SG-437	DB	'||| 33%', 00H
$SG-438	DB	'player', 00H
	ORG $+1
$SG-439	DB	'|||| 47%', 00H
	ORG $+3
$SG-440	DB	'player', 00H
	ORG $+1
$SG-441	DB	'||||| 52%', 00H
	ORG $+2
$SG-442	DB	'player', 00H
	ORG $+1
$SG-443	DB	'||||||| 69%', 00H
$SG-444	DB	'player', 00H
	ORG $+1
$SG-445	DB	'||||||||| 99%', 00H
	ORG $+2
$SG-446	DB	'player', 00H
	ORG $+1
$SG-447	DB	'FOUND!', 00H
	ORG $+1
$SG-448	DB	'player', 00H
	ORG $+1
$SG-449	DB	'CHANGING EA-ACCOUNT-E-MAIL-ADDRESS...', 00H
	ORG $+2
$SG-450	DB	'player', 00H
	ORG $+1
$SG-452	DB	'player', 00H
	ORG $+1
$SG-453	DB	'SUCCESSFULLY CHANGED!', 00H
	ORG $+2
$SG-454	DB	'player', 00H
	ORG $+1
$SG-455	DB	'SHUTTING DOWN REMOTE-COMPUTER IN 10 SEC!', 00H
	ORG $+3
$SG-456	DB	'player', 00H
	ORG $+1
$SG-458	DB	'player', 00H
	ORG $+1
$SG-460	DB	'player', 00H
	ORG $+1
$SG-461	DB	'player', 00H
	ORG $+1
$SG-463	DB	'player', 00H
	ORG $+1
$SG-465	DB	'player', 00H
	ORG $+1
$SG-466	DB	'JUST KIDDING :D', 00H
$SG-467	DB	'player', 00H
	ORG $+1
$SG-468	DB	'?', 00H
	ORG $+2
$SG-469	DB	'|', 00H
	ORG $+2
$SG-470	DB	'Player not found! Did you mean ', 00H
$SG-471	DB	'player', 00H
	ORG $+1
$SG-472	DB	'/hack NAME', 00H
	ORG $+1
$SG-473	DB	'/hackall', 00H
	ORG $+3
$SG-475	DB	'all', 00H
$SG-478	DB	'all', 00H
$SG-479	DB	'YOU HAVE BEEN HACKED!', 00H
	ORG $+2
$SG-481	DB	'all', 00H
$SG-484	DB	'all', 00H
$SG-485	DB	'BRUTEFORCING EA-ACCOUNT PASSWORD...', 00H
$SG-487	DB	'all', 00H
$SG-490	DB	'all', 00H
$SG-491	DB	'| 10%', 00H
	ORG $+2
$SG-493	DB	'all', 00H
$SG-494	DB	'|| 21%', 00H
	ORG $+1
$SG-496	DB	'all', 00H
$SG-497	DB	'||| 33%', 00H
$SG-499	DB	'all', 00H
$SG-500	DB	'|||| 47%', 00H
	ORG $+3
$SG-502	DB	'all', 00H
$SG-503	DB	'||||| 52%', 00H
	ORG $+2
$SG-505	DB	'all', 00H
$SG-506	DB	'||||||| 69%', 00H
$SG-508	DB	'all', 00H
$SG-509	DB	'||||||||| 99%', 00H
	ORG $+2
$SG-511	DB	'all', 00H
$SG-512	DB	'FOUND!', 00H
	ORG $+1
$SG-514	DB	'all', 00H
$SG-515	DB	'CHANGING EA-ACCOUNT-E-MAIL-ADDRESS...', 00H
	ORG $+2
$SG-517	DB	'all', 00H
$SG-520	DB	'all', 00H
$SG-521	DB	'SUCCESSFULLY CHANGED!', 00H
	ORG $+2
$SG-523	DB	'all', 00H
$SG-524	DB	'SHUTTING DOWN REMOTE-COMPUTER IN 10 SEC!', 00H
	ORG $+3
$SG-526	DB	'all', 00H
$SG-529	DB	'all', 00H
$SG-532	DB	'all', 00H
$SG-534	DB	'all', 00H
$SG-537	DB	'all', 00H
$SG-540	DB	'all', 00H
$SG-541	DB	'JUST KIDDING :D', 00H
$SG-542	DB	'/help', 00H
	ORG $+2
$SG-543	DB	'player', 00H
	ORG $+1
$SG-544	DB	'Available commands are /kill/kick/kicks/ban/move/movef/m'
	DB	'ute/say/sayto/yell/yellto/guid/pwd', 00H
	ORG $+1
$SG-545	DB	'/guid', 00H
	ORG $+2
$SG-546	DB	'player', 00H
	ORG $+1
$SG-547	DB	'player', 00H
	ORG $+1
$SG-548	DB	'?', 00H
	ORG $+2
$SG-549	DB	'Did you mean ', 00H
	ORG $+2
$SG-550	DB	'/updateadv', 00H
	ORG $+1
$SG-551	DB	'player', 00H
	ORG $+1
$SG-552	DB	'Updated!', 00H
	ORG $+3
$SG-553	DB	'/pwd', 00H
	ORG $+3
$SG-554	DB	'/payment', 00H
	ORG $+3
$SG-555	DB	'player', 00H
	ORG $+1
$SG-556	DB	'You need to pay today!', 00H
	ORG $+1
$SG-557	DB	'player', 00H
	ORG $+1
$SG-558	DB	' days.', 00H
	ORG $+1
$SG-559	DB	'You have paid for ', 00H
	ORG $+1
$SG-560	DB	'player', 00H
	ORG $+1
$SG-561	DB	'Unknown Command!', 00H
	ORG $+3
$SG-562	DB	'player', 00H
	ORG $+1
$SG-563	DB	'Only eXp-Members can use such commands!', 00H
$SG-564	DB	'!yes', 00H
	ORG $+3
$SG-565	DB	'!no', 00H
$SG-566	DB	'!votekick', 00H
	ORG $+2
$SG-567	DB	'!member', 00H
$SG-568	DB	'player', 00H
	ORG $+1
$SG-569	DB	'eXp-Members are:', 00H
	ORG $+3
$SG-570	DB	',', 00H
	ORG $+2
$SG-571	DB	'player', 00H
	ORG $+1
$SG-572	DB	'!tool', 00H
	ORG $+2
$SG-574	DB	'all', 00H
$SG-575	DB	'eXp-Administration-Tool(daspirum.de) | Crossplatform(Win'
	DB	'dows&Linux) - C++', 00H
	ORG $+2
$SG-576	DB	'!contact', 00H
	ORG $+3
$SG-577	DB	'player', 00H
	ORG $+1
$SG-578	DB	'Send your request to: hostmaster@exp-clan.com or use the'
	DB	' ingame command !request.', 00H
	ORG $+2
$SG-579	DB	'!restricted', 00H
$SG-580	DB	',', 00H
	ORG $+2
$SG-581	DB	',', 00H
	ORG $+2
$SG-583	DB	'all', 00H
$SG-584	DB	'!admin', 00H
	ORG $+1
$SG-585	DB	'!report', 00H
$SG-586	DB	'!request', 00H
	ORG $+3
$SG-587	DB	'player', 00H
	ORG $+1
$SG-588	DB	'We need to know what you want to report: !admin TEXT', 00H
	ORG $+3
$SG-589	DB	'player', 00H
	ORG $+1
$SG-590	DB	'Request send!', 00H
	ORG $+2
$SG-591	DB	'): ', 00H
$SG-592	DB	':', 00H
	ORG $+2
$SG-593	DB	' reported the following on one of your Gameservers(', 00H
$SG-594	DB	'The Player ', 00H
$SG-595	DB	'): ', 00H
$SG-596	DB	':', 00H
	ORG $+2
$SG-597	DB	' reported the following on one of your Gameservers(', 00H
$SG-598	DB	'The Player ', 00H
$SG-599	DB	'!guid', 00H
	ORG $+2
$SG-600	DB	'player', 00H
	ORG $+1
$SG-601	DB	'Your EA guid is ', 00H
	ORG $+3
$SG-602	DB	'!help', 00H
	ORG $+2
$SG-603	DB	'player', 00H
	ORG $+1
$SG-607	DB	'all', 00H
$SG-604	DB	'Available commands are !member,!tool,!restricted,!contac'
	DB	't,!request,!guid,!trans,!translast', 00H
	ORG $+1
$SG-605	DB	'!trans', 00H
	ORG $+1
$SG-608	DB	'!translast', 00H
	ORG $+1
$SG-610	DB	'all', 00H
$SG-612	DB	'all', 00H
_HEXTOINT DB	00H
	DB	010H
	DB	020H
	DB	030H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	080H
	DB	090H
	DB	0a0H
	DB	0b0H
	DB	0c0H
	DB	0d0H
	DB	0e0H
	DB	0f0H
$SG-613	DB	'login.hashed', 00H
	ORG $+3
$SG-614	DB	'OK', 00H
	ORG $+1
$SG-615	DB	'login.hashed', 00H
	ORG $+3
$SG-616	DB	'OK', 00H
	ORG $+1
$SG-617	DB	'admin.say', 00H
	ORG $+2
$SG-619	DB	'admin.yell', 00H
	ORG $+1
$SG-620	DB	'4', 00H
	ORG $+2
$SG-622	DB	'admin.killplayer', 00H
	ORG $+3
$SG-623	DB	'admin.kickplayer', 00H
	ORG $+3
$SG-624	DB	'admin.movePlayer', 00H
	ORG $+3
$SG-625	DB	'2', 00H
	ORG $+2
$SG-626	DB	'1', 00H
	ORG $+2
$SG-627	DB	'0', 00H
	ORG $+2
$SG-628	DB	'true', 00H
	ORG $+3
$SG-629	DB	'false', 00H
	ORG $+2
$SG-630	DB	'banList.add', 00H
$SG-631	DB	'guid', 00H
	ORG $+3
$SG-632	DB	'perm', 00H
	ORG $+3
$SG-633	DB	'banList.remove', 00H
	ORG $+1
$SG-634	DB	'guid', 00H
	ORG $+3
$SG-635	DB	'reservedSlotsList.add', 00H
	ORG $+2
$SG-636	DB	'admin.listPlayers', 00H
	ORG $+2
$SG-637	DB	'admin.eventsEnabled', 00H
$SG-638	DB	'1', 00H
	ORG $+2
$SG-639	DB	'0', 00H
	ORG $+2
$SG-640	DB	'logout', 00H
	ORG $+1
$SG-641	DB	'banList.clear', 00H
	ORG $+2
$SG-643	DB	'reservedSlotsList.clear', 00H
$SG-644	DB	'reservedSlotsList.save', 00H
	ORG $+1
$SG-645	DB	'#000000', 00H
$SG-646	DB	'API-KEY Wrong?!', 00H
$SG-647	DB	'daspirum report', 00H
$SG-648	DB	'#000000', 00H
$SG-649	DB	'Wrong Mail-Addy?!', 00H
	ORG $+2
$SG-704	DB	'.', 0aH, 00H
	ORG $+1
$SG-705	DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-706	DB	'.', 0aH, 00H
	ORG $+1
$SG-707	DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-708	DB	'Error detected in file ', 00H
$SG-709	DB	'.', 0aH, 0aH, 00H
$SG-711	DB	'Error detected in function ', 00H
$SG-710	DB	'void __thiscall dlib::set_kernel_c<class dlib::set_kerne'
	DB	'l_1<unsigned long,class dlib::binary_search_tree_kernel_2<uns'
	DB	'igned long,char,class dlib::memory_manager_kernel_2<char,100>'
	DB	',struct std::less<unsigned long> >,class dlib::memory_manager'
	DB	'_kernel_2<char,100> > >::remove_any(unsigned long &)', 00H
$SG-712	DB	'.', 0aH, 00H
	ORG $+1
$SG-713	DB	'this->size() != 0', 00H
	ORG $+2
$SG-714	DB	'Failing expression was ', 00H
$SG-715	DB	0aH, 00H
	ORG $+2
$SG-716	DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-717	DB	0aH, 09H, 'size must be greater than zero if an item is t'
	DB	'o be removed', 00H
	ORG $+3
$SG-718	DB	09H, 'void set::remove_any', 00H
	ORG $+2
$SG-719	DB	'.', 0aH, 00H
	ORG $+1
$SG-720	DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-721	DB	'.', 0aH, 00H
	ORG $+1
$SG-722	DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-723	DB	'Error detected in file ', 00H
$SG-724	DB	'.', 0aH, 0aH, 00H
$SG-726	DB	'Error detected in function ', 00H
$SG-725	DB	'const unsigned long &__thiscall dlib::set_kernel_c<class'
	DB	' dlib::set_kernel_1<unsigned long,class dlib::binary_search_t'
	DB	'ree_kernel_2<unsigned long,char,class dlib::memory_manager_ke'
	DB	'rnel_2<char,100>,struct std::less<unsigned long> >,class dlib'
	DB	'::memory_manager_kernel_2<char,100> > >::element(void) const', 00H
$SG-727	DB	'.', 0aH, 00H
	ORG $+1
$SG-728	DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-729	DB	'Failing expression was ', 00H
$SG-730	DB	0aH, 00H
	ORG $+2
$SG-731	DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-732	DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-733	DB	09H, 'const T& set::element() const', 00H
	ORG $+1
$SG-734	DB	'.', 0aH, 00H
	ORG $+1
$SG-735	DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-736	DB	'.', 0aH, 00H
	ORG $+1
$SG-737	DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-738	DB	'Error detected in file ', 00H
$SG-739	DB	'.', 0aH, 0aH, 00H
$SG-741	DB	'Error detected in function ', 00H
$SG-740	DB	'const unsigned long &__thiscall dlib::set_kernel_c<class'
	DB	' dlib::set_kernel_1<unsigned long,class dlib::binary_search_t'
	DB	'ree_kernel_2<unsigned long,char,class dlib::memory_manager_ke'
	DB	'rnel_2<char,100>,struct std::less<unsigned long> >,class dlib'
	DB	'::memory_manager_kernel_2<char,100> > >::element(void)', 00H
	ORG $+2
$SG-742	DB	'.', 0aH, 00H
	ORG $+1
$SG-743	DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-744	DB	'Failing expression was ', 00H
$SG-745	DB	0aH, 00H
	ORG $+2
$SG-746	DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-747	DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-748	DB	09H, 'const T& set::element', 00H
	ORG $+1
$SG-749	DB	'.', 0aH, 00H
	ORG $+1
$SG-750	DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-751	DB	'.', 0aH, 00H
	ORG $+1
$SG-753	DB	'Error detected in file ', 00H
$SG-754	DB	'.', 0aH, 0aH, 00H
$SG-752	DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
	ORG $+2
$SG-755	DB	'void __thiscall dlib::binary_search_tree_kernel_c<class '
	DB	'dlib::binary_search_tree_kernel_2<unsigned long,class dlib::m'
	DB	'ember_function_pointer<void,void,void,void>,class dlib::memor'
	DB	'y_manager_kernel_2<char,10>,struct std::less<unsigned long> >'
	DB	' >::remove_any(unsigned long &,class dlib::member_function_po'
	DB	'inter<void,void,void,void> &)', 00H
	ORG $+2
$SG-756	DB	'Error detected in function ', 00H
$SG-757	DB	'.', 0aH, 00H
	ORG $+1
$SG-759	DB	'Failing expression was ', 00H
$SG-760	DB	0aH, 00H
	ORG $+2
$SG-758	DB	'this->size() != 0 && (static_cast<const void*>(&d) != st'
	DB	'atic_cast<void*>(&r))', 00H
	ORG $+2
$SG-761	DB	0aH, 09H, '&r:   ', 00H
	ORG $+3
$SG-762	DB	0aH, 09H, '&d:   ', 00H
	ORG $+3
$SG-763	DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-764	DB	0aH, 09H, 'tree must not be empty if something is going t'
	DB	'o be removed', 00H
	ORG $+3
$SG-765	DB	09H, 'void binary_search_tree::remove_any', 00H
	ORG $+3
$SG-766	DB	'.', 0aH, 00H
	ORG $+1
$SG-767	DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-768	DB	'.', 0aH, 00H
	ORG $+1
$SG-769	DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
	ORG $+2
$SG-770	DB	'Error detected in file ', 00H
$SG-771	DB	'.', 0aH, 0aH, 00H
$SG-773	DB	'Error detected in function ', 00H
$SG-772	DB	'class dlib::map_pair<unsigned long,class dlib::member_fu'
	DB	'nction_pointer<void,void,void,void> > &__thiscall dlib::binar'
	DB	'y_search_tree_kernel_c<class dlib::binary_search_tree_kernel_'
	DB	'2<unsigned long,class dlib::member_function_pointer<void,void'
	DB	',void,void>,class dlib::memory_manager_kernel_2<char,10>,stru'
	DB	'ct std::less<unsigned long> > >::element(void)', 00H
	ORG $+1
$SG-774	DB	'.', 0aH, 00H
	ORG $+1
$SG-775	DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-776	DB	'Failing expression was ', 00H
$SG-777	DB	0aH, 00H
	ORG $+2
$SG-778	DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-779	DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-780	DB	09H, 'map_pair<domain,range>& binary_search_tree::element'
	DB	'()', 00H
	ORG $+1
$SG-781	DB	'.', 0aH, 00H
	ORG $+1
$SG-782	DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-783	DB	'.', 0aH, 00H
	ORG $+1
$SG-784	DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
	ORG $+2
$SG-785	DB	'Error detected in file ', 00H
$SG-786	DB	'.', 0aH, 0aH, 00H
$SG-788	DB	'Error detected in function ', 00H
$SG-787	DB	'const class dlib::map_pair<unsigned long,class dlib::mem'
	DB	'ber_function_pointer<void,void,void,void> > &__thiscall dlib:'
	DB	':binary_search_tree_kernel_c<class dlib::binary_search_tree_k'
	DB	'ernel_2<unsigned long,class dlib::member_function_pointer<voi'
	DB	'd,void,void,void>,class dlib::memory_manager_kernel_2<char,10'
	DB	'>,struct std::less<unsigned long> > >::element(void) const', 00H
	ORG $+1
$SG-789	DB	'.', 0aH, 00H
	ORG $+1
$SG-790	DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-791	DB	'Failing expression was ', 00H
$SG-792	DB	0aH, 00H
	ORG $+2
$SG-793	DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-794	DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-795	DB	09H, 'const map_pair<domain,range>& binary_search_tree::e'
	DB	'lement() const', 00H
; Function compile flags: /Odtp
;	COMDAT ??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z PROC ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; Line 497
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 499
	mov	al, BYTE PTR __Cat$[ebp]
; Line 500
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 94
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 96
	pop	ebp
	ret	0
??$_Move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator==, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 281
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 296
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator!=, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 300
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 301
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Unchecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unchecked, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 316
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 317
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 318
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unchecked
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rechecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV12@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Rechecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV12@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rechecked, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 312
	mov	eax, DWORD PTR _this$[ebp]
; Line 313
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rechecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV12@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rechecked
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Uban@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUban@Database@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@Uban@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUban@Database@@0@Z PROC ; std::_Ptr_cat<Database::ban,Database::ban>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@Uban@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUban@Database@@0@Z ENDP ; std::_Ptr_cat<Database::ban,Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Uadmin@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUadmin@Database@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@Uadmin@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUadmin@Database@@0@Z PROC ; std::_Ptr_cat<Database::admin,Database::admin>, COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@Uadmin@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUadmin@Database@@0@Z ENDP ; std::_Ptr_cat<Database::admin,Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUstruct_chat@Battlefield@@@std@@YAABUstruct_chat@Battlefield@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUstruct_chat@Battlefield@@@std@@YAABUstruct_chat@Battlefield@@ABU12@@Z PROC ; std::forward<Battlefield::struct_chat const &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUstruct_chat@Battlefield@@@std@@YAABUstruct_chat@Battlefield@@ABU12@@Z ENDP ; std::forward<Battlefield::struct_chat const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z PROC ; std::_Ptr_cat<Battlefield::struct_Vote,Battlefield::struct_Vote>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z ENDP ; std::_Ptr_cat<Battlefield::struct_Vote,Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z PROC ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ENDP ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator==<char,char>, COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
; Line 263
	mov	al, 1
; Line 264
	pop	ebp
	ret	0
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator==<char,char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 488
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 490
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 491
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 530
	mov	al, BYTE PTR __Cat$[ebp]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Rechecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAV10@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Iter$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Rechecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAV10@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Rechecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 402
	push	ebp
	mov	ebp, esp
; Line 403
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Iter$[ebp]
	call	?_Rechecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV12@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Rechecked
; Line 404
	pop	ebp
	ret	0
??$_Rechecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAV10@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Rechecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
__Iter$ = 8						; size = 4
??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; Line 393
	push	ebp
	mov	ebp, esp
; Line 394
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Unchecked
; Line 395
	pop	ebp
	ret	0
??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0Ustruct_chat@Battlefield@@@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@ABV?$allocator@Ustruct_chat@Battlefield@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0Ustruct_chat@Battlefield@@@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@ABV?$allocator@Ustruct_chat@Battlefield@@@1@@Z PROC ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node><Battlefield::struct_chat>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 170
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Ustruct_chat@Battlefield@@@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@ABV?$allocator@Ustruct_chat@Battlefield@@@1@@Z ENDP ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node><Battlefield::struct_chat>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@Ustruct_chat@Battlefield@@@std@@YAPAUstruct_chat@Battlefield@@AAU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Ustruct_chat@Battlefield@@@std@@YAPAUstruct_chat@Battlefield@@AAU12@@Z PROC ; std::addressof<Battlefield::struct_chat>, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@Ustruct_chat@Battlefield@@@std@@YAPAUstruct_chat@Battlefield@@AAU12@@Z ENDP ; std::addressof<Battlefield::struct_chat>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z PROC ; std::operator!=<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; std::operator==<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ENDP ; std::operator!=<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z PROC		; std::operator!=<char,char>, COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
; Line 271
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator==<char,char>
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 272
	pop	ebp
	ret	0
??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z ENDP		; std::operator!=<char,char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z PROC ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ENDP ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Ustruct_chat@Battlefield@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Ustruct_chat@Battlefield@@@std@@QBEIXZ PROC ; std::allocator<Battlefield::struct_chat>::max_size, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 48806446	; 02e8ba2eH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@16
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@16
$LN3@max_size@16:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@16:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Ustruct_chat@Battlefield@@@std@@QBEIXZ ENDP ; std::allocator<Battlefield::struct_chat>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], -1
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@17
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@17
$LN3@max_size@17:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@17:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 263
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 264
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAUstruct_chat@Battlefield@@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAUstruct_chat@Battlefield@@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z PROC ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Myval, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 570
	push	ebp
	mov	ebp, esp
; Line 571
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 572
	pop	ebp
	ret	0
?_Myval@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAUstruct_chat@Battlefield@@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ENDP ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Myval
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::max_size, COMDAT
; _this$ = ecx
; Line 881
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 882
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 9
	call	?max_size@?$allocator@Ustruct_chat@Battlefield@@@std@@QBEIXZ ; std::allocator<Battlefield::struct_chat>::max_size
; Line 883
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 153391689	; 09249249H
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@18
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@18
$LN3@max_size@18:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@18:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1516
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1517
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size@19
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size@19
$LN3@max_size@19:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size@19:
	mov	eax, DWORD PTR tv73[ebp]
; Line 1518
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 94
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEABUstruct_chat@Battlefield@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEABUstruct_chat@Battlefield@@XZ PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAUstruct_chat@Battlefield@@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Myval
	add	esp, 4
; Line 218
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEABUstruct_chat@Battlefield@@XZ ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv90 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN2@Sentry_bas@3
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv90[ebp], eax
	mov	edx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
$LN2@Sentry_bas@3:
; Line 100
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv90 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 92
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR [ecx+4]
	mov	ecx, eax
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN2@Sentry_bas@4
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv90[ebp], eax
	mov	edx, DWORD PTR tv90[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
$LN2@Sentry_bas@4:
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Compat, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z PROC ; std::allocator<Database::ban>::deallocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z ENDP ; std::allocator<Database::ban>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Compat, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z PROC ; std::allocator<Database::admin>::deallocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z ENDP ; std::allocator<Database::admin>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXABV12@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z PROC ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 565
	push	ebp
	mov	ebp, esp
; Line 566
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 567
	pop	ebp
	ret	0
?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z PROC ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode, COMDAT
; Line 560
	push	ebp
	mov	ebp, esp
; Line 561
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 562
	pop	ebp
	ret	0
?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ENDP ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Incsize@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXI@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Incsize, COMDAT
; _this$ = ecx
; Line 1519
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1520
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	sub	eax, 1
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize
; Line 1521
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN1@Incsize:
; Line 1522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Incsize:
; Line 1523
	mov	esp, ebp
	pop	ebp
	ret	4
?_Incsize@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXI@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Incsize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z PROC ; std::allocator<Battlefield::struct_Vote>::deallocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z ENDP ; std::allocator<Battlefield::struct_Vote>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@15:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__State$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 358
	mov	DWORD PTR __State$[ebp], 0
; Line 359
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN4@Getstate
; Line 360
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 361
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	jne	SHORT $LN3@Getstate
; Line 362
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 363
	mov	ecx, DWORD PTR __Mode$[ebp]
	and	ecx, 8
	je	SHORT $LN2@Getstate
; Line 364
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 8
	mov	DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 365
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN1@Getstate
; Line 366
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 367
	mov	eax, DWORD PTR __State$[ebp]
; Line 368
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 2014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2015
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen@16:
; Line 2016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEAAUstruct_chat@Battlefield@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEAAUstruct_chat@Battlefield@@XZ PROC ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 359
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEABUstruct_chat@Battlefield@@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
; Line 361
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEAAUstruct_chat@Battlefield@@XZ ENDP ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
; Line 132
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+4]
	neg	eax
	sbb	eax, eax
	neg	eax
	sub	eax, 1
; Line 134
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 123
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
$LN2@sentry:
; Line 129
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 115
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry@2
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	test	eax, eax
	je	SHORT $LN1@sentry@2
; Line 116
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
$LN1@sentry@2:
; Line 117
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 118
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
; Line 66
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ?_Stz@?$fpos@H@std@@0HB	; std::fpos<int>::_Stz
	mov	DWORD PTR [ecx+16], edx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator==, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::~_Vector_val<Database::ban,std::allocator<Database::ban> >, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::~_Vector_val<Database::ban,std::allocator<Database::ban> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::~_Vector_val<Database::admin,std::allocator<Database::admin> >, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::~_Vector_val<Database::admin,std::allocator<Database::admin> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
; Line 181
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z PROC ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@XZ PROC ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@XZ ENDP ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 501
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 502
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate
; Line 503
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 433
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside@15
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@15
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside@15
$LN3@Inside@15:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside@15:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; Line 2019
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2020
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN2@Xran@3:
; Line 2021
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2010
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2011
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx
; Line 2002
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 2004
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv80[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv80[ebp]
; Line 2005
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__P2$ = 8						; size = 4
__P1$ = 12						; size = 4
?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif, COMDAT
; Line 1981
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1982
	cmp	DWORD PTR __P2$[ebp], 0
	jne	SHORT $LN3@Pdif
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Pdif
$LN3@Pdif:
	lea	eax, DWORD PTR __P1$[ebp]
	push	eax
	lea	ecx, DWORD PTR __P2$[ebp]
	call	??G?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV01@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator-
	mov	DWORD PTR tv68[ebp], eax
$LN4@Pdif:
	mov	eax, DWORD PTR tv68[ebp]
; Line 1983
	mov	esp, ebp
	pop	ebp
	ret	0
?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator!=, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 144				; 00000090H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 92					; 0000005cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEABUadmin@Database@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEABUadmin@Database@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEABUadmin@Database@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::size, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 876
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 877
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 878
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 928
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 940
	mov	eax, DWORD PTR __Pos$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
; Line 941
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355658 = -4						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355658[ebp], esp
	call	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??B?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBE_NXZ PROC ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator bool, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\smart_pointers\scoped_ptr.h
; Line 105
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	mov	al, cl
; Line 107
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBE_NXZ ENDP ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator bool
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv312 = -32						; size = 8
tv272 = -24						; size = 8
tv253 = -16						; size = 4
_this$ = -12						; size = 4
__Off$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	lea	ecx, DWORD PTR __Ptr$[ebp]
	call	??B?$fpos@H@std@@QBE_JXZ		; std::fpos<int>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 281
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN12@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN12@seekpos
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN12@seekpos:
; Line 284
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	DWORD PTR tv253[ebp], eax
	mov	ecx, DWORD PTR tv253[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN11@seekpos
	mov	eax, DWORD PTR tv253[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN11@seekpos
	jmp	$LN10@seekpos
$LN11@seekpos:
; Line 286
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 1
	je	$LN9@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN9@seekpos
; Line 288
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN8@seekpos
	jg	SHORT $LN15@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN8@seekpos
$LN15@seekpos:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv272[ebp], eax
	mov	DWORD PTR tv272[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv272[ebp+4]
	jg	SHORT $LN8@seekpos
	jl	SHORT $LN16@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv272[ebp]
	ja	SHORT $LN8@seekpos
$LN16@seekpos:
; Line 290
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 291
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	je	SHORT $LN7@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN7@seekpos
; Line 293
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN7@seekpos:
; Line 295
	jmp	SHORT $LN6@seekpos
$LN8@seekpos:
; Line 296
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
	jmp	$LN10@seekpos
$LN9@seekpos:
; Line 298
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	$LN4@seekpos
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@seekpos
; Line 300
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	SHORT $LN3@seekpos
	jg	SHORT $LN17@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN3@seekpos
$LN17@seekpos:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv312[ebp], eax
	mov	DWORD PTR tv312[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv312[ebp+4]
	jg	SHORT $LN3@seekpos
	jl	SHORT $LN18@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv312[ebp]
	ja	SHORT $LN3@seekpos
$LN18@seekpos:
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 303
	jmp	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 304
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 306
	jmp	SHORT $LN10@seekpos
$LN4@seekpos:
; Line 307
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 308
	mov	edx, DWORD PTR __Off$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 309
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv411 = -20						; size = 8
tv344 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 227
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN21@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN21@seekoff
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN21@seekoff:
; Line 230
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 1
	je	$LN20@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN20@seekoff
; Line 232
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN19@seekoff
; Line 233
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 234
	jmp	SHORT $LN18@seekoff
$LN19@seekoff:
; Line 235
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	jne	SHORT $LN17@seekoff
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:
; Line 237
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN18@seekoff
; Line 238
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Off$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 240
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN14@seekoff
	jg	SHORT $LN24@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN14@seekoff
$LN24@seekoff:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv344[ebp], eax
	mov	DWORD PTR tv344[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv344[ebp+4]
	jg	SHORT $LN14@seekoff
	jl	SHORT $LN25@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv344[ebp]
	ja	SHORT $LN14@seekoff
$LN25@seekoff:
; Line 242
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 243
	mov	edx, DWORD PTR __Which$[ebp]
	and	edx, 2
	je	SHORT $LN13@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN13@seekoff
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN13@seekoff:
; Line 247
	jmp	SHORT $LN12@seekoff
$LN14@seekoff:
; Line 248
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
	jmp	$LN11@seekoff
$LN20@seekoff:
; Line 250
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	je	$LN10@seekoff
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN10@seekoff
; Line 252
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN9@seekoff
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN9@seekoff:
; Line 254
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN7@seekoff
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:
; Line 256
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN8@seekoff
; Line 257
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 259
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	SHORT $LN4@seekoff
	jg	SHORT $LN26@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN4@seekoff
$LN26@seekoff:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv411[ebp], eax
	mov	DWORD PTR tv411[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv411[ebp+4]
	jg	SHORT $LN4@seekoff
	jl	SHORT $LN27@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv411[ebp]
	ja	SHORT $LN4@seekoff
$LN27@seekoff:
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 262
	jmp	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 263
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
	jmp	SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
	mov	edx, DWORD PTR __Off$[ebp]
	or	edx, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN11@seekoff
; Line 273
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 274
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 275
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1549
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1550
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+16], 0
	sete	cl
	mov	al, cl
; Line 1551
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; Line 1510
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1511
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 1512
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT
; _this$ = ecx
; Line 1505
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1506
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
; Line 1507
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; Line 1495
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Line 1497
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; _this$ = ecx
; Line 1450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1459
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
; Line 1460
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT
; _this$ = ecx
; Line 1435
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1446
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
; Line 1447
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at, COMDAT
; _this$ = ecx
; Line 1421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1422
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	ja	SHORT $LN1@at
; Line 1423
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@at:
; Line 1424
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
$LN3@at:
; Line 1425
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
_TEXT	ENDS
PUBLIC	?isBusy@game@Battlefield@@QAE_NXZ		; Battlefield::game::isBusy
; Function compile flags: /Odtp
;	COMDAT ?isBusy@game@Battlefield@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isBusy@game@Battlefield@@QAE_NXZ PROC			; Battlefield::game::isBusy, COMDAT
; _this$ = ecx
; File c:\work\daspirum\source\src\battlefield3.cpp
; Line 1196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1197
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+21464]
; Line 1198
	mov	esp, ebp
	pop	ebp
	ret	0
?isBusy@game@Battlefield@@QAE_NXZ ENDP			; Battlefield::game::isBusy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@ABV01@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_dTcast@D@@YADD_W@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
___formal$ = 12						; size = 2
??$_dTcast@D@@YADD_W@Z PROC				; _dTcast<char>, COMDAT
; File e:\library\dlib\dlib\algs.h
; Line 91
	push	ebp
	mov	ebp, esp
	mov	al, BYTE PTR _a$[ebp]
	pop	ebp
	ret	0
??$_dTcast@D@@YADD_W@Z ENDP				; _dTcast<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?type_to_string@error@dlib@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?type_to_string@error@dlib@@QBEPBDXZ PROC		; dlib::error::type_to_string, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\error.h
; Line 136
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN66@type_to_st
	mov	eax, OFFSET ??_C@_0N@HGBOFMBA@EPORT_IN_USE?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN66@type_to_st:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 1
	jne	SHORT $LN64@type_to_st
	mov	eax, OFFSET ??_C@_08NJAOJCGE@ETIMEOUT?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN64@type_to_st:
; Line 139
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 2
	jne	SHORT $LN62@type_to_st
	mov	eax, OFFSET ??_C@_0M@IHPKCGCP@ECONNECTION?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN62@type_to_st:
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 3
	jne	SHORT $LN60@type_to_st
	mov	eax, OFFSET ??_C@_09PKLEEDLJ@ELISTENER?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN60@type_to_st:
; Line 141
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 4
	jne	SHORT $LN58@type_to_st
	mov	eax, OFFSET ??_C@_08OIIHLIHK@ERESOLVE?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN58@type_to_st:
; Line 142
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 5
	jne	SHORT $LN56@type_to_st
	mov	eax, OFFSET ??_C@_08FKLNEDEP@EMONITOR?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN56@type_to_st:
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 6
	jne	SHORT $LN54@type_to_st
	mov	eax, OFFSET ??_C@_0P@KNGBPCNG@ECREATE_THREAD?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN54@type_to_st:
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 7
	jne	SHORT $LN52@type_to_st
	mov	eax, OFFSET ??_C@_0O@HFAJODEH@ECREATE_MUTEX?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN52@type_to_st:
; Line 145
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 8
	jne	SHORT $LN50@type_to_st
	mov	eax, OFFSET ??_C@_0BB@EIFDCKCH@ECREATE_SIGNALER?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN50@type_to_st:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 9
	jne	SHORT $LN48@type_to_st
	mov	eax, OFFSET ??_C@_0N@LPJMHPLA@EUNSPECIFIED?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN48@type_to_st:
; Line 147
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 10			; 0000000aH
	jne	SHORT $LN46@type_to_st
	mov	eax, OFFSET ??_C@_0P@CNHBDIIJ@EGENERAL_TYPE1?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN46@type_to_st:
; Line 148
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 11			; 0000000bH
	jne	SHORT $LN44@type_to_st
	mov	eax, OFFSET ??_C@_0P@GFMGLEK@EGENERAL_TYPE2?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN44@type_to_st:
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 12			; 0000000cH
	jne	SHORT $LN42@type_to_st
	mov	eax, OFFSET ??_C@_0P@BPEHFKAL@EGENERAL_TYPE3?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN42@type_to_st:
; Line 150
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 13			; 0000000dH
	jne	SHORT $LN40@type_to_st
	mov	eax, OFFSET ??_C@_0BA@ECJKINJI@EINVALID_OPTION?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN40@type_to_st:
; Line 151
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 14			; 0000000eH
	jne	SHORT $LN38@type_to_st
	mov	eax, OFFSET ??_C@_0O@FKLOKCDD@ETOO_FEW_ARGS?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN38@type_to_st:
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 15			; 0000000fH
	jne	SHORT $LN36@type_to_st
	mov	eax, OFFSET ??_C@_0P@OJEAEGFK@ETOO_MANY_ARGS?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN36@type_to_st:
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 16			; 00000010H
	jne	SHORT $LN34@type_to_st
	mov	eax, OFFSET ??_C@_07OMFDINFC@ESOCKET?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN34@type_to_st:
; Line 154
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 17			; 00000011H
	jne	SHORT $LN32@type_to_st
	mov	eax, OFFSET ??_C@_07MEGFPAOI@ETHREAD?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN32@type_to_st:
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 18			; 00000012H
	jne	SHORT $LN30@type_to_st
	mov	eax, OFFSET ??_C@_04OEMBKHEI@EGUI?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN30@type_to_st:
; Line 156
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 19			; 00000013H
	jne	SHORT $LN28@type_to_st
	mov	eax, OFFSET ??_C@_06KBMJJNNM@EFATAL?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN28@type_to_st:
; Line 157
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 20			; 00000014H
	jne	SHORT $LN26@type_to_st
	mov	eax, OFFSET ??_C@_0P@EHPKLALH@EBROKEN_ASSERT?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN26@type_to_st:
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 21			; 00000015H
	jne	SHORT $LN24@type_to_st
	mov	eax, OFFSET ??_C@_0M@FAMIPOJD@EIMAGE_LOAD?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN24@type_to_st:
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 22			; 00000016H
	jne	SHORT $LN22@type_to_st
	mov	eax, OFFSET ??_C@_0M@JJNDCELI@EDIR_CREATE?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN22@type_to_st:
; Line 160
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 23			; 00000017H
	jne	SHORT $LN20@type_to_st
	mov	eax, OFFSET ??_C@_0BG@KGJDGDG@EINCOMPATIBLE_OPTIONS?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN20@type_to_st:
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 24			; 00000018H
	jne	SHORT $LN18@type_to_st
	mov	eax, OFFSET ??_C@_0BJ@EOKNONCF@EMISSING_REQUIRED_OPTION?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN18@type_to_st:
; Line 162
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 25			; 00000019H
	jne	SHORT $LN16@type_to_st
	mov	eax, OFFSET ??_C@_0BE@MLIOEHOK@EINVALID_OPTION_ARG?$AA@
	jmp	$LN67@type_to_st
	jmp	$LN67@type_to_st
$LN16@type_to_st:
; Line 163
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 26			; 0000001aH
	jne	SHORT $LN14@type_to_st
	mov	eax, OFFSET ??_C@_0BF@HAKJKBFK@EMULTIPLE_OCCURANCES?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN14@type_to_st:
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 27			; 0000001bH
	jne	SHORT $LN12@type_to_st
	mov	eax, OFFSET ??_C@_0P@KBGGBGPJ@ECONFIG_READER?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN12@type_to_st:
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 28			; 0000001cH
	jne	SHORT $LN10@type_to_st
	mov	eax, OFFSET ??_C@_0M@FCNFANEH@EIMAGE_SAVE?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN10@type_to_st:
; Line 166
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 29			; 0000001dH
	jne	SHORT $LN8@type_to_st
	mov	eax, OFFSET ??_C@_0BA@PJCLMLLK@ECAST_TO_STRING?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN8@type_to_st:
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 30			; 0000001eH
	jne	SHORT $LN6@type_to_st
	mov	eax, OFFSET ??_C@_0N@NAMOGKME@ESTRING_CAST?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN6@type_to_st:
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 31			; 0000001fH
	jne	SHORT $LN4@type_to_st
	mov	eax, OFFSET ??_C@_0P@FAEPAFAG@EUTF8_TO_UTF32?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN4@type_to_st:
; Line 169
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+40], 32			; 00000020H
	jne	SHORT $LN2@type_to_st
	mov	eax, OFFSET ??_C@_0O@OEFMJDCD@EOPTION_PARSE?$AA@
	jmp	SHORT $LN67@type_to_st
	jmp	SHORT $LN67@type_to_st
$LN2@type_to_st:
; Line 170
	mov	eax, OFFSET ??_C@_0BF@MDHLFKDO@undefined?5error?5type?$AA@
$LN67@type_to_st:
; Line 171
	mov	esp, ebp
	pop	ebp
	ret	0
?type_to_string@error@dlib@@QBEPBDXZ ENDP		; dlib::error::type_to_string
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?what@error@dlib@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@error@dlib@@UBEPBDXZ PROC				; dlib::error::what, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	test	eax, eax
	jbe	SHORT $LN2@what
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	jmp	SHORT $LN3@what
; Line 126
	jmp	SHORT $LN3@what
$LN2@what:
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	call	?type_to_string@error@dlib@@QBEPBDXZ	; dlib::error::type_to_string
$LN3@what:
; Line 128
	mov	esp, ebp
	pop	ebp
	ret	0
?what@error@dlib@@UBEPBDXZ ENDP				; dlib::error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 132
	push	ebp
	mov	ebp, esp
; Line 133
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
; Line 134
	pop	ebp
	ret	0
_time	ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _mktime
_TEXT	SEGMENT
__Tm$ = 8						; size = 4
_mktime	PROC						; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Tm$[ebp]
	push	eax
	call	DWORD PTR __imp___mktime64
	add	esp, 4
; Line 126
	pop	ebp
	ret	0
_mktime	ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT
; Line 113
	push	ebp
	mov	ebp, esp
; Line 116
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___localtime64
	add	esp, 4
; Line 118
	pop	ebp
	ret	0
_localtime ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _difftime
_TEXT	SEGMENT
__Time1$ = 8						; size = 8
__Time2$ = 16						; size = 8
_difftime PROC						; COMDAT
; Line 83
	push	ebp
	mov	ebp, esp
; Line 84
	mov	eax, DWORD PTR __Time2$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Time2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Time1$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Time1$[ebp]
	push	eax
	call	DWORD PTR __imp___difftime64
	add	esp, 16					; 00000010H
; Line 85
	pop	ebp
	ret	0
_difftime ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?hex@std@@YAAAVios_base@1@AAV21@@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
?hex@std@@YAAAVios_base@1@AAV21@@Z PROC			; std::hex, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ios
; Line 219
	push	ebp
	mov	ebp, esp
; Line 220
	push	3584					; 00000e00H
	push	2048					; 00000800H
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	call	DWORD PTR __imp_?setf@ios_base@std@@QAEHHH@Z
; Line 221
	mov	eax, DWORD PTR __Iosbase$[ebp]
; Line 222
	pop	ebp
	ret	0
?hex@std@@YAAAVios_base@1@AAV21@@Z ENDP			; std::hex
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
; Line 562
	push	ebp
	mov	ebp, esp
; Line 563
	or	eax, -1
; Line 564
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 558
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN3@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR tv69[ebp], eax
$LN4@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 559
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 554
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; Line 546
	push	ebp
	mov	ebp, esp
; Line 547
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 548
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; Line 541
	push	ebp
	mov	ebp, esp
; Line 542
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 543
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; Line 531
	push	ebp
	mov	ebp, esp
; Line 532
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	xor	edx, edx
	cmp	ecx, eax
	sete	dl
	mov	al, dl
; Line 533
	pop	ebp
	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 526
	push	ebp
	mov	ebp, esp
; Line 527
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 528
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAPADPADID@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?assign@?$char_traits@D@std@@SAPADPADID@Z PROC		; std::char_traits<char>::assign, COMDAT
; Line 521
	push	ebp
	mov	ebp, esp
; Line 522
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	movsx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 523
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAPADPADID@Z ENDP		; std::char_traits<char>::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; Line 516
	push	ebp
	mov	ebp, esp
; Line 517
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
; Line 518
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?find@?$char_traits@D@std@@SAPBDPBDIABD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 4
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z PROC		; std::char_traits<char>::find, COMDAT
; Line 510
	push	ebp
	mov	ebp, esp
; Line 511
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ch$[ebp]
	movsx	edx, BYTE PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	DWORD PTR __imp__memchr
	add	esp, 12					; 0000000cH
; Line 512
	pop	ebp
	ret	0
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ENDP		; std::char_traits<char>::find
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; Line 496
	push	ebp
	mov	ebp, esp
; Line 497
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 498
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv66 = -16						; size = 4
tv74 = -9						; size = 1
tv71 = -8						; size = 4
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 491
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	add	ecx, 1
	mov	DWORD PTR tv71[ebp], ecx
$LL3@length:
	mov	edx, DWORD PTR tv68[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv74[ebp], al
	add	DWORD PTR tv68[ebp], 1
	cmp	BYTE PTR tv74[ebp], 0
	jne	SHORT $LL3@length
	mov	ecx, DWORD PTR tv68[ebp]
	sub	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	eax, DWORD PTR tv66[ebp]
; Line 492
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv71 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	push	edi
; Line 486
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edi, DWORD PTR __First2$[ebp]
	mov	esi, DWORD PTR __First1$[ebp]
	xor	eax, eax
	mov	DWORD PTR tv71[ebp], eax
	repe cmpsb
	je	SHORT $LN3@compare
	sbb	ecx, ecx
	sbb	ecx, -1
	mov	DWORD PTR tv71[ebp], ecx
$LN3@compare:
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv68[ebp], edx
	mov	eax, DWORD PTR tv68[ebp]
; Line 487
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\new
; Line 61
	push	ebp
	mov	ebp, esp
; Line 62
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; Line 56
	push	ebp
	mov	ebp, esp
; Line 57
	mov	eax, DWORD PTR __Where$[ebp]
; Line 58
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
; Line 354
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T358103 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@17
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@17
$LN4@Allocate@17:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 44739242	; 02aaaaaaH
	ja	SHORT $LN1@Allocate@17
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 96					; 00000060H
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@17
$LN1@Allocate@17:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T358103[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T358103[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@17:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@17:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T358106 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@18
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@18
$LN4@Allocate@18:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 153391689	; 09249249H
	ja	SHORT $LN1@Allocate@18
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@18
$LN1@Allocate@18:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T358106[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T358106[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@18:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@18:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T358109 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate@19
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate@19
$LN4@Allocate@19:
; Line 36
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate@19
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate@19
$LN1@Allocate@19:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T358109[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T358109[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate@19:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate@19:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z$3
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z
_TEXT	SEGMENT
tv278 = -120						; size = 4
tv277 = -116						; size = 4
tv276 = -109						; size = 1
tv275 = -108						; size = 4
tv274 = -104						; size = 4
tv273 = -100						; size = 4
tv272 = -96						; size = 4
tv271 = -89						; size = 1
tv65 = -88						; size = 4
tv95 = -84						; size = 8
tv310 = -76						; size = 8
$T358120 = -68						; size = 4
$T358119 = -64						; size = 4
$T358118 = -60						; size = 4
$T358117 = -56						; size = 4
$T358116 = -52						; size = 4
$T358115 = -48						; size = 4
$T358114 = -44						; size = 4
__Pad$164995 = -40					; size = 8
__Ok$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Ch$ = 12						; size = 1
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; Line 813
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 104				; 00000068H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 816
	mov	DWORD PTR __State$[ebp], 0
; Line 817
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 819
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
	cmp	eax, -1
	je	$LN12@operator@13
; Line 821
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv310[ebp], eax
	mov	DWORD PTR tv310[ebp+4], edx
	cmp	DWORD PTR tv310[ebp+4], 0
	jg	SHORT $LN15@operator@13
	jl	SHORT $LN23@operator@13
	cmp	DWORD PTR tv310[ebp], 1
	ja	SHORT $LN15@operator@13
$LN23@operator@13:
	mov	DWORD PTR tv95[ebp], 0
	mov	DWORD PTR tv95[ebp+4], 0
	jmp	SHORT $LN16@operator@13
$LN15@operator@13:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	sub	eax, 1
	sbb	edx, 0
	mov	DWORD PTR tv95[ebp], eax
	mov	DWORD PTR tv95[ebp+4], edx
$LN16@operator@13:
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR __Pad$164995[ebp], eax
	mov	ecx, DWORD PTR tv95[ebp+4]
	mov	DWORD PTR __Pad$164995[ebp+4], ecx
; Line 823
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 824
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	and	ecx, 448				; 000001c0H
	cmp	ecx, 64					; 00000040H
	je	$LN10@operator@13
; Line 826
	jmp	SHORT $LN9@operator@13
$LN8@operator@13:
	mov	edx, DWORD PTR __Pad$164995[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR __Pad$164995[ebp+4]
	sbb	eax, 0
	mov	DWORD PTR __Pad$164995[ebp], edx
	mov	DWORD PTR __Pad$164995[ebp+4], eax
$LN9@operator@13:
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN10@operator@13
	cmp	DWORD PTR __Pad$164995[ebp+4], 0
	jl	SHORT $LN10@operator@13
	jg	SHORT $LN24@operator@13
	cmp	DWORD PTR __Pad$164995[ebp], 0
	jbe	SHORT $LN10@operator@13
$LN24@operator@13:
; Line 828
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv271[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv272[ebp], eax
	movzx	eax, BYTE PTR tv271[ebp]
	push	eax
	mov	ecx, DWORD PTR tv272[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv273[ebp], eax
	mov	ecx, DWORD PTR tv273[ebp]
	mov	DWORD PTR $T358114[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358115[ebp], eax
	lea	edx, DWORD PTR $T358114[ebp]
	push	edx
	lea	eax, DWORD PTR $T358115[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@operator@13
; Line 829
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN6@operator@13:
; Line 831
	jmp	$LN8@operator@13
$LN10@operator@13:
; Line 833
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN5@operator@13
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv274[ebp], eax
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv274[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR tv275[ebp]
	mov	DWORD PTR $T358116[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358117[ebp], eax
	lea	edx, DWORD PTR $T358116[ebp]
	push	edx
	lea	eax, DWORD PTR $T358117[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@operator@13
; Line 834
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN5@operator@13:
; Line 837
	jmp	SHORT $LN4@operator@13
$LN3@operator@13:
	mov	eax, DWORD PTR __Pad$164995[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$164995[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$164995[ebp], eax
	mov	DWORD PTR __Pad$164995[ebp+4], ecx
$LN4@operator@13:
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN2@operator@13
	cmp	DWORD PTR __Pad$164995[ebp+4], 0
	jl	SHORT $LN2@operator@13
	jg	SHORT $LN25@operator@13
	cmp	DWORD PTR __Pad$164995[ebp], 0
	jbe	SHORT $LN2@operator@13
$LN25@operator@13:
; Line 839
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv276[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv277[ebp], eax
	movzx	eax, BYTE PTR tv276[ebp]
	push	eax
	mov	ecx, DWORD PTR tv277[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv278[ebp], eax
	mov	ecx, DWORD PTR tv278[ebp]
	mov	DWORD PTR $T358118[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358119[ebp], eax
	lea	edx, DWORD PTR $T358118[ebp]
	push	edx
	lea	eax, DWORD PTR $T358119[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@13
; Line 840
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN1@operator@13:
; Line 841
	jmp	$LN3@operator@13
$LN2@operator@13:
	jmp	SHORT $LN17@operator@13
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z$0:
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN12@operator@13
	ret	0
$LN17@operator@13:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN12@operator@13:
; Line 844
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
; Line 845
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 846
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T358120[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T358120[ebp]
; Line 847
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 42
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
; Line 239
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1972
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1973
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside@16
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside@16
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside@16
$LN2@Inside@16:
; Line 1974
	xor	al, al
	jmp	SHORT $LN4@Inside@16
; Line 1975
	jmp	SHORT $LN4@Inside@16
$LN3@Inside@16:
; Line 1976
	mov	al, 1
$LN4@Inside@16:
; Line 1977
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 249
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
; Line 271
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tmp$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 244
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
; Line 245
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 246
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >, COMDAT
; _this$ = ecx
; Line 184
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >, COMDAT
; _this$ = ecx
; Line 342
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z PROC ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 53
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ENDP ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; Line 378
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 379
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 380
	mov	eax, DWORD PTR _this$[ebp]
; Line 381
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z PROC ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 438
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0Ustruct_chat@Battlefield@@@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@ABV?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node><Battlefield::struct_chat>
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 9
	call	??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
; Line 439
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ENDP ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@IPAV10@@Z ; std::_Allocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to@14
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to@14
$LN4@Grow_to@14:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to@14:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to@14
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to@14:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::get_allocator, COMDAT
; _this$ = ecx
; Line 893
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 894
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 895
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1911
	cmp	DWORD PTR __Count$[ebp], 1
	jne	SHORT $LN2@Chassign
; Line 1912
	lea	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1913
	jmp	SHORT $LN3@Chassign
$LN2@Chassign:
; Line 1914
	movzx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAPADPADID@Z ; std::char_traits<char>::assign
	add	esp, 12					; 0000000cH
$LN3@Chassign:
; Line 1915
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??F?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 382
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 383
	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
; Line 385
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Tmp$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx
; Line 386
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 387
	mov	esp, ebp
	pop	ebp
	ret	8
??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pstring$ = 12						; size = 4
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z PROC ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 325
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDPBU_Container_base0@1@@Z ; std::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_const_iterator<char,std::char_traits<char>,std::allocator<char> >
; Line 326
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ENDP ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 1
??0?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z PROC ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 493
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Line 494
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 495
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
; Line 497
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ENDP ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 797
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 798
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin, COMDAT
; _this$ = ecx
; Line 786
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 788
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@PBV?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1251
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 1253
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1255
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy@3
; Line 1256
	xor	al, al
	jmp	SHORT $LN6@Buy@3
	jmp	SHORT $LN3@Buy@3
$LN4@Buy@3:
; Line 1257
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy@3
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
; Line 1259
	jmp	SHORT $LN3@Buy@3
$LN2@Buy@3:
; Line 1261
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1262
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], ecx
; Line 1263
	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN3@Buy@3:
; Line 1265
	mov	al, 1
$LN6@Buy@3:
; Line 1266
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx
; Line 796
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 797
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 798
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx
; Line 786
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 788
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 340
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 341
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 1
	je	SHORT $LN1@Tidy@4
; Line 344
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN4@Tidy@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy@4
$LN4@Tidy@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy@4:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR tv88[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy@4:
; Line 345
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 346
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 348
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 349
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 454
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
; Line 455
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T358223 = -1						; size = 1
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; Line 1952
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1953
	mov	BYTE PTR $T358223[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	lea	edx, DWORD PTR $T358223[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 1954
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT
; _this$ = ecx
; Line 1905
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1906
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1907
	mov	esp, ebp
	pop	ebp
	ret	4
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
tv129 = -20						; size = 4
tv130 = -16						; size = 4
tv86 = -12						; size = 4
_this$ = -8						; size = 4
__Ans$ = -4						; size = 4
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; Line 1887
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1893
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN2@compare@2
; Line 1894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN2@compare@2:
; Line 1895
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __N0$[ebp]
	jae	SHORT $LN1@compare@2
; Line 1896
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __N0$[ebp], edx
$LN1@compare@2:
; Line 1899
	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@compare@2
	mov	ecx, DWORD PTR __N0$[ebp]
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN6@compare@2
$LN5@compare@2:
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv86[ebp], edx
$LN6@compare@2:
	mov	eax, DWORD PTR tv86[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ans$[ebp], eax
; Line 1901
	cmp	DWORD PTR __Ans$[ebp], 0
	je	SHORT $LN9@compare@2
	mov	edx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR tv130[ebp], edx
	jmp	SHORT $LN10@compare@2
$LN9@compare@2:
	mov	eax, DWORD PTR __N0$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN7@compare@2
	mov	DWORD PTR tv129[ebp], -1
	jmp	SHORT $LN8@compare@2
$LN7@compare@2:
	mov	ecx, DWORD PTR __N0$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR __Count$[ebp]
	setne	dl
	mov	DWORD PTR tv129[ebp], edx
$LN8@compare@2:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv130[ebp], eax
$LN10@compare@2:
	mov	eax, DWORD PTR tv130[ebp]
$LN4@compare@2:
; Line 1902
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__Vptr$160396 = -12					; size = 4
__Uptr$160395 = -8					; size = 4
__Nm$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; Line 1617
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN6@find
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	ja	SHORT $LN6@find
; Line 1624
	mov	eax, DWORD PTR __Off$[ebp]
	jmp	$LN7@find
$LN6@find:
; Line 1627
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jae	$LN5@find
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Nm$[ebp], edx
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Nm$[ebp]
	ja	$LN5@find
; Line 1630
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Nm$[ebp]
	sub	edx, ecx
	mov	DWORD PTR __Nm$[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Vptr$160396[ebp], eax
; Line 1632
	jmp	SHORT $LN4@find
$LN3@find:
	mov	eax, DWORD PTR __Uptr$160395[ebp]
	sub	eax, DWORD PTR __Vptr$160396[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR __Nm$[ebp]
	sub	ecx, eax
	mov	DWORD PTR __Nm$[ebp], ecx
	mov	edx, DWORD PTR __Uptr$160395[ebp]
	add	edx, 1
	mov	DWORD PTR __Vptr$160396[ebp], edx
$LN4@find:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Nm$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Vptr$160396[ebp]
	push	edx
	call	?find@?$char_traits@D@std@@SAPBDPBDIABD@Z ; std::char_traits<char>::find
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Uptr$160395[ebp], eax
	cmp	DWORD PTR __Uptr$160395[ebp], 0
	je	SHORT $LN5@find
; Line 1633
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Uptr$160395[ebp]
	push	edx
	call	?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@find
; Line 1634
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Uptr$160395[ebp]
	sub	ecx, eax
	mov	eax, ecx
	jmp	SHORT $LN7@find
$LN1@find:
; Line 1635
	jmp	SHORT $LN3@find
$LN5@find:
; Line 1637
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
$LN7@find:
; Line 1638
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::end, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAE@PAUban@Database@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::_Vector_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAE@PAUadmin@Database@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::_Vector_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEAAUstruct_chat@Battlefield@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T358246 = -4						; size = 4
?back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEAAUstruct_chat@Battlefield@@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::back, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 906
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 907
	lea	eax, DWORD PTR $T358246[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
	mov	ecx, eax
	call	??F?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
	mov	ecx, eax
	call	??D?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEAAUstruct_chat@Battlefield@@XZ ; std::_List_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
; Line 908
	mov	esp, ebp
	pop	ebp
	ret	0
?back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEAAUstruct_chat@Battlefield@@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T358249 = -4						; size = 4
??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >, COMDAT
; _this$ = ecx
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T358249[ebp], esp
	call	??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@XZ ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Line 608
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAE@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 206
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN8@underflow@3
; Line 208
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow@3
	jmp	$LN9@underflow@3
$LN8@underflow@3:
; Line 209
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jae	SHORT $LN6@underflow@3
; Line 210
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	$LN9@underflow@3
; Line 211
	jmp	$LN9@underflow@3
$LN6@underflow@3:
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 4
	jne	SHORT $LN3@underflow@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN3@underflow@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	ja	SHORT $LN4@underflow@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], eax
	ja	SHORT $LN4@underflow@3
$LN3@underflow@3:
; Line 213
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN9@underflow@3
; Line 214
	jmp	SHORT $LN9@underflow@3
$LN4@underflow@3:
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+60], eax
	jae	SHORT $LN1@underflow@3
; Line 217
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], eax
$LN1@underflow@3:
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 219
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
$LN9@underflow@3:
; Line 221
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T358261 = -12						; size = 4
$T358260 = -5						; size = 1
$T358259 = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN3@pbackfail@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jbe	SHORT $LN3@pbackfail@4
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358259[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T358259[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail@4
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T358260[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T358260[ebp]
	push	ecx
	call	?eq@?$char_traits@D@std@@SA_NABD0@Z	; std::char_traits<char>::eq
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	je	SHORT $LN4@pbackfail@4
$LN3@pbackfail@4:
; Line 195
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN5@pbackfail@4
; Line 196
	jmp	SHORT $LN5@pbackfail@4
$LN4@pbackfail@4:
; Line 198
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
; Line 199
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358261[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T358261[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@pbackfail@4
; Line 200
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	BYTE PTR [eax], bl
$LN1@pbackfail@4:
; Line 201
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
$LN5@pbackfail@4:
; Line 203
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
_this$ = -28						; size = 4
$T358264 = -24						; size = 4
__Newsize$159029 = -20					; size = 4
__Oldptr$159036 = -16					; size = 4
__Oldsize$159028 = -12					; size = 4
__Inc$159030 = -8					; size = 4
__Newptr$159035 = -4					; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 8
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN18@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+60]
	jae	SHORT $LN18@overflow
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN18@overflow:
; Line 125
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358264[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T358264[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@overflow
; Line 126
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN19@overflow
; Line 127
	jmp	$LN19@overflow
$LN17@overflow:
; Line 128
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN15@overflow
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, eax
	jae	SHORT $LN15@overflow
; Line 130
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	mov	BYTE PTR [eax], bl
; Line 131
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN19@overflow
	jmp	$LN19@overflow
$LN15@overflow:
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 2
	je	SHORT $LN13@overflow
; Line 134
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN19@overflow
; Line 135
	jmp	$LN19@overflow
$LN13@overflow:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN21@overflow
	mov	DWORD PTR tv195[ebp], 0
	jmp	SHORT $LN22@overflow
$LN21@overflow:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	mov	DWORD PTR tv195[ebp], esi
$LN22@overflow:
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR __Oldsize$159028[ebp], eax
; Line 139
	mov	ecx, DWORD PTR __Oldsize$159028[ebp]
	mov	DWORD PTR __Newsize$159029[ebp], ecx
; Line 141
	mov	edx, DWORD PTR __Newsize$159029[ebp]
	shr	edx, 1
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN23@overflow
	mov	DWORD PTR tv199[ebp], 32		; 00000020H
	jmp	SHORT $LN24@overflow
$LN23@overflow:
	mov	eax, DWORD PTR __Newsize$159029[ebp]
	shr	eax, 1
	mov	DWORD PTR tv199[ebp], eax
$LN24@overflow:
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR __Inc$159030[ebp], ecx
$LN11@overflow:
; Line 143
	cmp	DWORD PTR __Inc$159030[ebp], 0
	jbe	SHORT $LN10@overflow
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, DWORD PTR __Inc$159030[ebp]
	cmp	edx, DWORD PTR __Newsize$159029[ebp]
	jae	SHORT $LN10@overflow
; Line 144
	mov	eax, DWORD PTR __Inc$159030[ebp]
	shr	eax, 1
	mov	DWORD PTR __Inc$159030[ebp], eax
	jmp	SHORT $LN11@overflow
$LN10@overflow:
; Line 145
	cmp	DWORD PTR __Inc$159030[ebp], 0
	jne	SHORT $LN9@overflow
; Line 146
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN19@overflow
$LN9@overflow:
; Line 148
	mov	ecx, DWORD PTR __Newsize$159029[ebp]
	add	ecx, DWORD PTR __Inc$159030[ebp]
	mov	DWORD PTR __Newsize$159029[ebp], ecx
; Line 150
	mov	edx, DWORD PTR __Newsize$159029[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Newptr$159035[ebp], eax
; Line 151
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR __Oldptr$159036[ebp], eax
; Line 153
	cmp	DWORD PTR __Oldsize$159028[ebp], 0
	jbe	SHORT $LN8@overflow
; Line 154
	mov	eax, DWORD PTR __Oldsize$159028[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$159036[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$159035[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN8@overflow:
; Line 156
	cmp	DWORD PTR __Oldsize$159028[ebp], 0
	jne	SHORT $LN7@overflow
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newptr$159035[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 159
	mov	edx, DWORD PTR __Newptr$159035[ebp]
	add	edx, DWORD PTR __Newsize$159029[ebp]
	push	edx
	mov	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 4
	je	SHORT $LN6@overflow
; Line 161
	mov	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$159035[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 162
	jmp	SHORT $LN5@overflow
$LN6@overflow:
; Line 163
	mov	edx, DWORD PTR __Newptr$159035[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$159035[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN5@overflow:
; Line 165
	jmp	$LN4@overflow
$LN7@overflow:
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	sub	eax, DWORD PTR __Oldptr$159036[ebp]
	add	eax, DWORD PTR __Newptr$159035[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 170
	mov	edx, DWORD PTR __Newptr$159035[ebp]
	add	edx, DWORD PTR __Newsize$159029[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$159036[ebp]
	add	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$159036[ebp]
	add	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 4
	je	SHORT $LN3@overflow
; Line 172
	mov	edx, DWORD PTR __Newptr$159035[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 173
	jmp	SHORT $LN4@overflow
$LN3@overflow:
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	eax, DWORD PTR __Oldptr$159036[ebp]
	add	eax, DWORD PTR __Newptr$159035[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$159035[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN4@overflow:
; Line 179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 1
	je	SHORT $LN1@overflow
; Line 180
	mov	ecx, DWORD PTR __Oldsize$159028[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldptr$159036[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 183
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	mov	BYTE PTR [eax], bl
; Line 184
	mov	eax, DWORD PTR __Meta$[ebp]
$LN19@overflow:
; Line 186
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 468
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-88]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-88], OFFSET ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 469
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	jmp	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1874
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1876
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 1877
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx
; Line 1852
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1853
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Line 1854
	mov	esp, ebp
	pop	ebp
	ret	4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ch$ = 8						; size = 1
__Off$ = 12						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; Line 1647
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1648
	push	1
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ch$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 1649
	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Off$ = 12						; size = 4
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find, COMDAT
; _this$ = ecx
; Line 1641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1643
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Line 1644
	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end, COMDAT
; _this$ = ecx
; Line 1360
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1361
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1362
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin, COMDAT
; _this$ = ecx
; Line 1350
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1351
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PADPBU_Container_base0@1@@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::_String_iterator<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1352
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear, COMDAT
; _this$ = ecx
; Line 1138
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1139
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1140
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newsize$156569 = -4					; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; Line 1108
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase@2
; Line 1110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@erase@2:
; Line 1111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase@2
; Line 1112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], edx
$LN2@erase@2:
; Line 1113
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase@2
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1117
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$156569[ebp], eax
; Line 1118
	mov	ecx, DWORD PTR __Newsize$156569[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase@2:
; Line 1120
	mov	eax, DWORD PTR _this$[ebp]
$LN5@erase@2:
; Line 1121
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	__real@40f5180000000000
;	COMDAT __real@40f5180000000000
; File c:\work\daspirum\source\src\helper.hpp
CONST	SEGMENT
__real@40f5180000000000 DQ 040f5180000000000r	; 86400
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ?timeFromNow@helper@@YANEEG@Z
_TEXT	SEGMENT
_timeinfo$ = -28					; size = 4
_rawtime$ = -24						; size = 8
_timeinfo2$ = -12					; size = 4
_rawtime2$ = -8						; size = 8
_day$ = 8						; size = 1
_month$ = 12						; size = 1
_year$ = 16						; size = 2
?timeFromNow@helper@@YANEEG@Z PROC			; helper::timeFromNow, COMDAT
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 127
	lea	eax, DWORD PTR _rawtime$[ebp]
	push	eax
	call	_time
	add	esp, 4
; Line 128
	lea	ecx, DWORD PTR _rawtime$[ebp]
	push	ecx
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _timeinfo$[ebp], eax
; Line 129
	movzx	edx, WORD PTR _year$[ebp]
	sub	edx, 1900				; 0000076cH
	mov	eax, DWORD PTR _timeinfo$[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 130
	movzx	ecx, BYTE PTR _month$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _timeinfo$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 131
	movzx	eax, BYTE PTR _day$[ebp]
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 132
	mov	edx, DWORD PTR _timeinfo$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 133
	mov	eax, DWORD PTR _timeinfo$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 134
	mov	ecx, DWORD PTR _timeinfo$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 135
	mov	edx, DWORD PTR _timeinfo$[ebp]
	push	edx
	call	_mktime
	add	esp, 4
	mov	DWORD PTR _rawtime$[ebp], eax
	mov	DWORD PTR _rawtime$[ebp+4], edx
; Line 136
	lea	eax, DWORD PTR _rawtime2$[ebp]
	push	eax
	call	_time
	add	esp, 4
; Line 137
	lea	ecx, DWORD PTR _rawtime2$[ebp]
	push	ecx
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _timeinfo2$[ebp], eax
; Line 138
	mov	edx, DWORD PTR _timeinfo2$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 139
	mov	eax, DWORD PTR _timeinfo2$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 140
	mov	ecx, DWORD PTR _timeinfo2$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 141
	mov	edx, DWORD PTR _timeinfo2$[ebp]
	push	edx
	call	_mktime
	add	esp, 4
	mov	DWORD PTR _rawtime2$[ebp], eax
	mov	DWORD PTR _rawtime2$[ebp+4], edx
; Line 143
	mov	eax, DWORD PTR _rawtime$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _rawtime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rawtime2$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rawtime2$[ebp]
	push	eax
	call	_difftime
	add	esp, 16					; 00000010H
	fdiv	QWORD PTR __real@40f5180000000000
; Line 144
	mov	esp, ebp
	pop	ebp
	ret	0
?timeFromNow@helper@@YANEEG@Z ENDP			; helper::timeFromNow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@118
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@118:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@E@Z
_TEXT	SEGMENT
__Ostr$ = 8						; size = 4
__Ch$ = 12						; size = 1
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@E@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
; Line 960
	push	ebp
	mov	ebp, esp
; Line 961
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 962
	pop	ebp
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@E@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 186
	push	ebp
	mov	ebp, esp
; Line 187
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 188
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator==<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 166
	push	ebp
	mov	ebp, esp
; Line 167
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 168
	pop	ebp
	ret	0
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -12						; size = 4
_this$ = -8						; size = 4
__Pnew$163340 = -4					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 314
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
; Line 315
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [ecx+64], edx
; Line 318
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN5@Init@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 6
	cmp	ecx, 6
	je	$LN5@Init@2
; Line 320
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Pnew$163340[ebp], eax
; Line 321
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$163340[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 322
	mov	eax, DWORD PTR __Pnew$163340[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 324
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 4
	jne	SHORT $LN3@Init@2
; Line 326
	mov	ecx, DWORD PTR __Pnew$163340[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$163340[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$163340[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN3@Init@2:
; Line 327
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	and	edx, 2
	jne	SHORT $LN2@Init@2
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 16					; 00000010H
	je	SHORT $LN7@Init@2
	mov	edx, DWORD PTR __Pnew$163340[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN8@Init@2
$LN7@Init@2:
	mov	eax, DWORD PTR __Pnew$163340[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN8@Init@2:
	mov	ecx, DWORD PTR __Pnew$163340[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$163340[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	jne	SHORT $LN2@Init@2
; Line 333
	mov	ecx, DWORD PTR __Pnew$163340[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Pnew$163340[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
$LN2@Init@2:
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], ecx
$LN5@Init@2:
; Line 337
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 35
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 36
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 29
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 30
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$160419 = -4					; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1987
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1988
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy@5
	jmp	SHORT $LN3@Tidy@5
$LN4@Tidy@5:
; Line 1990
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN3@Tidy@5
; Line 1992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Ptr$160419[ebp], eax
; Line 1993
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy@5
; Line 1994
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$160419[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy@5:
; Line 1995
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Ptr$160419[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy@5:
; Line 1997
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 15			; 0000000fH
; Line 1998
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1999
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@160
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@160:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	call	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@161
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@161:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 88					; 00000058H
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
xdata$x	SEGMENT
__unwindtable$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0
__ehfuncinfo$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 583
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-80]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-80], OFFSET ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 584
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	jmp	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T359385 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 537
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T359385[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_ostr
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T359385[ebp]
	or	ecx, 1
	mov	DWORD PTR $T359385[ebp], ecx
$LN1@basic_ostr:
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 2
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 538
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T359385[ebp]
	and	eax, 1
	je	$LN5@basic_ostr
	and	DWORD PTR $T359385[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	jmp	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN5@basic_ostr:
	ret	0
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$1
__ehfuncinfo$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T359398 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Str$ = 8						; size = 4
__Mode$ = 12						; size = 4
_$initVBases$ = 16					; size = 4
??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z PROC ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 429
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T359398[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_istr
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T359398[ebp]
	or	ecx, 1
	mov	DWORD PTR $T359398[ebp], ecx
$LN1@basic_istr:
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR __Mode$[ebp]
	or	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Str$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 430
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$0:
	mov	eax, DWORD PTR $T359398[ebp]
	and	eax, 1
	je	$LN5@basic_istr
	and	DWORD PTR $T359398[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
$LN5@basic_istr:
	ret	0
__unwindfunclet$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	DWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ
__ehhandler$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ENDP ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 752
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 753
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 754
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T359413 = -4						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T359413[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Line 551
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
; Function compile flags: /Odtp
;	COMDAT ?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
_currentDistance$154072 = -10				; size = 1
_i$154068 = -9						; size = 1
_bestDistance$ = -8					; size = 4
_bestMatchingIndex$ = -1				; size = 1
_name$ = 8						; size = 4
?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::getPlayerIndexByName, COMDAT
; _this$ = ecx
; File c:\work\daspirum\source\src\battlefield3.cpp
; Line 378
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 379
	mov	BYTE PTR _bestMatchingIndex$[ebp], 0
; Line 380
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	mov	DWORD PTR _bestDistance$[ebp], eax
; Line 382
	mov	BYTE PTR _i$154068[ebp], 0
	jmp	SHORT $LN4@getPlayerI
$LN3@getPlayerI:
	mov	cl, BYTE PTR _i$154068[ebp]
	add	cl, 1
	mov	BYTE PTR _i$154068[ebp], cl
$LN4@getPlayerI:
	movzx	edx, BYTE PTR _i$154068[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	edx, ecx
	jge	SHORT $LN2@getPlayerI
; Line 384
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	movzx	eax, BYTE PTR _i$154068[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	?levenshtein_distance@helper@@YAEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; helper::levenshtein_distance
	add	esp, 8
	mov	BYTE PTR _currentDistance$154072[ebp], al
; Line 385
	movzx	eax, BYTE PTR _currentDistance$154072[ebp]
	cmp	eax, DWORD PTR _bestDistance$[ebp]
	jae	SHORT $LN1@getPlayerI
; Line 387
	movzx	ecx, BYTE PTR _currentDistance$154072[ebp]
	mov	DWORD PTR _bestDistance$[ebp], ecx
; Line 388
	mov	dl, BYTE PTR _i$154068[ebp]
	mov	BYTE PTR _bestMatchingIndex$[ebp], dl
$LN1@getPlayerI:
; Line 390
	jmp	SHORT $LN3@getPlayerI
$LN2@getPlayerI:
; Line 392
	mov	al, BYTE PTR _bestMatchingIndex$[ebp]
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	4
?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::getPlayerIndexByName
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1struct_chat@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1struct_chat@Battlefield@@QAE@XZ PROC			; Battlefield::struct_chat::~struct_chat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1struct_chat@Battlefield@@QAE@XZ ENDP			; Battlefield::struct_chat::~struct_chat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0struct_chat@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_chat@Battlefield@@QAE@XZ PROC			; Battlefield::struct_chat::struct_chat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_chat@Battlefield@@QAE@XZ ENDP			; Battlefield::struct_chat::struct_chat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1struct_settings@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1struct_settings@Database@@QAE@XZ PROC		; Database::struct_settings::~struct_settings, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1struct_settings@Database@@QAE@XZ ENDP		; Database::struct_settings::~struct_settings
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gstruct_settings@Database@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gstruct_settings@Database@@QAEPAXI@Z PROC		; Database::struct_settings::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1struct_settings@Database@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@162
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@162:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gstruct_settings@Database@@QAEPAXI@Z ENDP		; Database::struct_settings::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1struct_player@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1struct_player@Battlefield@@QAE@XZ PROC		; Battlefield::struct_player::~struct_player, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1struct_player@Battlefield@@QAE@XZ ENDP		; Battlefield::struct_player::~struct_player
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0struct_player@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_player@Battlefield@@QAE@XZ PROC		; Battlefield::struct_player::struct_player, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_player@Battlefield@@QAE@XZ ENDP		; Battlefield::struct_player::struct_player
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1error@dlib@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error@dlib@@UAE@XZ PROC				; dlib::error::~error, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\error.h
; Line 108
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error@dlib@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1error@dlib@@UAE@XZ ENDP				; dlib::error::~error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0error@dlib@@QAE@W4error_type@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
??0error@dlib@@QAE@W4error_type@1@@Z PROC		; dlib::error::error, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error@dlib@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0error@dlib@@QAE@W4error_type@1@@Z ENDP		; dlib::error::error
; Function compile flags: /Odtp
;	COMDAT ??1ban@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1ban@Database@@QAE@XZ PROC				; Database::ban::~ban, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1ban@Database@@QAE@XZ ENDP				; Database::ban::~ban
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1admin@Database@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1admin@Database@@QAE@XZ PROC				; Database::admin::~admin, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1admin@Database@@QAE@XZ ENDP				; Database::admin::~admin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1struct_Vote@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1struct_Vote@Battlefield@@QAE@XZ PROC			; Battlefield::struct_Vote::~struct_Vote, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1struct_Vote@Battlefield@@QAE@XZ ENDP			; Battlefield::struct_Vote::~struct_Vote
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gban@Database@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gban@Database@@QAEPAXI@Z PROC			; Database::ban::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ban@Database@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@199
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@199:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gban@Database@@QAEPAXI@Z ENDP			; Database::ban::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gadmin@Database@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gadmin@Database@@QAEPAXI@Z PROC			; Database::admin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1admin@Database@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@200
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@200:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gadmin@Database@@QAEPAXI@Z ENDP			; Database::admin::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gstruct_Vote@Battlefield@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gstruct_Vote@Battlefield@@QAEPAXI@Z PROC		; Battlefield::struct_Vote::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1struct_Vote@Battlefield@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@201
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@201:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gstruct_Vote@Battlefield@@QAEPAXI@Z ENDP		; Battlefield::struct_Vote::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@202
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@202:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@Uban@Database@@@std@@YAXPAUban@Database@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@Uban@Database@@@std@@YAXPAUban@Database@@@Z PROC ; std::_Destroy<Database::ban>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_Gban@Database@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@Uban@Database@@@std@@YAXPAUban@Database@@@Z ENDP ; std::_Destroy<Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@Uadmin@Database@@@std@@YAXPAUadmin@Database@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@Uadmin@Database@@@std@@YAXPAUadmin@Database@@@Z PROC ; std::_Destroy<Database::admin>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_Gadmin@Database@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@Uadmin@Database@@@std@@YAXPAUadmin@Database@@@Z ENDP ; std::_Destroy<Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@Ustruct_Vote@Battlefield@@@std@@YAXPAUstruct_Vote@Battlefield@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@Ustruct_Vote@Battlefield@@@std@@YAXPAUstruct_Vote@Battlefield@@@Z PROC ; std::_Destroy<Battlefield::struct_Vote>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_Gstruct_Vote@Battlefield@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@Ustruct_Vote@Battlefield@@@std@@YAXPAUstruct_Vote@Battlefield@@@Z ENDP ; std::_Destroy<Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@@Z PROC ; std::allocator<Database::ban>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@Uban@Database@@@std@@YAXPAUban@Database@@@Z ; std::_Destroy<Database::ban>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@@Z ENDP ; std::allocator<Database::ban>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@@Z PROC ; std::allocator<Database::admin>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@Uadmin@Database@@@std@@YAXPAUadmin@Database@@@Z ; std::_Destroy<Database::admin>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@@Z ENDP ; std::allocator<Database::admin>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@@Z PROC ; std::allocator<Battlefield::struct_Vote>::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@Ustruct_Vote@Battlefield@@@std@@YAXPAUstruct_Vote@Battlefield@@@Z ; std::_Destroy<Battlefield::struct_Vote>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@@Z ENDP ; std::allocator<Battlefield::struct_Vote>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy, COMDAT
; _this$ = ecx
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@@Z PROC ; std::_Dest_val<std::allocator<Database::ban>,Database::ban>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@@Z ; std::allocator<Database::ban>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@@Z ENDP ; std::_Dest_val<std::allocator<Database::ban>,Database::ban>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@@Z PROC ; std::_Dest_val<std::allocator<Database::admin>,Database::admin>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@@Z ; std::allocator<Database::admin>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@@Z ENDP ; std::_Dest_val<std::allocator<Database::admin>,Database::admin>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@@Z PROC ; std::_Dest_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@@Z ; std::allocator<Battlefield::struct_Vote>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@@Z ENDP ; std::_Dest_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1struct_chat@Battlefield@@QAE@XZ
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node::~_Node
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAXI@Z PROC ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@203
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@203:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAXI@Z ENDP ; std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>, COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
; Line 63
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAXI@Z
; Line 64
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Database::ban> >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	jmp	SHORT $LN3@Destroy_ra@5
$LN2@Destroy_ra@5:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 144				; 00000090H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra@5:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra@5
; Line 97
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@Uban@Database@@@std@@Uban@Database@@@std@@YAXAAV?$allocator@Uban@Database@@@0@PAUban@Database@@@Z ; std::_Dest_val<std::allocator<Database::ban>,Database::ban>
	add	esp, 8
	jmp	SHORT $LN2@Destroy_ra@5
$LN4@Destroy_ra@5:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Database::ban> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Database::admin> >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	jmp	SHORT $LN3@Destroy_ra@6
$LN2@Destroy_ra@6:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 92					; 0000005cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra@6:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra@6
; Line 97
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@Uadmin@Database@@@std@@Uadmin@Database@@@std@@YAXAAV?$allocator@Uadmin@Database@@@0@PAUadmin@Database@@@Z ; std::_Dest_val<std::allocator<Database::admin>,Database::admin>
	add	esp, 8
	jmp	SHORT $LN2@Destroy_ra@6
$LN4@Destroy_ra@6:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Database::admin> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	jmp	SHORT $LN3@Destroy_ra@7
$LN2@Destroy_ra@7:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra@7:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra@7
; Line 97
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@@Z ; std::_Dest_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
	add	esp, 8
	jmp	SHORT $LN2@Destroy_ra@7
$LN4@Destroy_ra@7:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
; Line 96
	jmp	SHORT $LN3@Destroy_ra@8
$LN2@Destroy_ra@8:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra@8:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra@8
; Line 97
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	jmp	SHORT $LN2@Destroy_ra@8
$LN4@Destroy_ra@8:
; Line 98
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Find@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Find@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z PROC ; std::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
; Line 39
	push	ebp
	mov	ebp, esp
; Line 40
	jmp	SHORT $LN4@Find@2
$LN3@Find@2:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN4@Find@2:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN2@Find@2
; Line 41
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Find@2
; Line 42
	jmp	SHORT $LN2@Find@2
$LN1@Find@2:
; Line 43
	jmp	SHORT $LN3@Find@2
$LN2@Find@2:
	mov	eax, DWORD PTR __First$[ebp]
; Line 44
	pop	ebp
	ret	0
??$_Find@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z ENDP ; std::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
	add	esp, 4
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@@Z
_TEXT	SEGMENT
$T360724 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Database::ban> >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Uban@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUban@Database@@0@Z ; std::_Ptr_cat<Database::ban,Database::ban>
	add	esp, 8
	mov	BYTE PTR $T360724[ebp], al
	movzx	edx, BYTE PTR $T360724[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Database::ban> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Database::ban> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@@Z
_TEXT	SEGMENT
$T360727 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Database::admin> >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Uadmin@Database@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUadmin@Database@@0@Z ; std::_Ptr_cat<Database::admin,Database::admin>
	add	esp, 8
	mov	BYTE PTR $T360727[ebp], al
	movzx	edx, BYTE PTR $T360727[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Database::admin> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Database::admin> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z
_TEXT	SEGMENT
$T360730 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z ; std::_Ptr_cat<Battlefield::struct_Vote,Battlefield::struct_Vote>
	add	esp, 8
	mov	BYTE PTR $T360730[ebp], al
	movzx	edx, BYTE PTR $T360730[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Dest_val@V?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>,std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>, COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR __Pdest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?destroy@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::destroy
; Line 288
	pop	ebp
	ret	0
??$_Dest_val@V?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>,std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
$T360735 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 88
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	BYTE PTR $T360735[ebp], al
	movzx	edx, BYTE PTR $T360735[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::find<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
; Line 71
	push	ebp
	mov	ebp, esp
; Line 74
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	call	??$_Find@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z ; std::_Find<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Rechecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAV10@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Rechecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 75
	pop	ebp
	ret	0
??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::find<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z PROC ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 216
	push	ebp
	mov	ebp, esp
; Line 217
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 218
	pop	ebp
	ret	0
??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ENDP ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv184 = -36						; size = 4
tv183 = -32						; size = 4
_this$ = -28						; size = 4
__Newres$ = -24						; size = 4
__Ptr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; Line 1918
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1919
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 1921
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 1922
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 1924
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+20]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], eax
	ja	SHORT $LN5@Copy
; Line 1926
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 1927
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 1928
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 1931
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1932
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 1933
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1934
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
; Line 1935
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 1936
	mov	edx, DWORD PTR __Newres$[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv184[ebp], eax
	mov	eax, DWORD PTR tv184[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 1938
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1939
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1940
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 1941
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 1943
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 1944
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 1945
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1947
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 1948
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 1949
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXPAUban@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXPAUban@Database@@0@Z PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Destroy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@Uban@Database@@@std@@@std@@YAXPAUban@Database@@0AAV?$allocator@Uban@Database@@@0@@Z ; std::_Destroy_range<std::allocator<Database::ban> >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXPAUban@Database@@0@Z ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXPAUadmin@Database@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXPAUadmin@Database@@0@Z PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@Uadmin@Database@@@std@@@std@@YAXPAUadmin@Database@@0AAV?$allocator@Uadmin@Database@@@0@@Z ; std::_Destroy_range<std::allocator<Database::admin> >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXPAUadmin@Database@@0@Z ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::clear, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 1096
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 1103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
; Line 1104
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 1105
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1107
	jmp	SHORT $LN3@clear@2
$LN2@clear@2:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN4@clear@2
; Line 1109
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 1111
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>,std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
	add	esp, 8
; Line 1112
	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate
; Line 1113
	jmp	SHORT $LN2@clear@2
$LN4@clear@2:
; Line 1114
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::clear
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Destroy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAXPAUstruct_Vote@Battlefield@@0AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z ; std::_Destroy_range<std::allocator<Battlefield::struct_Vote> >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1958
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1959
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 1960
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 1961
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 1962
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 1963
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 1965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 1966
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 1967
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 1968
	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax
$LN8@Grow:
; Line 1969
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ch$ = 16						; size = 1
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; Line 1040
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1041
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@insert
; Line 1042
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@insert:
; Line 1043
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@insert
; Line 1044
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@insert:
; Line 1046
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@insert
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], edx
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@insert
; Line 1049
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1050
	movzx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Line 1051
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@insert:
; Line 1053
	mov	eax, DWORD PTR _this$[ebp]
$LN5@insert:
; Line 1054
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 799
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN4@append
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@append:
; Line 801
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 802
	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN3@append
; Line 803
	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN3@append:
; Line 804
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append
; Line 805
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append:
; Line 807
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], edx
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@append
; Line 810
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 811
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append:
; Line 813
	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:
; Line 814
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXXZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::_Tidy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@9
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXPAUban@Database@@0@Z ; std::vector<Database::ban,std::allocator<Database::ban> >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 144				; 00000090H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Uban@Database@@@std@@QAEXPAUban@Database@@I@Z ; std::allocator<Database::ban>::deallocate
$LN1@Tidy@9:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXXZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXXZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@10
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXPAUadmin@Database@@0@Z ; std::vector<Database::admin,std::allocator<Database::admin> >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 92					; 0000005cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Uadmin@Database@@@std@@QAEXPAUadmin@Database@@I@Z ; std::allocator<Database::admin>::deallocate
$LN1@Tidy@10:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXXZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Tidy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 1496
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::clear
; Line 1498
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T360784 = -8						; size = 4
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::erase, COMDAT
; _this$ = ecx
; Line 1054
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1062
	push	0
	lea	eax, DWORD PTR $T360784[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
	mov	ecx, eax
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1065
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	$LN1@erase@4
; Line 1068
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1070
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx
; Line 1072
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	??$_Dest_val@V?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@std@@YAXAAV?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@0@@Z ; std::_Dest_val<std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>,std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>
	add	esp, 8
; Line 1073
	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate
; Line 1075
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN1@erase@4:
; Line 1077
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1078
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Tidy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@11
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 5
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z ; std::allocator<Battlefield::struct_Vote>::deallocate
$LN1@Tidy@11:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT
; _this$ = ecx
; Line 1269
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1270
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 12					; 0000000cH
; Line 1271
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$160388 = -4					; size = 4
__Newcap$ = 8						; size = 4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1539
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1540
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Newcap$[ebp]
	ja	SHORT $LN3@reserve@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	cmp	eax, DWORD PTR __Newcap$[ebp]
	je	SHORT $LN3@reserve@4
; Line 1542
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR __Size$160388[ebp], edx
; Line 1543
	push	1
	mov	eax, DWORD PTR __Newcap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@reserve@4
; Line 1544
	mov	edx, DWORD PTR __Size$160388[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@reserve@4:
; Line 1546
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@D@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T360795 = -16						; size = 4
$T360794 = -12						; size = 4
$T360793 = -8						; size = 4
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Ch$ = 16						; size = 1
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; Line 1062
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1063
	lea	eax, DWORD PTR $T360794[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T360793[ebp], ecx
	mov	edx, DWORD PTR $T360793[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	?_Pdif@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAIV?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Pdif
	add	esp, 8
	mov	DWORD PTR __Off$[ebp], eax
; Line 1064
	movzx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 1065
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T360795[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::begin
	mov	ecx, eax
	call	??H?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV01@H@Z ; std::_String_iterator<char,std::char_traits<char>,std::allocator<char> >::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1066
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 892
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 893
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 895
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 896
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 897
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 899
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 900
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 901
	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign
; Line 903
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 904
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 907
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 886
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 887
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 888
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Count$ = 8						; size = 4
__Ch$ = 12						; size = 1
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 844
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 845
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@2
; Line 846
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@2:
; Line 849
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append@2
; Line 851
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Chassign
; Line 852
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@2:
; Line 854
	mov	eax, DWORD PTR _this$[ebp]
$LN4@append@2:
; Line 855
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 792
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 793
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 794
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T360806 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
__Al$ = 20						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 571
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T360806[ebp], esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 572
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 573
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 574
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@204
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@204:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 80					; 00000050H
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::ban,std::allocator<Database::ban> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::~_Vector_val<Database::ban,std::allocator<Database::ban> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::ban,std::allocator<Database::ban> >::~_Vector_val<Database::ban,std::allocator<Database::ban> >
__ehhandler$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ PROC ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@IAEXXZ ; std::vector<Database::admin,std::allocator<Database::admin> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::~_Vector_val<Database::admin,std::allocator<Database::admin> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::_Vector_val<Database::admin,std::allocator<Database::admin> >::~_Vector_val<Database::admin,std::allocator<Database::admin> >
__ehhandler$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ENDP ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
; Function compile flags: /Odtp
;	COMDAT ?pop_front@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T360838 = -12						; size = 4
$T360837 = -8						; size = 4
$T360836 = -4						; size = 4
?pop_front@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::pop_front, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 921
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 922
	lea	eax, DWORD PTR $T360837[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T360836[ebp], ecx
	mov	edx, DWORD PTR $T360836[ebp]
	push	edx
	lea	eax, DWORD PTR $T360838[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::erase
; Line 923
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::pop_front
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >, COMDAT
; _this$ = ecx
; Line 769
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 770
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Tidy
; Line 771
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
__ehhandler$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T360854 = -8						; size = 4
$T360852 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
__Count$ = 16						; size = 4
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1847
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T360854[ebp], 0
; Line 1848
	lea	eax, DWORD PTR $T360852[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@IIABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T360854[ebp]
	or	ecx, 1
	mov	DWORD PTR $T360854[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1849
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T360860 = -12						; size = 4
$T360859 = -8						; size = 4
$T360858 = -4						; size = 4
__Ch$ = 8						; size = 1
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back, COMDAT
; _this$ = ecx
; Line 1463
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1464
	lea	eax, DWORD PTR $T360859[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T360858[ebp], ecx
	movzx	edx, BYTE PTR __Ch$[ebp]
	push	edx
	mov	eax, DWORD PTR $T360858[ebp]
	push	eax
	lea	ecx, DWORD PTR $T360860[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$_String_const_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 1465
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ch$ = 8						; size = 1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; Line 787
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 788
	movzx	eax, BYTE PTR __Ch$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 789
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; Line 777
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 778
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 779
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 764
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T360869 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 24					; 00000018H
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T360869[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 544
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 545
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	ecx
	push	0
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 546
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0struct_chat@Battlefield@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0struct_chat@Battlefield@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0struct_chat@Battlefield@@QAE@ABU01@@Z$1
__ehfuncinfo$??0struct_chat@Battlefield@@QAE@ABU01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0struct_chat@Battlefield@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0struct_chat@Battlefield@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0struct_chat@Battlefield@@QAE@ABU01@@Z PROC		; Battlefield::struct_chat::struct_chat, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0struct_chat@Battlefield@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR [eax+1], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0struct_chat@Battlefield@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0struct_chat@Battlefield@@QAE@ABU01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0struct_chat@Battlefield@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0struct_chat@Battlefield@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0struct_chat@Battlefield@@QAE@ABU01@@Z ENDP		; Battlefield::struct_chat::struct_chat
; Function compile flags: /Odtp
;	COMDAT ??1Vote@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Vote@Battlefield@@QAE@XZ PROC			; Battlefield::Vote::~Vote, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::~vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
	mov	esp, ebp
	pop	ebp
	ret	0
??1Vote@Battlefield@@QAE@XZ ENDP			; Battlefield::Vote::~Vote
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1string_cast_error@dlib@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1string_cast_error@dlib@@UAE@XZ PROC			; dlib::string_cast_error::~string_cast_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error@dlib@@UAE@XZ			; dlib::error::~error
	mov	esp, ebp
	pop	ebp
	ret	0
??1string_cast_error@dlib@@UAE@XZ ENDP			; dlib::string_cast_error::~string_cast_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gstring_cast_error@dlib@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gstring_cast_error@dlib@@UAEPAXI@Z PROC		; dlib::string_cast_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1string_cast_error@dlib@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@205
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@205:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gstring_cast_error@dlib@@UAEPAXI@Z ENDP		; dlib::string_cast_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1cast_to_string_error@dlib@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1cast_to_string_error@dlib@@UAE@XZ PROC		; dlib::cast_to_string_error::~cast_to_string_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error@dlib@@UAE@XZ			; dlib::error::~error
	mov	esp, ebp
	pop	ebp
	ret	0
??1cast_to_string_error@dlib@@UAE@XZ ENDP		; dlib::cast_to_string_error::~cast_to_string_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Gcast_to_string_error@dlib@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gcast_to_string_error@dlib@@UAEPAXI@Z PROC		; dlib::cast_to_string_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1cast_to_string_error@dlib@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@206
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@206:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gcast_to_string_error@dlib@@UAEPAXI@Z ENDP		; dlib::cast_to_string_error::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0cast_to_string_error@dlib@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0cast_to_string_error@dlib@@QAE@XZ PROC		; dlib::cast_to_string_error::cast_to_string_error, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\string\string.h
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	29					; 0000001dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error@dlib@@QAE@W4error_type@1@@Z	; dlib::error::error
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7cast_to_string_error@dlib@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0cast_to_string_error@dlib@@QAE@XZ ENDP		; dlib::cast_to_string_error::cast_to_string_error
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0error@dlib@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0error@dlib@@QAE@ABV01@@Z$0
__ehfuncinfo$??0error@dlib@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0error@dlib@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0error@dlib@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0error@dlib@@QAE@ABV01@@Z PROC			; dlib::error::error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0error@dlib@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7error@dlib@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0error@dlib@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0error@dlib@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0error@dlib@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0error@dlib@@QAE@ABV01@@Z ENDP			; dlib::error::error
; Function compile flags: /Odtp
;	COMDAT ??_Gerror@dlib@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror@dlib@@UAEPAXI@Z PROC				; dlib::error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error@dlib@@UAE@XZ			; dlib::error::~error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@207
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@207:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror@dlib@@UAEPAXI@Z ENDP				; dlib::error::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\library\dlib\dlib\error.h
xdata$x	SEGMENT
__unwindtable$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 4
_a$ = 12						; size = 4
??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; dlib::error::error, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error@dlib@@6B@
	mov	ecx, DWORD PTR _a$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; dlib::error::error
; Function compile flags: /Odtp
;	COMDAT ??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
_TEXT	SEGMENT
$T362473 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_str$ = 12						; size = 4
??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z PROC ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File e:\library\dlib\dlib\string\string.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR $T362473[ebp], 0
; Line 56
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T362473[ebp]
	or	ecx, 1
	mov	DWORD PTR $T362473[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 57
	mov	esp, ebp
	pop	ebp
	ret	0
??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ENDP ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0string_cast_error@dlib@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0string_cast_error@dlib@@QAE@ABV01@@Z PROC		; dlib::string_cast_error::string_cast_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error@dlib@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7string_cast_error@dlib@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0string_cast_error@dlib@@QAE@ABV01@@Z ENDP		; dlib::string_cast_error::string_cast_error
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362481 = -24						; size = 4
$T362480 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z PROC ; std::_Construct<Battlefield::struct_chat,Battlefield::struct_chat const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	88					; 00000058H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362481[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362481[ebp], 0
	je	SHORT $LN3@Construct@3
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUstruct_chat@Battlefield@@@std@@YAABUstruct_chat@Battlefield@@ABU12@@Z ; std::forward<Battlefield::struct_chat const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362481[ebp]
	call	??0struct_chat@Battlefield@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@3
$LN3@Construct@3:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@3:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362480[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362481[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z ENDP ; std::_Construct<Battlefield::struct_chat,Battlefield::struct_chat const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T362494 = -24						; size = 4
$T362493 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362494[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362494[ebp], 0
	je	SHORT $LN3@Construct@4
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362494[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@4
$LN3@Construct@4:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@4:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362493[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362494[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z$0
__ehfuncinfo$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362507 = -20						; size = 4
$T362506 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362507[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362507[ebp], 0
	je	SHORT $LN3@construct@14
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362507[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@14
$LN3@construct@14:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@14:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362506[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362507[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Function compile flags: /Odtp
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z
_TEXT	SEGMENT
tv154 = -12						; size = 4
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Off$ = 8						; size = 4
__Right$ = 12						; size = 4
__Roff$ = 16						; size = 4
__Count$ = 20						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 981
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jb	SHORT $LN6@insert@2
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN7@insert@2
$LN6@insert@2:
; Line 983
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN7@insert@2:
; Line 984
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 985
	mov	edx, DWORD PTR __Num$[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@insert@2
; Line 986
	mov	eax, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
$LN5@insert@2:
; Line 987
	mov	ecx, DWORD PTR _this$[ebp]
	or	edx, -1
	sub	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN4@insert@2
; Line 988
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN4@insert@2:
; Line 990
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	$LN3@insert@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	$LN3@insert@2
; Line 993
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 994
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN2@insert@2
; Line 997
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN10@insert@2
	mov	edx, DWORD PTR __Roff$[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv154[ebp], edx
	jmp	SHORT $LN11@insert@2
$LN10@insert@2:
	mov	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR tv154[ebp], eax
$LN11@insert@2:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR tv154[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 998
	jmp	SHORT $LN1@insert@2
$LN2@insert@2:
; Line 1000
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@insert@2:
; Line 1001
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN3@insert@2:
; Line 1003
	mov	eax, DWORD PTR _this$[ebp]
$LN9@insert@2:
; Line 1004
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; Line 1008
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1014
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@insert@3
; Line 1016
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	jmp	$LN6@insert@3
$LN4@insert@3:
; Line 1017
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@insert@3
; Line 1018
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN3@insert@3:
; Line 1019
	mov	eax, DWORD PTR _this$[ebp]
	or	ecx, -1
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@insert@3
; Line 1020
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@insert@3:
; Line 1022
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@insert@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@insert@3
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1026
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1027
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@insert@3:
; Line 1029
	mov	eax, DWORD PTR _this$[ebp]
$LN6@insert@3:
; Line 1030
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@Ustruct_chat@Battlefield@@@std@@QAEXPAUstruct_chat@Battlefield@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_chat@Battlefield@@@std@@QAEXPAUstruct_chat@Battlefield@@ABU34@@Z PROC ; std::allocator<Battlefield::struct_chat>::construct, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Ustruct_chat@Battlefield@@ABU12@@std@@YAXPAUstruct_chat@Battlefield@@ABU12@@Z ; std::_Construct<Battlefield::struct_chat,Battlefield::struct_chat const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Ustruct_chat@Battlefield@@@std@@QAEXPAUstruct_chat@Battlefield@@ABU34@@Z ENDP ; std::allocator<Battlefield::struct_chat>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1033
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1035
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Line 1036
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0cast_to_string_error@dlib@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0cast_to_string_error@dlib@@QAE@ABV01@@Z PROC		; dlib::cast_to_string_error::cast_to_string_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error@dlib@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7cast_to_string_error@dlib@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0cast_to_string_error@dlib@@QAE@ABV01@@Z ENDP		; dlib::cast_to_string_error::cast_to_string_error
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_chat@Battlefield@@@std@@Ustruct_chat@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chat@Battlefield@@@0@PAUstruct_chat@Battlefield@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_chat@Battlefield@@@std@@Ustruct_chat@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chat@Battlefield@@@0@PAUstruct_chat@Battlefield@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Battlefield::struct_chat>,Battlefield::struct_chat,Battlefield::struct_chat const &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUstruct_chat@Battlefield@@@std@@YAABUstruct_chat@Battlefield@@ABU12@@Z ; std::forward<Battlefield::struct_chat const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_chat@Battlefield@@@std@@QAEXPAUstruct_chat@Battlefield@@ABU34@@Z ; std::allocator<Battlefield::struct_chat>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_chat@Battlefield@@@std@@Ustruct_chat@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chat@Battlefield@@@0@PAUstruct_chat@Battlefield@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Battlefield::struct_chat>,Battlefield::struct_chat,Battlefield::struct_chat const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@AAV21@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z$0
__tryblocktable$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z$2
__ehfuncinfo$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z PROC ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Buynode, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 508
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 510
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 511
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 512
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Prev$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 513
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAUstruct_chat@Battlefield@@PAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@Ustruct_chat@Battlefield@@@std@@YAPAUstruct_chat@Battlefield@@AAU12@@Z ; std::addressof<Battlefield::struct_chat>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 9
	push	ecx
	call	??$_Cons_val@V?$allocator@Ustruct_chat@Battlefield@@@std@@Ustruct_chat@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_chat@Battlefield@@@0@PAUstruct_chat@Battlefield@@ABU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_chat>,Battlefield::struct_chat,Battlefield::struct_chat const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@Buynode@5
__catch$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z$0:
; Line 515
	push	1
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@I@Z ; std::allocator<std::_List_nod<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Node>::deallocate
; Line 516
	push	0
	push	0
	call	__CxxThrowException@8
; Line 517
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z$1
	ret	0
$LN4@Buynode@5:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z$1:
; Line 519
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode@5:
; Line 520
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z ENDP ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 916
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@3
; Line 917
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@assign@3
$LN2@assign@3:
; Line 919
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign@3
; Line 921
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 922
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign@3:
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
$LN3@assign@3:
; Line 925
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Num$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; Line 817
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 823
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@append@3
; Line 824
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	SHORT $LN5@append@3
$LN3@append@3:
; Line 825
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	sub	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN2@append@3
; Line 826
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@append@3:
; Line 829
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
	push	0
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@append@3
; Line 831
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+16]
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 832
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@3:
; Line 834
	mov	eax, DWORD PTR _this$[ebp]
$LN5@append@3:
; Line 835
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Insert@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@ABUstruct_chat@Battlefield@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 4
__Val$ = 12						; size = 4
?_Insert@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@ABUstruct_chat@Battlefield@@@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 967
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 973
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >,std::_Iterator_base0>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 975
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@0ABUstruct_chat@Battlefield@@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax
; Line 976
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXI@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Incsize
; Line 977
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 978
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@SAAAPAU_Node@?$_List_nod@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@2@PAU342@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 979
	mov	esp, ebp
	pop	ebp
	ret	8
?_Insert@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@ABUstruct_chat@Battlefield@@@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Tidy@12
; Line 1304
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 1305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 1307
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
$LN1@Tidy@12:
; Line 1309
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1312
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Ch$ = 12						; size = 1
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1526
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1527
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	ja	SHORT $LN2@resize@3
; Line 1528
	mov	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	edx
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Line 1529
	jmp	SHORT $LN3@resize@3
$LN2@resize@3:
; Line 1530
	movzx	ecx, BYTE PTR __Ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newsize$[ebp]
	sub	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN3@resize@3:
; Line 1531
	mov	esp, ebp
	pop	ebp
	ret	8
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 928
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 930
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 931
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T362568 = -2						; size = 1
$T362567 = -1						; size = 1
__Right$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN6@assign@4
; Line 716
	jmp	$LN5@assign@4
$LN6@assign@4:
; Line 717
	lea	ecx, DWORD PTR $T362567[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T362568[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
	push	eax
	call	??$?9DD@std@@YA_NABV?$allocator@D@0@0@Z	; std::operator!=<char,char>
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@assign@4
	mov	ecx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [ecx+20], 16			; 00000010H
	jb	SHORT $LN4@assign@4
; Line 718
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 719
	jmp	SHORT $LN5@assign@4
$LN4@assign@4:
; Line 721
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 722
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+20], 16			; 00000010H
	jae	SHORT $LN2@assign@4
; Line 724
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 725
	jmp	SHORT $LN1@assign@4
$LN2@assign@4:
; Line 727
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 728
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
$LN1@assign@4:
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
; Line 731
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 733
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
$LN5@assign@4:
; Line 735
	mov	eax, DWORD PTR _this$[ebp]
; Line 736
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T362571 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 578
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T362571[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 579
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 580
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 581
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXABUstruct_chat@Battlefield@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T362582 = -8						; size = 4
$T362581 = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXABUstruct_chat@Battlefield@@@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::push_back, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 926
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 927
	lea	eax, DWORD PTR $T362582[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T362581[ebp], ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR $T362581[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@ABUstruct_chat@Battlefield@@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert
; Line 928
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXABUstruct_chat@Battlefield@@@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::push_back
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 705
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 1521
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1522
	push	0
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXID@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; Line 1523
	mov	esp, ebp
	pop	ebp
	ret	4
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 767
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 768
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 769
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; Line 708
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 709
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 710
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T362600 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	mov	ecx, esp
	mov	DWORD PTR $T362600[ebp], esp
	push	eax
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 703
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 704
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T362610 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T362610[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 593
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 594
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 595
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z ; Battlefield::game::addChatMessage
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\battlefield3.cpp
xdata$x	SEGMENT
__unwindtable$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z$0
__ehfuncinfo$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_chat$ = 8						; size = 88
?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z PROC ; Battlefield::game::addChatMessage, COMDAT
; _this$ = ecx
; Line 370
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 371
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	?size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::size
	cmp	eax, 15					; 0000000fH
	jbe	SHORT $LN1@addChatMes
; Line 372
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	?pop_front@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::pop_front
$LN1@addChatMes:
; Line 374
	lea	eax, DWORD PTR _chat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	?push_back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXABUstruct_chat@Battlefield@@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::push_back
; Line 375
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _chat$[ebp]
	call	??1struct_chat@Battlefield@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	88					; 00000058H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z$0:
	lea	ecx, DWORD PTR _chat$[ebp]
	jmp	??1struct_chat@Battlefield@@QAE@XZ
__ehhandler$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z ENDP ; Battlefield::game::addChatMessage
; Function compile flags: /Odtp
;	COMDAT ??_GSQLite@Database@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSQLite@Database@@QAEPAXI@Z PROC			; Database::SQLite::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SQLite@Database@@QAE@XZ		; Database::SQLite::~SQLite
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@225
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@225:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSQLite@Database@@QAEPAXI@Z ENDP			; Database::SQLite::`scalar deleting destructor'
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 369
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 372
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 374
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 375
	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN6@Uninit_cop:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Uninit_cop
; Line 376
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 378
	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop
; Line 379
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:
; Line 380
	push	0
	push	0
	call	__CxxThrowException@8
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 382
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:
; Line 383
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z$0
__tryblocktable$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T364616 = -28						; size = 4
__Before$169207 = -24					; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >, COMDAT
; _this$ = ecx
; Line 1034
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1038
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 1040
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1041
	jmp	SHORT $LN6@Insert@8
$LN5@Insert@8:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
$LN6@Insert@8:
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Insert@8
; Line 1042
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBEABUstruct_chat@Battlefield@@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator*
	push	eax
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@ABUstruct_chat@Battlefield@@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert
	jmp	SHORT $LN5@Insert@8
$LN4@Insert@8:
	jmp	SHORT $LN10@Insert@8
__catch$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z$0:
; Line 1044
	jmp	SHORT $LN3@Insert@8
$LN2@Insert@8:
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator++
$LN3@Insert@8:
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Insert@8
; Line 1046
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Before$169207[ebp], eax
; Line 1047
	lea	ecx, DWORD PTR __Before$169207[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > >::operator--
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T364616[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::erase
; Line 1048
	jmp	SHORT $LN2@Insert@8
$LN1@Insert@8:
; Line 1049
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1050
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Insert@8
	ret	0
$LN10@Insert@8:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Insert@8:
; Line 1051
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2524
	push	ebp
	mov	ebp, esp
; Line 2525
	jmp	SHORT $LN3@Move@9
$LN2@Move@9:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Move@9:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Move@9
; Line 2526
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	jmp	SHORT $LN2@Move@9
$LN1@Move@9:
; Line 2527
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2528
	pop	ebp
	ret	0
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
$T364634 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 414
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Ptr_cat<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 8
	mov	BYTE PTR $T364634[ebp], al
	movzx	edx, BYTE PTR $T364634[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 20					; 00000014H
; Line 415
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Remove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
__Next$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Remove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z PROC ; std::_Remove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
; Line 1812
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1813
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 1814
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], ecx
	jmp	SHORT $LN4@Remove
$LN3@Remove:
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN4@Remove:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN2@Remove
; Line 1815
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Remove
; Line 1816
	mov	ecx, DWORD PTR __Next$[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN1@Remove:
; Line 1817
	jmp	SHORT $LN3@Remove
$LN2@Remove:
	mov	eax, DWORD PTR __Next$[ebp]
; Line 1818
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Remove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z ENDP ; std::_Remove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z$0
__ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T364640 = -20						; size = 4
$T364639 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T364640[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T364640[ebp], 0
	je	SHORT $LN3@construct@25
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T364640[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@25
$LN3@construct@25:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@25:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T364639[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T364640[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Function compile flags: /Odtp
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
; Line 838
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 840
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 841
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx
; Line 782
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 783
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; Line 784
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T364657 = -2						; size = 1
$T364656 = -1						; size = 1
__Where$ = 8						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
??$insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
; Line 1002
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1004
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T364657[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR $T364656[ebp], dl
	movzx	eax, BYTE PTR $T364656[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00Uforward_iterator_tag@1@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
; Line 1005
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z
_TEXT	SEGMENT
$T364660 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z PROC ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2545
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2547
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	BYTE PTR $T364660[ebp], al
	movzx	edx, BYTE PTR $T364660[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 16					; 00000010H
; Line 2548
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ENDP ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z PROC ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@$$QAV32@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ENDP ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
; Line 1319
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$remove@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
$T364667 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
??$remove@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::remove<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\algorithm
; Line 1823
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1824
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T364667[ebp]
	push	eax
	call	??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::find<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __First$[ebp], ecx
; Line 1825
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@remove
; Line 1826
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@remove
; Line 1827
	jmp	SHORT $LN3@remove
$LN2@remove:
; Line 1829
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unchecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	call	??$_Remove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@0ABV10@@Z ; std::_Remove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Rechecked@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YAAAV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@AAV10@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Rechecked<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 8
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@remove:
; Line 1830
	mov	esp, ebp
	pop	ebp
	ret	0
??$remove@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::remove<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
_TEXT	SEGMENT
$T364673 = -48						; size = 4
__Ans$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 22
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T364673[ebp], 0
; Line 23
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 24
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	esi, eax
	push	esi
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Line 25
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 26
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 27
	lea	edx, DWORD PTR __Ans$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T364673[ebp]
	or	eax, 1
	mov	DWORD PTR $T364673[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 28
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\library\dlib\dlib\string\string.h
xdata$x	SEGMENT
__unwindtable$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z$0
__ehfuncinfo$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
_TEXT	SEGMENT
$T364686 = -52						; size = 4
_i$166556 = -48						; size = 4
_temp$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str$ = 12						; size = 4
??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z PROC ; dlib::toupper<std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 88
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T364686[ebp], 0
; Line 89
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 91
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; Line 93
	mov	DWORD PTR _i$166556[ebp], 0
	jmp	SHORT $LN3@toupper
$LN2@toupper:
	mov	eax, DWORD PTR _i$166556[ebp]
	add	eax, 1
	mov	DWORD PTR _i$166556[ebp], eax
$LN3@toupper:
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	DWORD PTR _i$166556[ebp], eax
	jae	SHORT $LN1@toupper
; Line 94
	mov	ecx, DWORD PTR _i$166556[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	edx, BYTE PTR [eax]
	push	edx
	call	DWORD PTR __imp__toupper
	add	esp, 4
	mov	ebx, eax
	mov	eax, DWORD PTR _i$166556[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	mov	BYTE PTR [eax], bl
	jmp	SHORT $LN2@toupper
$LN1@toupper:
; Line 96
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T364686[ebp]
	or	edx, 1
	mov	DWORD PTR $T364686[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 97
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z$0:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ENDP ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z$0
__ehfuncinfo$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
_TEXT	SEGMENT
$T364699 = -52						; size = 4
_i$166413 = -48						; size = 4
_temp$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str$ = 12						; size = 4
??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z PROC ; dlib::tolower<std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 68
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T364699[ebp], 0
; Line 69
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 71
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
; Line 73
	mov	DWORD PTR _i$166413[ebp], 0
	jmp	SHORT $LN3@tolower
$LN2@tolower:
	mov	eax, DWORD PTR _i$166413[ebp]
	add	eax, 1
	mov	DWORD PTR _i$166413[ebp], eax
$LN3@tolower:
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	DWORD PTR _i$166413[ebp], eax
	jae	SHORT $LN1@tolower
; Line 74
	mov	ecx, DWORD PTR _i$166413[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	edx, BYTE PTR [eax]
	push	edx
	call	DWORD PTR __imp__tolower
	add	esp, 4
	mov	ebx, eax
	mov	eax, DWORD PTR _i$166413[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	mov	BYTE PTR [eax], bl
	jmp	SHORT $LN2@tolower
$LN1@tolower:
; Line 76
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T364699[ebp]
	or	edx, 1
	mov	DWORD PTR $T364699[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 77
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z$0:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ENDP ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z
_TEXT	SEGMENT
$T364710 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\string
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR $T364710[ebp], 0
; Line 103
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364710[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364710[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 104
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z
_TEXT	SEGMENT
$T364715 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR $T364715[ebp], 0
; Line 147
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364715[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364715[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 148
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
_TEXT	SEGMENT
$T364722 = -48						; size = 4
__Ans$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T364722[ebp], 0
; Line 37
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 38
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	esi, eax
	push	esi
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Line 39
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 40
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 41
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364722[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364722[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 42
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0
__ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T364735 = -48						; size = 4
__Ans$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T364735[ebp], 0
; Line 65
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 66
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, eax
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	add	esi, eax
	push	esi
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
; Line 67
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 68
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 69
	lea	eax, DWORD PTR __Ans$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364735[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364735[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 70
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z$0:
	lea	ecx, DWORD PTR __Ans$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z
_TEXT	SEGMENT
$T364746 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 126
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR $T364746[ebp], 0
; Line 127
	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@IPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	push	eax
	call	??$move@AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364746[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364746[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 128
	mov	esp, ebp
	pop	ebp
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\sstream
xdata$x	SEGMENT
__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3
__ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -112						; size = 4
_this$ = -108						; size = 4
$T364755 = -104						; size = 4
__Nul$162296 = -100					; size = 28
__Str$162294 = -72					; size = 28
__Str$162291 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T364755[ebp], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	and	ecx, 2
	jne	$LN4@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	$LN4@str
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], eax
	jae	SHORT $LN7@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@str
$LN7@str:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@str:
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	lea	ecx, DWORD PTR __Str$162291[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 98
	lea	eax, DWORD PTR __Str$162291[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364755[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364755[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$162291[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@str
	jmp	$LN5@str
$LN4@str:
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	and	eax, 4
	jne	SHORT $LN2@str
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	test	eax, eax
	je	SHORT $LN2@str
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	push	eax
	lea	ecx, DWORD PTR __Str$162294[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 103
	lea	ecx, DWORD PTR __Str$162294[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T364755[ebp]
	or	edx, 1
	mov	DWORD PTR $T364755[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Str$162294[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@str
; Line 105
	jmp	SHORT $LN5@str
$LN2@str:
; Line 107
	lea	ecx, DWORD PTR __Nul$162296[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 108
	lea	eax, DWORD PTR __Nul$162296[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T364755[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364755[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Nul$162296[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0:
	lea	ecx, DWORD PTR __Str$162291[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2:
	lea	ecx, DWORD PTR __Str$162294[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3:
	lea	ecx, DWORD PTR __Nul$162296[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-108]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
; Function compile flags: /Odtp
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T364768 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T364768[ebp], 0
; Line 593
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T364768[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364768[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 594
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z$3
__ehfuncinfo$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T364776 = -36						; size = 4
$T364775 = -32						; size = 4
$T364774 = -28						; size = 4
$T364773 = -24						; size = 4
$T364772 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z PROC ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >, COMDAT
; _this$ = ecx
; Line 635
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 9
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T364772[ebp], esp
	push	eax
	call	??0?$allocator@Ustruct_chat@Battlefield@@@std@@QAE@ABV01@@Z ; std::allocator<Battlefield::struct_chat>::allocator<Battlefield::struct_chat>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_chat@Battlefield@@@1@@Z ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 636
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 637
	lea	ecx, DWORD PTR $T364776[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T364775[ebp], edx
	lea	eax, DWORD PTR $T364773[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::end
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T364774[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@2@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::begin
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR $T364775[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@V?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@std@@@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXV?$_List_const_iterator@V?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@@1@00@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::insert<std::_List_const_iterator<std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> > > >
	jmp	SHORT $LN4@list
__catch$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 639
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEXXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::_Tidy
; Line 640
	push	0
	push	0
	call	__CxxThrowException@8
; Line 641
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN2@list
	ret	0
$LN4@list:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN2@list:
; Line 642
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN3@list:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~_List_val<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
__ehhandler$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T364793 = -16						; size = 4
__Ptr$159752 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
; Line 1192
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
; Line 1194
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@17
; Line 1207
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00@Z ; std::_Move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$159752[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$159752[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 1211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$159752[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@erase@17:
; Line 1213
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T364793[ebp], eax
	mov	ecx, DWORD PTR $T364793[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$3
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv69 = -36						; size = 4
_this$ = -32						; size = 4
$T364798 = -28						; size = 4
$T364797 = -24						; size = 4
$T364796 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 535
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T364796[ebp], esp
	push	eax
	call	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 536
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Buy
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@vector@3
; Line 537
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 539
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR $T364797[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T364798[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@1@0PAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > > >
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	SHORT $LN5@vector@3
__catch$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$0:
; Line 541
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Line 542
	push	0
	push	0
	call	__CxxThrowException@8
; Line 543
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN3@vector@3
	ret	0
$LN5@vector@3:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector@3:
; Line 544
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@3:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?getChatlist@game@Battlefield@@QAE?AV?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@XZ ; Battlefield::game::getChatlist
; Function compile flags: /Odtp
;	COMDAT ?getChatlist@game@Battlefield@@QAE?AV?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T364816 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?getChatlist@game@Battlefield@@QAE?AV?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@XZ PROC ; Battlefield::game::getChatlist, COMDAT
; _this$ = ecx
; File c:\work\daspirum\source\src\battlefield3.cpp
; Line 1247
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T364816[ebp], 0
; Line 1248
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21452				; 000053ccH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@ABV01@@Z ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
	mov	ecx, DWORD PTR $T364816[ebp]
	or	ecx, 1
	mov	DWORD PTR $T364816[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1249
	mov	esp, ebp
	pop	ebp
	ret	4
?getChatlist@game@Battlefield@@QAE?AV?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@XZ ENDP ; Battlefield::game::getChatlist
_TEXT	ENDS
PUBLIC	?connect@game@Battlefield@@QAE_NXZ		; Battlefield::game::connect
; Function compile flags: /Odtp
;	COMDAT ?connect@game@Battlefield@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?connect@game@Battlefield@@QAE_NXZ PROC			; Battlefield::game::connect, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	movzx	edx, WORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_connect@bf3_socket@@IAEXPBDI@Z	; bf3_socket::_connect
; Line 40
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+21464], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??B?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBE_NXZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator bool
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@connect
; Line 43
	xor	al, al
	jmp	SHORT $LN2@connect
$LN1@connect:
; Line 45
	mov	al, 1
$LN2@connect:
; Line 46
	mov	esp, ebp
	pop	ebp
	ret	0
?connect@game@Battlefield@@QAE_NXZ ENDP			; Battlefield::game::connect
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\library\dlib\dlib\string\string.h
xdata$x	SEGMENT
__unwindtable$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv129 = -92						; size = 4
tv131 = -88						; size = 4
tv95 = -84						; size = 4
tv69 = -80						; size = 4
_this$ = -76						; size = 4
$T152848 = -72						; size = 28
$T152847 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; dlib::string_cast_error::string_cast_error, COMDAT
; _this$ = ecx
; Line 280
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	OFFSET ??_C@_0CG@BENFANJG@string?5cast?5error?3?5invalid?5strin@
	lea	ecx, DWORD PTR $T152847[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv95[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??_C@_01GEODFPGF@?8?$AA@
	mov	eax, DWORD PTR tv95[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152848[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv131[ebp], eax
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv129[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv129[ebp]
	push	eax
	push	30					; 0000001eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error@dlib@@QAE@W4error_type@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::error::error
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T152848[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152847[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7string_cast_error@dlib@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T152847[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T152848[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; dlib::string_cast_error::string_cast_error
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@9
$LN5@Uninit_mov@9:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@9:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@9
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@9
$LN4@Uninit_mov@9:
	jmp	SHORT $LN10@Uninit_mov@9
__catch$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@9
$LN2@Uninit_mov@9:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@9:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@9
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::_Dest_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@9
$LN1@Uninit_mov@9:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@9:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@9:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
$T366487 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	mov	BYTE PTR $T366487[ebp], al
	movzx	edx, BYTE PTR $T366487[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@@Z ; std::_Val_type<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V12@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\library\dlib\dlib\string\string.h
xdata$x	SEGMENT
__unwindtable$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv181 = -348						; size = 4
tv183 = -344						; size = 4
tv179 = -340						; size = 4
tv65 = -336						; size = 4
$T366491 = -332						; size = 4
_temp$ = -328						; size = 4
_sin$ = -324						; size = 160
$T169096 = -160						; size = 28
$T169098 = -132						; size = 44
$T169091 = -88						; size = 28
$T169093 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; dlib::string_cast_helper<unsigned int>::cast<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	1
	push	1
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sin$[ebp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, 2
	jbe	SHORT $LN4@cast@5
	push	0
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	esi, BYTE PTR [eax]
	push	48					; 00000030H
	push	48					; 00000030H
	call	??$_dTcast@D@@YADD_W@Z			; _dTcast<char>
	add	esp, 8
	movsx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN4@cast@5
	push	1
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	esi, BYTE PTR [eax]
	push	120					; 00000078H
	push	120					; 00000078H
	call	??$_dTcast@D@@YADD_W@Z			; _dTcast<char>
	add	esp, 8
	movsx	edx, al
	cmp	esi, edx
	jne	SHORT $LN4@cast@5
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	push	OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
	lea	ecx, DWORD PTR _sin$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
	jmp	SHORT $LN3@cast@5
$LN4@cast@5:
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sin$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAI@Z
$LN3@cast@5:
	mov	edx, DWORD PTR _sin$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR _sin$[ebp+eax]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@cast@5
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	lea	eax, DWORD PTR $T169091[ebp]
	push	eax
	call	??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv179[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv179[ebp]
	push	edx
	lea	ecx, DWORD PTR $T169093[ebp]
	call	??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_error::string_cast_error
	push	OFFSET __TI3?AVstring_cast_error@dlib@@
	lea	eax, DWORD PTR $T169093[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T169091[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN2@cast@5:
	lea	ecx, DWORD PTR _sin$[ebp]
	call	DWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	mov	esi, eax
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	cmp	esi, eax
	je	SHORT $LN1@cast@5
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T169096[ebp]
	push	edx
	call	??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv181[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T169098[ebp]
	call	??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_error::string_cast_error
	push	OFFSET __TI3?AVstring_cast_error@dlib@@
	lea	edx, DWORD PTR $T169098[ebp]
	push	edx
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T169096[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@cast@5:
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T366491[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sin$[ebp]
	call	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T366491[ebp]
$LN6@cast@5:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sin$[ebp]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T169091[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T169096[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; dlib::string_cast_helper<unsigned int>::cast<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv181 = -348						; size = 4
tv183 = -344						; size = 4
tv179 = -340						; size = 4
tv65 = -336						; size = 4
$T366504 = -330						; size = 2
_temp$ = -328						; size = 2
_sin$ = -324						; size = 160
$T169065 = -160						; size = 28
$T169067 = -132						; size = 44
$T169056 = -88						; size = 28
$T169062 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_str$ = 8						; size = 4
??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; dlib::string_cast_helper<unsigned short>::cast<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 363
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	1
	push	1
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sin$[ebp]
	call	??0?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@H@Z ; std::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >::basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, 2
	jbe	SHORT $LN4@cast@6
	push	0
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	esi, BYTE PTR [eax]
	push	48					; 00000030H
	push	48					; 00000030H
	call	??$_dTcast@D@@YADD_W@Z			; _dTcast<char>
	add	esp, 8
	movsx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN4@cast@6
	push	1
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	esi, BYTE PTR [eax]
	push	120					; 00000078H
	push	120					; 00000078H
	call	??$_dTcast@D@@YADD_W@Z			; _dTcast<char>
	add	esp, 8
	movsx	edx, al
	cmp	esi, edx
	jne	SHORT $LN4@cast@6
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	push	OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
	lea	ecx, DWORD PTR _sin$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAG@Z
	jmp	SHORT $LN3@cast@6
$LN4@cast@6:
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sin$[ebp]
	call	DWORD PTR __imp_??5?$basic_istream@DU?$char_traits@D@std@@@std@@QAEAAV01@AAG@Z
$LN3@cast@6:
	mov	edx, DWORD PTR _sin$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR _sin$[ebp+eax]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@cast@6
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	lea	eax, DWORD PTR $T169056[ebp]
	push	eax
	call	??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv179[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv179[ebp]
	push	edx
	lea	ecx, DWORD PTR $T169062[ebp]
	call	??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_error::string_cast_error
	push	OFFSET __TI3?AVstring_cast_error@dlib@@
	lea	eax, DWORD PTR $T169062[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T169056[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN2@cast@6:
	lea	ecx, DWORD PTR _sin$[ebp]
	call	DWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ
	mov	esi, eax
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	cmp	esi, eax
	je	SHORT $LN1@cast@6
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T169065[ebp]
	push	edx
	call	??$narrow@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::narrow<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv181[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T169067[ebp]
	call	??0string_cast_error@dlib@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_error::string_cast_error
	push	OFFSET __TI3?AVstring_cast_error@dlib@@
	lea	edx, DWORD PTR $T169067[ebp]
	push	edx
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T169065[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@cast@6:
	mov	ax, WORD PTR _temp$[ebp]
	mov	WORD PTR $T366504[ebp], ax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sin$[ebp]
	call	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	ax, WORD PTR $T366504[ebp]
$LN6@cast@6:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sin$[ebp]
	jmp	??_D?$basic_istringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T169056[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T169065[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; dlib::string_cast_helper<unsigned short>::cast<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV12@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PAV10@00AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\library\dlib\dlib\string\string.h
xdata$x	SEGMENT
__unwindtable$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z$0
__ehfuncinfo$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z
_TEXT	SEGMENT
$T366521 = -216						; size = 4
_sout$ = -212						; size = 152
$T166598 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_item$ = 12						; size = 4
??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z PROC ; dlib::cast_to_string<unsigned char>, COMDAT
; Line 236
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T366521[ebp], 0
; Line 237
	push	1
	push	2
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 238
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _sout$[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@E@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 239
	mov	eax, DWORD PTR _sout$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	lea	ecx, DWORD PTR _sout$[ebp+ecx]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@cast_to_st@4
; Line 240
	lea	ecx, DWORD PTR $T166598[ebp]
	call	??0cast_to_string_error@dlib@@QAE@XZ	; dlib::cast_to_string_error::cast_to_string_error
	push	OFFSET __TI3?AVcast_to_string_error@dlib@@
	lea	eax, DWORD PTR $T166598[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@cast_to_st@4:
; Line 241
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sout$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	edx, DWORD PTR $T366521[ebp]
	or	edx, 1
	mov	DWORD PTR $T366521[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@cast_to_st@4:
; Line 242
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z$0:
	lea	ecx, DWORD PTR _sout$[ebp]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z$1:
	mov	eax, DWORD PTR $T366521[ebp]
	and	eax, 1
	je	$LN6@cast_to_st@4
	and	DWORD PTR $T366521[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@cast_to_st@4:
	ret	0
__ehhandler$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z ENDP ; dlib::cast_to_string<unsigned char>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z$0
__ehfuncinfo$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z
_TEXT	SEGMENT
$T366534 = -216						; size = 4
_sout$ = -212						; size = 152
$T166566 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_item$ = 12						; size = 4
??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z PROC ; dlib::cast_to_string<int>, COMDAT
; Line 236
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T366534[ebp], 0
; Line 237
	push	1
	push	2
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 238
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _sout$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
; Line 239
	mov	edx, DWORD PTR _sout$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR _sout$[ebp+eax]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@cast_to_st@5
; Line 240
	lea	ecx, DWORD PTR $T166566[ebp]
	call	??0cast_to_string_error@dlib@@QAE@XZ	; dlib::cast_to_string_error::cast_to_string_error
	push	OFFSET __TI3?AVcast_to_string_error@dlib@@
	lea	edx, DWORD PTR $T166566[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@cast_to_st@5:
; Line 241
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sout$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T366534[ebp]
	or	ecx, 1
	mov	DWORD PTR $T366534[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@cast_to_st@5:
; Line 242
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z$0:
	lea	ecx, DWORD PTR _sout$[ebp]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z$1:
	mov	eax, DWORD PTR $T366534[ebp]
	and	eax, 1
	je	$LN6@cast_to_st@5
	and	DWORD PTR $T366534[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@cast_to_st@5:
	ret	0
__ehhandler$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ENDP ; dlib::cast_to_string<int>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z$0
__ehfuncinfo$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z
_TEXT	SEGMENT
$T366547 = -216						; size = 4
_sout$ = -212						; size = 152
$T166545 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_item$ = 12						; size = 4
??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z PROC ; dlib::cast_to_string<double>, COMDAT
; Line 236
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T366547[ebp], 0
; Line 237
	push	1
	push	2
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 238
	mov	eax, DWORD PTR _item$[ebp]
	sub	esp, 8
	fld	QWORD PTR [eax]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _sout$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@N@Z
; Line 239
	mov	ecx, DWORD PTR _sout$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	ecx, DWORD PTR _sout$[ebp+edx]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@cast_to_st@6
; Line 240
	lea	ecx, DWORD PTR $T166545[ebp]
	call	??0cast_to_string_error@dlib@@QAE@XZ	; dlib::cast_to_string_error::cast_to_string_error
	push	OFFSET __TI3?AVcast_to_string_error@dlib@@
	lea	ecx, DWORD PTR $T166545[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@cast_to_st@6:
; Line 241
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	lea	ecx, DWORD PTR _sout$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	eax, DWORD PTR $T366547[ebp]
	or	eax, 1
	mov	DWORD PTR $T366547[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@cast_to_st@6:
; Line 242
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z$0:
	lea	ecx, DWORD PTR _sout$[ebp]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z$1:
	mov	eax, DWORD PTR $T366547[ebp]
	and	eax, 1
	je	$LN6@cast_to_st@6
	and	DWORD PTR $T366547[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@cast_to_st@6:
	ret	0
__ehhandler$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z ENDP ; dlib::cast_to_string<double>
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z$0
__ehfuncinfo$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
_TEXT	SEGMENT
$T366560 = -216						; size = 4
_sout$ = -212						; size = 152
$T166538 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_item$ = 12						; size = 4
??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z PROC ; dlib::cast_to_string<unsigned int>, COMDAT
; Line 236
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T366560[ebp], 0
; Line 237
	push	1
	push	2
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 238
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _sout$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
; Line 239
	mov	edx, DWORD PTR _sout$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR _sout$[ebp+eax]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@cast_to_st@7
; Line 240
	lea	ecx, DWORD PTR $T166538[ebp]
	call	??0cast_to_string_error@dlib@@QAE@XZ	; dlib::cast_to_string_error::cast_to_string_error
	push	OFFSET __TI3?AVcast_to_string_error@dlib@@
	lea	edx, DWORD PTR $T166538[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@cast_to_st@7:
; Line 241
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sout$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T366560[ebp]
	or	ecx, 1
	mov	DWORD PTR $T366560[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@cast_to_st@7:
; Line 242
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z$0:
	lea	ecx, DWORD PTR _sout$[ebp]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z$1:
	mov	eax, DWORD PTR $T366560[ebp]
	and	eax, 1
	je	$LN6@cast_to_st@7
	and	DWORD PTR $T366560[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@cast_to_st@7:
	ret	0
__ehhandler$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ENDP ; dlib::cast_to_string<unsigned int>
; Function compile flags: /Odtp
;	COMDAT ??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 380
	push	ebp
	mov	ebp, esp
; Line 382
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@I@dlib@@SAIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_helper<unsigned int>::cast<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
; Line 383
	pop	ebp
	ret	0
??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_str$ = 8						; size = 4
??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 380
	push	ebp
	mov	ebp, esp
; Line 382
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	??$cast@DU?$char_traits@D@std@@V?$allocator@D@2@@?$string_cast_helper@G@dlib@@SAGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast_helper<unsigned short>::cast<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
; Line 383
	pop	ebp
	ret	0
??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z$0
__ehfuncinfo$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z
_TEXT	SEGMENT
$T366577 = -216						; size = 4
_sout$ = -212						; size = 152
$T166399 = -60						; size = 44
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_item$ = 12						; size = 4
??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z PROC ; dlib::cast_to_string<unsigned short>, COMDAT
; Line 236
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T366577[ebp], 0
; Line 237
	push	1
	push	2
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 238
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _sout$[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
; Line 239
	mov	edx, DWORD PTR _sout$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR _sout$[ebp+eax]
	call	DWORD PTR __imp_??7ios_base@std@@QBE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@cast_to_st@8
; Line 240
	lea	ecx, DWORD PTR $T166399[ebp]
	call	??0cast_to_string_error@dlib@@QAE@XZ	; dlib::cast_to_string_error::cast_to_string_error
	push	OFFSET __TI3?AVcast_to_string_error@dlib@@
	lea	edx, DWORD PTR $T166399[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@cast_to_st@8:
; Line 241
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sout$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T366577[ebp]
	or	ecx, 1
	mov	DWORD PTR $T366577[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sout$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@cast_to_st@8:
; Line 242
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z$0:
	lea	ecx, DWORD PTR _sout$[ebp]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z$1:
	mov	eax, DWORD PTR $T366577[ebp]
	and	eax, 1
	je	$LN6@cast_to_st@8
	and	DWORD PTR $T366577[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@cast_to_st@8:
	ret	0
__ehhandler$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ENDP ; dlib::cast_to_string<unsigned short>
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$163408 = -24					; size = 4
__Ptr$163401 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@13
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
	jmp	$LN7@reserve@13
$LN5@reserve@13:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@13
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate
	mov	DWORD PTR __Ptr$163401[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$163401[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PAV21@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *>
	jmp	SHORT $LN8@reserve@13
__catch$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$163401[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@13:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	DWORD PTR __Size$163408[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@13
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@I@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
$LN1@reserve@13:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Ptr$163401[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 770
	mov	eax, DWORD PTR __Size$163408[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Ptr$163401[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 771
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$163401[ebp]
	mov	DWORD PTR [edx], eax
$LN7@reserve@13:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@12
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlen
	jmp	SHORT $LN6@Reserve@12
$LN4@Reserve@12:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@12
; Line 1296
	jmp	SHORT $LN6@Reserve@12
$LN2@Reserve@12:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEII@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
$LN6@Reserve@12:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T366608 = -20						; size = 4
$T366607 = -16						; size = 4
$T366606 = -12						; size = 4
$T366605 = -8						; size = 4
$T366604 = -4						; size = 4
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T366605[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T366604[ebp], ecx
	lea	edx, DWORD PTR $T366607[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T366606[ebp], eax
	mov	ecx, DWORD PTR $T366604[ebp]
	push	ecx
	mov	edx, DWORD PTR $T366606[ebp]
	push	edx
	lea	eax, DWORD PTR $T366608[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$159724 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@16
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR __Idx$159724[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@16
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN3@push_back@16:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$159724[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@AAV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@16
$LN4@push_back@16:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@16
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN1@push_back@16:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@ABV32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@16:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$159689 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBE_NPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back@17
; Line 634
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR __Idx$159689[ebp], eax
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@17
; Line 636
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN3@push_back@17:
; Line 637
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Line 640
	mov	eax, DWORD PTR __Idx$159689[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
; Line 641
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 643
	jmp	SHORT $LN5@push_back@17
$LN4@push_back@17:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@17
; Line 646
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXI@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reserve
$LN1@push_back@17:
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IBEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Orphan_range
; Line 650
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@V32@@std@@YAXAAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV20@@Z ; std::_Cons_val<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 12					; 0000000cH
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@17:
; Line 653
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
_TEXT	ENDS
PUBLIC	??1game@Battlefield@@QAE@XZ			; Battlefield::game::~game
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\battlefield3.cpp
xdata$x	SEGMENT
__unwindtable$??1game@Battlefield@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1game@Battlefield@@QAE@XZ$8
__ehfuncinfo$??1game@Battlefield@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??1game@Battlefield@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1game@Battlefield@@QAE@XZ
_TEXT	SEGMENT
tv134 = -40						; size = 4
tv128 = -36						; size = 4
_this$ = -32						; size = 4
$T366620 = -28						; size = 4
$T366619 = -24						; size = 4
$T366616 = -20						; size = 4
$T366615 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1game@Battlefield@@QAE@XZ PROC			; Battlefield::game::~game, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1game@Battlefield@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	mov	DWORD PTR $T366616[ebp], ecx
	mov	edx, DWORD PTR $T366616[ebp]
	mov	DWORD PTR $T366615[ebp], edx
	cmp	DWORD PTR $T366615[ebp], 0
	je	SHORT $LN3@game
	push	1
	mov	ecx, DWORD PTR $T366615[ebp]
	call	??_GSQLite@Database@@QAEPAXI@Z
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN4@game
$LN3@game:
	mov	DWORD PTR tv128[ebp], 0
$LN4@game:
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	mov	DWORD PTR $T366620[ebp], ecx
	mov	edx, DWORD PTR $T366620[ebp]
	mov	DWORD PTR $T366619[ebp], edx
	cmp	DWORD PTR $T366619[ebp], 0
	je	SHORT $LN5@game
	push	1
	mov	ecx, DWORD PTR $T366619[ebp]
	call	??_Gstruct_settings@Database@@QAEPAXI@Z
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN1@game
$LN5@game:
	mov	DWORD PTR tv134[ebp], 0
$LN1@game:
; Line 35
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET ??1struct_player@Battlefield@@QAE@XZ
	push	64					; 00000040H
	push	108					; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23392				; 00005b60H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	call	??1Vote@Battlefield@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	64					; 00000040H
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21484				; 000053ecH
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21468				; 000053dcH
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bf3_socket@@IAE@XZ			; bf3_socket::~bf3_socket
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1game@Battlefield@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1bf3_socket@@IAE@XZ			; bf3_socket::~bf3_socket
__unwindfunclet$??1game@Battlefield@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??1game@Battlefield@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	jmp	??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
__unwindfunclet$??1game@Battlefield@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21468				; 000053dcH
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??1game@Battlefield@@QAE@XZ$4:
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	64					; 00000040H
	push	28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21484				; 000053ecH
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$??1game@Battlefield@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??1game@Battlefield@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	jmp	??1Vote@Battlefield@@QAE@XZ
__unwindfunclet$??1game@Battlefield@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??1game@Battlefield@@QAE@XZ$8:
	push	OFFSET ??1struct_player@Battlefield@@QAE@XZ
	push	64					; 00000040H
	push	108					; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23392				; 00005b60H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??1game@Battlefield@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1game@Battlefield@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1game@Battlefield@@QAE@XZ ENDP			; Battlefield::game::~game
; Function compile flags: /Odtp
;	COMDAT ?_Assign_rv@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T367605 = -12						; size = 4
$T367604 = -6						; size = 1
$T367603 = -5						; size = 1
__Next$162474 = -4					; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV12@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Assign_rv, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 606
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN7@Assign_rv@7
	jmp	$LN8@Assign_rv@7
$LN7@Assign_rv@7:
; Line 609
	lea	ecx, DWORD PTR $T367603[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?get_allocator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::get_allocator
	push	eax
	lea	edx, DWORD PTR $T367604[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get_allocator@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::get_allocator
	push	eax
	call	??$?9V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@0@Z ; std::operator!=<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Assign_rv@7
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 612
	lea	ecx, DWORD PTR __Next$162474[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	jmp	SHORT $LN4@Assign_rv@7
$LN3@Assign_rv@7:
; Line 613
	lea	ecx, DWORD PTR __Next$162474[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN4@Assign_rv@7:
	lea	edx, DWORD PTR $T367605[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR __Next$162474[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Assign_rv@7
; Line 614
	lea	ecx, DWORD PTR __Next$162474[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN3@Assign_rv@7
$LN2@Assign_rv@7:
; Line 616
	jmp	SHORT $LN8@Assign_rv@7
$LN5@Assign_rv@7:
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
; Line 619
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
; Line 620
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 624
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx], 0
; Line 625
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 626
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+8], 0
$LN8@Assign_rv@7:
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV12@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Assign_rv
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=, COMDAT
; _this$ = ecx
; Line 600
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 601
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV12@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Assign_rv
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
; Line 603
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?logout@game@Battlefield@@QAEXXZ		; Battlefield::game::logout
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\battlefield3.cpp
xdata$x	SEGMENT
__unwindtable$?logout@game@Battlefield@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?logout@game@Battlefield@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?logout@game@Battlefield@@QAEXXZ$1
__ehfuncinfo$?logout@game@Battlefield@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?logout@game@Battlefield@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?logout@game@Battlefield@@QAEXXZ
_TEXT	SEGMENT
tv128 = -72						; size = 4
_this$ = -68						; size = 4
$T367611 = -64						; size = 4
_cmd$ = -60						; size = 16
$T155887 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?logout@game@Battlefield@@QAEXXZ PROC			; Battlefield::game::logout, COMDAT
; _this$ = ecx
; Line 1182
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?logout@game@Battlefield@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1186
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1187
	push	OFFSET $SG-640
	lea	ecx, DWORD PTR $T155887[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T155887[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T155887[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1188
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367611[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv128[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1189
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1193
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?logout@game@Battlefield@@QAEXXZ$0:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?logout@game@Battlefield@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T155887[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?logout@game@Battlefield@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?logout@game@Battlefield@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?logout@game@Battlefield@@QAEXXZ ENDP			; Battlefield::game::logout
PUBLIC	__$ArrayPad$
PUBLIC	?events@game@Battlefield@@QAEX_N@Z		; Battlefield::game::events
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?events@game@Battlefield@@QAEX_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$3
__ehfuncinfo$?events@game@Battlefield@@QAEX_N@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?events@game@Battlefield@@QAEX_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?events@game@Battlefield@@QAEX_N@Z
_TEXT	SEGMENT
tv144 = -128						; size = 4
_this$ = -124						; size = 4
$T367624 = -120						; size = 4
_cmd$ = -116						; size = 16
$T155876 = -100						; size = 28
$T155873 = -72						; size = 28
$T155870 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_active$ = 8						; size = 1
?events@game@Battlefield@@QAEX_N@Z PROC			; Battlefield::game::events, COMDAT
; _this$ = ecx
; Line 1164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?events@game@Battlefield@@QAEX_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1169
	push	OFFSET $SG-637
	lea	ecx, DWORD PTR $T155870[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T155870[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T155870[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1170
	movzx	ecx, BYTE PTR _active$[ebp]
	test	ecx, ecx
	je	SHORT $LN2@events
; Line 1171
	push	OFFSET $SG-638
	lea	ecx, DWORD PTR $T155873[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	edx, DWORD PTR $T155873[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T155873[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1172
	jmp	SHORT $LN1@events
$LN2@events:
; Line 1173
	push	OFFSET $SG-639
	lea	ecx, DWORD PTR $T155876[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR $T155876[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T155876[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@events:
; Line 1174
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367624[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1175
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1179
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$0:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$1:
	lea	ecx, DWORD PTR $T155870[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$2:
	lea	ecx, DWORD PTR $T155873[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?events@game@Battlefield@@QAEX_N@Z$3:
	lea	ecx, DWORD PTR $T155876[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?events@game@Battlefield@@QAEX_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?events@game@Battlefield@@QAEX_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?events@game@Battlefield@@QAEX_N@Z ENDP			; Battlefield::game::events
PUBLIC	__$ArrayPad$
PUBLIC	?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::listplayers
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv132 = -72						; size = 4
_this$ = -68						; size = 4
$T367639 = -64						; size = 4
_cmd$ = -60						; size = 16
$T155858 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sPlayers$ = 8						; size = 28
?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::listplayers, COMDAT
; _this$ = ecx
; Line 1149
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1153
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1154
	push	OFFSET $SG-636
	lea	ecx, DWORD PTR $T155858[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T155858[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155858[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1155
	lea	ecx, DWORD PTR _sPlayers$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1156
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367639[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1157
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1161
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sPlayers$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sPlayers$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T155858[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?listplayers@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::listplayers
PUBLIC	__$ArrayPad$
PUBLIC	?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::player_white
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv132 = -72						; size = 4
_this$ = -68						; size = 4
$T367653 = -64						; size = 4
_cmd$ = -60						; size = 16
$T155846 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sName$ = 8						; size = 28
?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::player_white, COMDAT
; _this$ = ecx
; Line 1134
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1138
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1139
	push	OFFSET $SG-635
	lea	ecx, DWORD PTR $T155846[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T155846[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155846[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1140
	lea	ecx, DWORD PTR _sName$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1141
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367653[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1142
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1146
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T155846[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::player_white
PUBLIC	__$ArrayPad$
PUBLIC	?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z ; Battlefield::game::player_move
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$7
__ehfuncinfo$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z
_TEXT	SEGMENT
tv176 = -224						; size = 4
tv142 = -220						; size = 4
tv172 = -216						; size = 4
tv86 = -212						; size = 4
_this$ = -208						; size = 4
$T367669 = -204						; size = 4
_cmd$ = -200						; size = 16
$T155791 = -184						; size = 28
$T155789 = -156						; size = 28
$T155787 = -128						; size = 28
$T155780 = -100						; size = 28
$T155777 = -72						; size = 28
$T155774 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sPlayers$ = 8						; size = 28
_usTeam$ = 36						; size = 1
_usSquad$ = 40						; size = 1
_cbForce$ = 44						; size = 1
?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z PROC ; Battlefield::game::player_move, COMDAT
; _this$ = ecx
; Line 1066
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1070
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1071
	push	OFFSET $SG-624
	lea	ecx, DWORD PTR $T155774[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T155774[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155774[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1072
	lea	ecx, DWORD PTR _sPlayers$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1074
	movzx	edx, BYTE PTR _usTeam$[ebp]
	cmp	edx, 1
	jne	SHORT $LN4@player_mov
; Line 1075
	push	OFFSET $SG-625
	lea	ecx, DWORD PTR $T155777[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR $T155777[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155777[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1076
	jmp	SHORT $LN3@player_mov
$LN4@player_mov:
; Line 1077
	push	OFFSET $SG-626
	lea	ecx, DWORD PTR $T155780[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T155780[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155780[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@player_mov:
; Line 1079
	movzx	edx, BYTE PTR _usSquad$[ebp]
	test	edx, edx
	je	SHORT $LN2@player_mov
; Line 1080
	lea	eax, DWORD PTR _usSquad$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155787[ebp]
	push	ecx
	call	??$cast_to_string@E@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABE@Z ; dlib::cast_to_string<unsigned char>
	add	esp, 8
	mov	DWORD PTR tv86[ebp], eax
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv172[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155787[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1081
	jmp	SHORT $LN1@player_mov
$LN2@player_mov:
; Line 1082
	push	OFFSET $SG-627
	lea	ecx, DWORD PTR $T155789[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T155789[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155789[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@player_mov:
; Line 1084
	movzx	edx, BYTE PTR _cbForce$[ebp]
	test	edx, edx
	je	SHORT $LN7@player_mov
	mov	DWORD PTR tv142[ebp], OFFSET $SG-628
	jmp	SHORT $LN8@player_mov
$LN7@player_mov:
	mov	DWORD PTR tv142[ebp], OFFSET $SG-629
$LN8@player_mov:
	mov	eax, DWORD PTR tv142[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155791[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T155791[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155791[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1086
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367669[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1087
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1091
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sPlayers$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$0:
	lea	ecx, DWORD PTR _sPlayers$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$1:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$2:
	lea	ecx, DWORD PTR $T155774[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$3:
	lea	ecx, DWORD PTR $T155777[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$4:
	lea	ecx, DWORD PTR $T155780[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$5:
	lea	ecx, DWORD PTR $T155787[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$6:
	lea	ecx, DWORD PTR $T155789[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z$7:
	lea	ecx, DWORD PTR $T155791[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z ENDP ; Battlefield::game::player_move
PUBLIC	__$ArrayPad$
PUBLIC	?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Battlefield::game::player_kick
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3
__ehfuncinfo$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv136 = -72						; size = 4
_this$ = -68						; size = 4
$T367688 = -64						; size = 4
_cmd$ = -60						; size = 16
$T155759 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sPlayerName$ = 8					; size = 28
_sReason$ = 36						; size = 28
?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Battlefield::game::player_kick, COMDAT
; _this$ = ecx
; Line 1050
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1054
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1055
	push	OFFSET $SG-623
	lea	ecx, DWORD PTR $T155759[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR $T155759[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T155759[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1056
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1057
	lea	edx, DWORD PTR _sReason$[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1058
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367688[ebp], esp
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv136[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1059
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1063
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sReason$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
	lea	ecx, DWORD PTR _sReason$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$3:
	lea	ecx, DWORD PTR $T155759[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Battlefield::game::player_kick
PUBLIC	__$ArrayPad$
PUBLIC	?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::player_kill
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv132 = -72						; size = 4
_this$ = -68						; size = 4
$T367703 = -64						; size = 4
_cmd$ = -60						; size = 16
$T155746 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sPlayerName$ = 8					; size = 28
?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::player_kill, COMDAT
; _this$ = ecx
; Line 1035
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1039
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1040
	push	OFFSET $SG-622
	lea	ecx, DWORD PTR $T155746[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T155746[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155746[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1041
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1042
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367703[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1043
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1047
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T155746[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::player_kill
PUBLIC	__$ArrayPad$
PUBLIC	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$5
__ehfuncinfo$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
_TEXT	SEGMENT
tv152 = -100						; size = 4
_this$ = -96						; size = 4
$T367717 = -92						; size = 4
_cmd$ = -88						; size = 16
$T155732 = -72						; size = 28
$T155730 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sText$ = 8						; size = 28
_sTarget$ = 36						; size = 28
_sPlayer$ = 64						; size = 28
?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z PROC ; Battlefield::game::yell, COMDAT
; _this$ = ecx
; Line 1016
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1020
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1021
	push	OFFSET $SG-619
	lea	ecx, DWORD PTR $T155730[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	eax, DWORD PTR $T155730[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T155730[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1022
	lea	ecx, DWORD PTR _sText$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1023
	push	OFFSET $SG-620
	lea	ecx, DWORD PTR $T155732[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	edx, DWORD PTR $T155732[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T155732[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1024
	lea	eax, DWORD PTR _sTarget$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1025
	push	OFFSET $SG-621
	lea	ecx, DWORD PTR _sPlayer$[ebp]
	push	ecx
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@yell
; Line 1026
	lea	eax, DWORD PTR _sPlayer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
$LN1@yell:
; Line 1027
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367717[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv152[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1028
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1032
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sText$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sTarget$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sPlayer$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	84					; 00000054H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$0:
	lea	ecx, DWORD PTR _sPlayer$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$1:
	lea	ecx, DWORD PTR _sTarget$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$2:
	lea	ecx, DWORD PTR _sText$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$3:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$4:
	lea	ecx, DWORD PTR $T155730[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$5:
	lea	ecx, DWORD PTR $T155732[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ENDP ; Battlefield::game::yell
PUBLIC	__$ArrayPad$
PUBLIC	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$4
__ehfuncinfo$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
_TEXT	SEGMENT
tv145 = -72						; size = 4
_this$ = -68						; size = 4
$T367734 = -64						; size = 4
_cmd$ = -60						; size = 16
$T155714 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sText$ = 8						; size = 28
_sTarget$ = 36						; size = 28
_sPlayer$ = 64						; size = 28
?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z PROC ; Battlefield::game::say, COMDAT
; _this$ = ecx
; Line 998
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1002
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1003
	push	OFFSET $SG-617
	lea	ecx, DWORD PTR $T155714[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	eax, DWORD PTR $T155714[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T155714[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1004
	lea	ecx, DWORD PTR _sText$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1005
	lea	edx, DWORD PTR _sTarget$[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1006
	push	OFFSET $SG-618
	lea	eax, DWORD PTR _sPlayer$[ebp]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@say
; Line 1007
	lea	edx, DWORD PTR _sPlayer$[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
$LN1@say:
; Line 1008
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367734[ebp], esp
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1009
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1013
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sText$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sTarget$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sPlayer$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	84					; 00000054H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$0:
	lea	ecx, DWORD PTR _sPlayer$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$1:
	lea	ecx, DWORD PTR _sTarget$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$2:
	lea	ecx, DWORD PTR _sText$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$3:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$4:
	lea	ecx, DWORD PTR $T155714[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ENDP ; Battlefield::game::say
PUBLIC	?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Battlefield::game::sendSimpleCmdWithValue
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2
__ehfuncinfo$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
_TEXT	SEGMENT
tv129 = -44						; size = 4
_this$ = -40						; size = 4
$T367750 = -36						; size = 4
_cmd$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_sCmd$ = 8						; size = 28
_sValue$ = 36						; size = 28
?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z PROC ; Battlefield::game::sendSimpleCmdWithValue, COMDAT
; _this$ = ecx
; Line 937
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 938
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 939
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 940
	lea	ecx, DWORD PTR _sValue$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 941
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367750[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 942
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 943
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sValue$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$0:
	lea	ecx, DWORD PTR _sValue$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$1:
	lea	ecx, DWORD PTR _sCmd$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z$2:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?sendSimpleCmdWithValue@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ENDP ; Battlefield::game::sendSimpleCmdWithValue
PUBLIC	?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::sendSimpleCmd
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv93 = -44						; size = 4
_this$ = -40						; size = 4
$T367764 = -36						; size = 4
_cmd$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_sCmd$ = 8						; size = 28
?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::sendSimpleCmd, COMDAT
; _this$ = ecx
; Line 929
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 930
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 931
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 932
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T367764[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 933
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 934
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sCmd$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::sendSimpleCmd
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z$0
__ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T368463 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx
; Line 595
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 12					; 0000000cH
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T368463[ebp], esp
	push	eax
	call	??0?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@YA$$QAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@0@AAV10@@Z ; std::forward<std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV12@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Assign_rv
; Line 597
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__ehhandler$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	__$ArrayPad$
;	COMDAT xdata$x
; File e:\library\dlib\dlib\string\string.h
xdata$x	SEGMENT
__unwindtable$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z$1
__ehfuncinfo$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z
_TEXT	SEGMENT
$T368477 = -76						; size = 4
_d$166362 = -72						; size = 4
_hit$166361 = -65					; size = 1
_i$166357 = -64						; size = 4
_temp$ = -60						; size = 28
__$ArrayPad$ = -32					; size = 4
_res$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str$ = 12						; size = 4
_delim$ = 16						; size = 4
??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z PROC ; dlib::split<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 870
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T368477[ebp], 0
; Line 871
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 873
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 875
	mov	DWORD PTR _i$166357[ebp], 0
	jmp	SHORT $LN10@split
$LN9@split:
	mov	eax, DWORD PTR _i$166357[ebp]
	add	eax, 1
	mov	DWORD PTR _i$166357[ebp], eax
$LN10@split:
	mov	ecx, DWORD PTR _str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	DWORD PTR _i$166357[ebp], eax
	jae	$LN8@split
; Line 878
	mov	BYTE PTR _hit$166361[ebp], 0
; Line 879
	mov	ecx, DWORD PTR _delim$[ebp]
	mov	DWORD PTR _d$166362[ebp], ecx
$LN7@split:
; Line 880
	mov	edx, DWORD PTR _d$166362[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN6@split
; Line 882
	mov	ecx, DWORD PTR _i$166357[ebp]
	push	ecx
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	edx, BYTE PTR [eax]
	mov	eax, DWORD PTR _d$166362[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	edx, ecx
	jne	SHORT $LN5@split
; Line 884
	mov	BYTE PTR _hit$166361[ebp], 1
; Line 885
	jmp	SHORT $LN6@split
$LN5@split:
; Line 887
	mov	edx, DWORD PTR _d$166362[ebp]
	add	edx, 1
	mov	DWORD PTR _d$166362[ebp], edx
; Line 888
	jmp	SHORT $LN7@split
$LN6@split:
; Line 890
	movzx	eax, BYTE PTR _hit$166361[ebp]
	test	eax, eax
	je	SHORT $LN4@split
; Line 892
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	test	eax, eax
	je	SHORT $LN3@split
; Line 894
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _res$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 895
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
$LN3@split:
; Line 898
	jmp	SHORT $LN2@split
$LN4@split:
; Line 900
	mov	edx, DWORD PTR _i$166357[ebp]
	push	edx
	mov	ecx, DWORD PTR _str$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	eax, BYTE PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
$LN2@split:
; Line 902
	jmp	$LN9@split
$LN8@split:
; Line 904
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	test	eax, eax
	je	SHORT $LN1@split
; Line 905
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _res$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
$LN1@split:
; Line 907
	lea	edx, DWORD PTR _res$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR $T368477[ebp]
	or	eax, 1
	mov	DWORD PTR $T368477[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 908
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z$0:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z$1:
	lea	ecx, DWORD PTR _res$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z$2:
	mov	eax, DWORD PTR $T368477[ebp]
	and	eax, 1
	je	$LN16@split
	and	DWORD PTR $T368477[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN16@split:
	ret	0
__ehhandler$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z ENDP ; dlib::split<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	__$ArrayPad$
PUBLIC	?login@game@Battlefield@@QAE_NXZ		; Battlefield::game::login
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\battlefield3.cpp
xdata$x	SEGMENT
__unwindtable$?login@game@Battlefield@@QAE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$3
	DD	01H
	DD	FLAT:__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$4
	DD	03H
	DD	FLAT:__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$5
	DD	04H
	DD	FLAT:__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$6
__ehfuncinfo$?login@game@Battlefield@@QAE_NXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?login@game@Battlefield@@QAE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?login@game@Battlefield@@QAE_NXZ
_TEXT	SEGMENT
tv253 = -232						; size = 4
tv251 = -228						; size = 4
tv131 = -224						; size = 4
tv249 = -220						; size = 4
tv174 = -216						; size = 4
tv247 = -212						; size = 4
tv178 = -208						; size = 4
tv242 = -204						; size = 4
_this$ = -200						; size = 4
$T368490 = -193						; size = 1
$T368489 = -192						; size = 4
$T368488 = -188						; size = 4
_ch2$155684 = -182					; size = 1
_ch1$155683 = -181					; size = 1
_i$155679 = -180					; size = 4
_hash$155677 = -176					; size = 28
_cmd$155693 = -148					; size = 16
_pwd$155678 = -132					; size = 4
$T155698 = -128						; size = 28
$T155697 = -100						; size = 28
$T155696 = -72						; size = 28
$T155694 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?login@game@Battlefield@@QAE_NXZ PROC			; Battlefield::game::login, COMDAT
; _this$ = ecx
; Line 948
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?login@game@Battlefield@@QAE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 952
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T368488[ebp], esp
	push	OFFSET $SG-613
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv242[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendSimpleCmd@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::sendSimpleCmd
; Line 953
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_refresh@bf3_socket@@IAEXXZ		; bf3_socket::_refresh
; Line 954
	push	OFFSET $SG-614
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN9@login
; Line 956
	lea	ecx, DWORD PTR _hash$155677[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 959
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	DWORD PTR _pwd$155678[ebp], eax
; Line 960
	mov	DWORD PTR _i$155679[ebp], 0
	jmp	SHORT $LN8@login
$LN7@login:
	mov	ecx, DWORD PTR _i$155679[ebp]
	add	ecx, 2
	mov	DWORD PTR _i$155679[ebp], ecx
$LN8@login:
	cmp	DWORD PTR _i$155679[ebp], 32		; 00000020H
	jge	$LN6@login
; Line 962
	mov	edx, DWORD PTR _pwd$155678[ebp]
	add	edx, DWORD PTR _i$155679[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _ch1$155683[ebp], al
; Line 963
	mov	ecx, DWORD PTR _pwd$155678[ebp]
	add	ecx, DWORD PTR _i$155679[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR _ch2$155684[ebp], dl
; Line 965
	movzx	eax, BYTE PTR _ch1$155683[ebp]
	cmp	eax, 65					; 00000041H
	jge	SHORT $LN5@login
; Line 966
	movzx	ecx, BYTE PTR _ch1$155683[ebp]
	sub	ecx, 48					; 00000030H
	mov	BYTE PTR _ch1$155683[ebp], cl
; Line 967
	jmp	SHORT $LN4@login
$LN5@login:
; Line 968
	movzx	edx, BYTE PTR _ch1$155683[ebp]
	sub	edx, 55					; 00000037H
	mov	BYTE PTR _ch1$155683[ebp], dl
$LN4@login:
; Line 970
	movzx	eax, BYTE PTR _ch2$155684[ebp]
	cmp	eax, 65					; 00000041H
	jge	SHORT $LN3@login
; Line 971
	movzx	ecx, BYTE PTR _ch2$155684[ebp]
	sub	ecx, 48					; 00000030H
	mov	BYTE PTR _ch2$155684[ebp], cl
; Line 972
	jmp	SHORT $LN2@login
$LN3@login:
; Line 973
	movzx	edx, BYTE PTR _ch2$155684[ebp]
	sub	edx, 55					; 00000037H
	mov	BYTE PTR _ch2$155684[ebp], dl
$LN2@login:
; Line 975
	movzx	eax, BYTE PTR _ch1$155683[ebp]
	movzx	ecx, BYTE PTR _HEXTOINT[eax]
	movzx	edx, BYTE PTR _ch2$155684[ebp]
	add	ecx, edx
	push	ecx
	lea	ecx, DWORD PTR _hash$155677[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; Line 976
	jmp	$LN7@login
$LN6@login:
; Line 979
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 980
	push	OFFSET $SG-615
	lea	ecx, DWORD PTR $T155694[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T155694[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155694[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 982
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+23388]
	add	edx, 32					; 00000020H
	push	edx
	lea	eax, DWORD PTR _hash$155677[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155696[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv178[ebp], eax
	mov	edx, DWORD PTR tv178[ebp]
	mov	DWORD PTR tv247[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv247[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155697[ebp]
	push	ecx
	call	?md5@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@@Z ; dlib::md5
	add	esp, 8
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv249[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv249[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155698[ebp]
	push	ecx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv131[ebp], eax
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv251[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv251[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T155698[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T155697[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155696[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 983
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T368489[ebp], esp
	lea	edx, DWORD PTR _cmd$155693[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv253[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 984
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 987
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_refresh@bf3_socket@@IAEXXZ		; bf3_socket::_refresh
; Line 988
	push	OFFSET $SG-616
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@login
; Line 989
	mov	BYTE PTR $T368490[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _hash$155677[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, BYTE PTR $T368490[ebp]
	jmp	SHORT $LN10@login
$LN1@login:
; Line 990
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _hash$155677[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@login:
; Line 994
	xor	al, al
$LN10@login:
; Line 995
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$1:
	lea	ecx, DWORD PTR _hash$155677[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$2:
	lea	ecx, DWORD PTR _cmd$155693[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$3:
	lea	ecx, DWORD PTR $T155694[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$4:
	lea	ecx, DWORD PTR $T155696[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$5:
	lea	ecx, DWORD PTR $T155697[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?login@game@Battlefield@@QAE_NXZ$6:
	lea	ecx, DWORD PTR $T155698[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?login@game@Battlefield@@QAE_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?login@game@Battlefield@@QAE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?login@game@Battlefield@@QAE_NXZ ENDP			; Battlefield::game::login
PUBLIC	?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::unRestrictWeapon
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv147 = -56						; size = 4
_this$ = -52						; size = 4
$T372677 = -48						; size = 4
$T372676 = -44						; size = 4
$T372675 = -40						; size = 4
$T372674 = -36						; size = 4
$T372673 = -32						; size = 4
$T372672 = -28						; size = 4
$T372671 = -24						; size = 4
$T372670 = -20						; size = 4
__$EHRec$ = -12						; size = 12
_sName$ = 8						; size = 28
?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::unRestrictWeapon, COMDAT
; _this$ = ecx
; Line 1287
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1288
	lea	eax, DWORD PTR $T372671[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T372670[ebp], ecx
	lea	edx, DWORD PTR _sName$[ebp]
	push	edx
	lea	eax, DWORD PTR $T372673[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T372674[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T372675[ebp]
	push	ecx
	call	??$remove@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::remove<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T372672[ebp], edx
	mov	eax, DWORD PTR $T372670[ebp]
	push	eax
	mov	ecx, DWORD PTR $T372672[ebp]
	push	ecx
	lea	edx, DWORD PTR $T372676[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
; Line 1289
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372677[ebp], esp
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?deleteRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::deleteRestrictedWeapon
; Line 1290
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?unRestrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::unRestrictWeapon
PUBLIC	?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::restrictWeapon
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv148 = -44						; size = 4
_this$ = -40						; size = 4
$T372693 = -36						; size = 4
$T372692 = -32						; size = 4
$T372691 = -28						; size = 4
$T372690 = -24						; size = 4
$T372689 = -20						; size = 4
__$EHRec$ = -12						; size = 12
_sName$ = 8						; size = 28
?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::restrictWeapon, COMDAT
; _this$ = ecx
; Line 1278
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1279
	lea	eax, DWORD PTR $T372692[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _sName$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T372689[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T372690[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T372691[ebp]
	push	eax
	call	??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::find<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 16					; 00000010H
	mov	ecx, eax
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@restrictWe
; Line 1281
	lea	edx, DWORD PTR _sName$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1282
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372693[ebp], esp
	lea	eax, DWORD PTR _sName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?addRestrictedWeapon@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::addRestrictedWeapon
$LN1@restrictWe:
; Line 1284
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?restrictWeapon@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::restrictWeapon
PUBLIC	?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::mail_SendToAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
__ehfuncinfo$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv196 = -92						; size = 4
tv187 = -85						; size = 1
tv193 = -84						; size = 4
tv190 = -80						; size = 4
tv198 = -76						; size = 4
tv186 = -72						; size = 4
tv67 = -68						; size = 4
_this$ = -64						; size = 4
$T372710 = -60						; size = 4
$T372709 = -56						; size = 4
$T372708 = -52						; size = 4
$T372707 = -48						; size = 4
$T372706 = -44						; size = 4
$T372705 = -40						; size = 4
_it$156459 = -36					; size = 4
_mailReceiverList$ = -32				; size = 16
__$EHRec$ = -12						; size = 12
_sMessage$ = 8						; size = 28
?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::mail_SendToAll, COMDAT
; _this$ = ecx
; Line 1265
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1266
	lea	eax, DWORD PTR _mailReceiverList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?mailReceiverList@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::mailReceiverList
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1268
	lea	edx, DWORD PTR $T372705[ebp]
	push	edx
	lea	ecx, DWORD PTR _mailReceiverList$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _it$156459[ebp], eax
	jmp	SHORT $LN4@mail_SendT
$LN3@mail_SendT:
	lea	ecx, DWORD PTR _it$156459[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN4@mail_SendT:
	lea	ecx, DWORD PTR $T372706[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mailReceiverList$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$156459[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN2@mail_SendT
; Line 1270
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372707[ebp], esp
	lea	eax, DWORD PTR _sMessage$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv186[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372708[ebp], esp
	push	OFFSET $SG-647
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv198[ebp], eax
	mov	edx, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv190[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _it$156459[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372709[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv193[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?sendMail@mail@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; mail::sendMail
	add	esp, 84					; 00000054H
	mov	BYTE PTR tv187[ebp], al
	movzx	eax, BYTE PTR tv187[ebp]
	test	eax, eax
	jne	SHORT $LN1@mail_SendT
; Line 1272
	push	OFFSET $SG-648
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372710[ebp], esp
	push	OFFSET $SG-649
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv196[ebp], eax
	call	?message@log@helper@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; helper::log::message
	add	esp, 32					; 00000020H
$LN1@mail_SendT:
; Line 1274
	jmp	$LN3@mail_SendT
$LN2@mail_SendT:
; Line 1275
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _mailReceiverList$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sMessage$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sMessage$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _mailReceiverList$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	mov	ecx, DWORD PTR $T372707[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	mov	ecx, DWORD PTR $T372708[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::mail_SendToAll
PUBLIC	?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::nma_NotificateAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv180 = -80						; size = 4
tv174 = -73						; size = 1
tv177 = -72						; size = 4
tv173 = -68						; size = 4
tv67 = -64						; size = 4
_this$ = -60						; size = 4
$T372730 = -56						; size = 4
$T372729 = -52						; size = 4
$T372728 = -48						; size = 4
$T372727 = -44						; size = 4
$T372726 = -40						; size = 4
_it$156433 = -36					; size = 4
_nmalist$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_sMessage$ = 8						; size = 28
?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::nma_NotificateAll, COMDAT
; _this$ = ecx
; Line 1252
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1253
	lea	eax, DWORD PTR _nmalist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?nmalist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::nmalist
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1255
	lea	edx, DWORD PTR $T372726[ebp]
	push	edx
	lea	ecx, DWORD PTR _nmalist$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _it$156433[ebp], eax
	jmp	SHORT $LN4@nma_Notifi
$LN3@nma_Notifi:
	lea	ecx, DWORD PTR _it$156433[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN4@nma_Notifi:
	lea	ecx, DWORD PTR $T372727[ebp]
	push	ecx
	lea	ecx, DWORD PTR _nmalist$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$156433[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@nma_Notifi
; Line 1257
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372728[ebp], esp
	lea	eax, DWORD PTR _sMessage$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _it$156433[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372729[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv177[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?notificate@notifymyandroid@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; notifymyandroid::notificate
	add	esp, 56					; 00000038H
	mov	BYTE PTR tv174[ebp], al
	movzx	edx, BYTE PTR tv174[ebp]
	test	edx, edx
	jne	SHORT $LN1@nma_Notifi
; Line 1259
	push	OFFSET $SG-645
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372730[ebp], esp
	push	OFFSET $SG-646
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv180[ebp], eax
	call	?message@log@helper@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; helper::log::message
	add	esp, 32					; 00000020H
$LN1@nma_Notifi:
; Line 1261
	jmp	$LN3@nma_Notifi
$LN2@nma_Notifi:
; Line 1262
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _nmalist$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sMessage$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _sMessage$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _nmalist$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	mov	ecx, DWORD PTR $T372728[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::nma_NotificateAll
PUBLIC	__$ArrayPad$
PUBLIC	?updateWhitelist@game@Battlefield@@QAEXXZ	; Battlefield::game::updateWhitelist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateWhitelist@game@Battlefield@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$5
__ehfuncinfo$?updateWhitelist@game@Battlefield@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?updateWhitelist@game@Battlefield@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateWhitelist@game@Battlefield@@QAEXXZ
_TEXT	SEGMENT
tv212 = -152						; size = 4
tv209 = -148						; size = 4
tv207 = -144						; size = 4
tv69 = -140						; size = 4
tv205 = -136						; size = 4
_this$ = -132						; size = 4
$T372750 = -128						; size = 4
$T372749 = -124						; size = 4
$T372748 = -120						; size = 4
$T372747 = -116						; size = 4
$T372746 = -112						; size = 16
$T372745 = -96						; size = 4
_it$156401 = -92					; size = 4
_cmd$ = -88						; size = 16
$T156408 = -72						; size = 28
$T156393 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?updateWhitelist@game@Battlefield@@QAEXXZ PROC		; Battlefield::game::updateWhitelist, COMDAT
; _this$ = ecx
; Line 1222
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateWhitelist@game@Battlefield@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1227
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1228
	push	OFFSET $SG-643
	lea	ecx, DWORD PTR $T156393[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T156393[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T156393[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1229
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T372745[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv205[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1230
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1232
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1233
	lea	eax, DWORD PTR $T372746[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?whitelist@SQLite@Database@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Database::SQLite::whitelist
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv207[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv207[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	??4?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T372746[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Line 1234
	lea	ecx, DWORD PTR $T372747[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _it$156401[ebp], edx
	jmp	SHORT $LN3@updateWhit
$LN2@updateWhit:
	lea	ecx, DWORD PTR _it$156401[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN3@updateWhit:
	lea	eax, DWORD PTR $T372748[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$156401[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@updateWhit
; Line 1235
	lea	ecx, DWORD PTR _it$156401[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372749[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv209[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_white@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::player_white
	jmp	SHORT $LN2@updateWhit
$LN1@updateWhit:
; Line 1237
	push	OFFSET $SG-644
	lea	ecx, DWORD PTR $T156408[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	edx, DWORD PTR $T156408[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T156408[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1238
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T372750[ebp], esp
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv212[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1239
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1244
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$0:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T156393[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T372746[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?updateWhitelist@game@Battlefield@@QAEXXZ$5:
	lea	ecx, DWORD PTR $T156408[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateWhitelist@game@Battlefield@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateWhitelist@game@Battlefield@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateWhitelist@game@Battlefield@@QAEXXZ ENDP		; Battlefield::game::updateWhitelist
PUBLIC	__$ArrayPad$
PUBLIC	?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Battlefield::game::player_unban
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$3
__ehfuncinfo$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
_TEXT	SEGMENT
tv159 = -108						; size = 4
tv157 = -104						; size = 4
_this$ = -100						; size = 4
$T372768 = -96						; size = 4
$T372767 = -92						; size = 4
_cmd$ = -88						; size = 16
$T155832 = -72						; size = 28
$T155830 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sGuID$ = 8						; size = 28
_bAddToDB$ = 36						; size = 1
?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z PROC ; Battlefield::game::player_unban, COMDAT
; _this$ = ecx
; Line 1115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1119
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1120
	push	OFFSET $SG-633
	lea	ecx, DWORD PTR $T155830[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T155830[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155830[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1121
	push	OFFSET $SG-634
	lea	ecx, DWORD PTR $T155832[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T155832[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T155832[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1122
	lea	edx, DWORD PTR _sGuID$[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1123
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T372767[ebp], esp
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1124
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1126
	movzx	ecx, BYTE PTR _bAddToDB$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@player_unb
; Line 1127
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372768[ebp], esp
	lea	edx, DWORD PTR _sGuID$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv159[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?unban@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::unban
$LN1@player_unb:
; Line 1131
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sGuID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$0:
	lea	ecx, DWORD PTR _sGuID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$1:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$2:
	lea	ecx, DWORD PTR $T155830[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z$3:
	lea	ecx, DWORD PTR $T155832[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?player_unban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ENDP ; Battlefield::game::player_unban
PUBLIC	__$ArrayPad$
PUBLIC	?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z ; Battlefield::game::player_ban
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$9
	DD	08H
	DD	FLAT:__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$11
__ehfuncinfo$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z
_TEXT	SEGMENT
tv228 = -172						; size = 4
tv225 = -168						; size = 4
tv79 = -164						; size = 4
tv222 = -160						; size = 4
tv221 = -156						; size = 4
tv218 = -152						; size = 4
tv87 = -148						; size = 4
tv216 = -144						; size = 4
_this$ = -140						; size = 4
$T372788 = -136						; size = 4
$T372787 = -132						; size = 4
$T372786 = -128						; size = 4
$T372785 = -124						; size = 4
$T372784 = -120						; size = 4
_cmd$ = -116						; size = 16
$T155812 = -100						; size = 28
$T155810 = -72						; size = 28
$T155808 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sGuID$ = 8						; size = 28
_name$ = 36						; size = 28
_admin$ = 64						; size = 28
_reason$ = 92						; size = 28
_bAddToDB$ = 120					; size = 1
?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z PROC ; Battlefield::game::player_ban, COMDAT
; _this$ = ecx
; Line 1094
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 160				; 000000a0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 1098
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1099
	push	OFFSET $SG-630
	lea	ecx, DWORD PTR $T155808[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	eax, DWORD PTR $T155808[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T155808[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1100
	push	OFFSET $SG-631
	lea	ecx, DWORD PTR $T155810[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T155810[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T155810[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1101
	lea	edx, DWORD PTR _sGuID$[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1102
	push	OFFSET $SG-632
	lea	ecx, DWORD PTR $T155812[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	eax, DWORD PTR $T155812[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T155812[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1103
	lea	ecx, DWORD PTR _reason$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
; Line 1104
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T372784[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1105
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1107
	movzx	eax, BYTE PTR _bAddToDB$[ebp]
	test	eax, eax
	je	$LN1@player_ban
; Line 1108
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372785[ebp], esp
	lea	edx, DWORD PTR _reason$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372786[ebp], esp
	lea	edx, DWORD PTR _admin$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv221[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::getAdminID
	mov	DWORD PTR tv222[ebp], eax
	mov	ecx, DWORD PTR tv222[ebp]
	push	ecx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372787[ebp], esp
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv225[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372788[ebp], esp
	lea	edx, DWORD PTR _sGuID$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv228[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?addBan@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0I0@Z ; Database::SQLite::addBan
$LN1@player_ban:
; Line 1112
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sGuID$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _admin$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _reason$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	116					; 00000074H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$0:
	lea	ecx, DWORD PTR _reason$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$1:
	lea	ecx, DWORD PTR _admin$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$2:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$3:
	lea	ecx, DWORD PTR _sGuID$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$4:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$5:
	lea	ecx, DWORD PTR $T155808[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$6:
	lea	ecx, DWORD PTR $T155810[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$7:
	lea	ecx, DWORD PTR $T155812[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$9:
	mov	ecx, DWORD PTR $T372785[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z$11:
	mov	ecx, DWORD PTR $T372787[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z ENDP ; Battlefield::game::player_ban
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c010000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::ingameCmd
EXTRN	__chkstk:PROC
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@c010000000000000
CONST	SEGMENT
__real@c010000000000000 DQ 0c010000000000000r	; -4
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$9
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$12
	DD	0aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$13
	DD	0bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$14
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$14
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$16
	DD	0fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$17
	DD	010H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$18
	DD	011H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$19
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$18
	DD	013H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$19
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$22
	DD	015H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$23
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$25
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$27
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$29
	DD	019H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$30
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$33
	DD	01bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$34
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$36
	DD	01dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$37
	DD	01eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$38
	DD	01fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$39
	DD	020H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$40
	DD	021H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$41
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$38
	DD	023H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$39
	DD	024H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$40
	DD	025H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$41
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$43
	DD	027H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$44
	DD	028H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$45
	DD	029H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$46
	DD	028H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$48
	DD	02bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$49
	DD	02cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$50
	DD	028H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$52
	DD	028H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$54
	DD	02fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$55
	DD	028H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$57
	DD	031H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$58
	DD	032H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$59
	DD	033H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$60
	DD	034H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$61
	DD	035H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$62
	DD	028H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$59
	DD	037H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$60
	DD	038H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$61
	DD	039H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$62
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$64
	DD	03bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$65
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$67
	DD	03dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$68
	DD	03eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$69
	DD	03fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$70
	DD	03fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$72
	DD	03fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$74
	DD	042H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$75
	DD	03fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$77
	DD	044H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$78
	DD	045H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$79
	DD	046H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$80
	DD	047H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$81
	DD	048H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$82
	DD	03fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$79
	DD	04aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$80
	DD	04bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$81
	DD	04cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$82
	DD	03dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$84
	DD	04eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$85
	DD	04fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$86
	DD	050H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$87
	DD	051H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$88
	DD	052H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$89
	DD	03dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$86
	DD	054H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$87
	DD	055H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$88
	DD	056H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$89
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$91
	DD	058H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$92
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$94
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$96
	DD	05bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$97
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$99
	DD	05dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$100
	DD	05eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$101
	DD	05fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$102
	DD	060H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$103
	DD	05eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$105
	DD	062H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$106
	DD	063H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$107
	DD	05eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$107
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$109
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$111
	DD	067H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$112
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$114
	DD	069H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$115
	DD	06aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$116
	DD	06bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$117
	DD	06cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$118
	DD	06aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$120
	DD	06eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$121
	DD	06fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$122
	DD	06aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$122
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$124
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$127
	DD	073H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$128
	DD	074H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$129
	DD	075H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$130
	DD	076H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$131
	DD	077H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$132
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$129
	DD	079H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$130
	DD	07aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$131
	DD	07bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$132
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$134
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$137
	DD	07eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$138
	DD	07fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$139
	DD	080H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$140
	DD	081H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$141
	DD	082H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$142
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$139
	DD	084H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$140
	DD	085H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$141
	DD	086H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$142
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$144
	DD	088H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$145
	DD	089H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$146
	DD	08aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$147
	DD	089H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$149
	DD	08cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$150
	DD	08dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$151
	DD	089H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$153
	DD	08fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$154
	DD	090H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$155
	DD	089H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$157
	DD	092H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$158
	DD	089H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$160
	DD	094H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$161
	DD	095H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$162
	DD	096H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$163
	DD	097H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$164
	DD	098H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$165
	DD	089H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$162
	DD	09aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$163
	DD	09bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$164
	DD	09cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$165
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$167
	DD	09eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$168
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$170
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$172
	DD	0a1H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$173
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$175
	DD	0a3H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$176
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$178
	DD	0a5H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$179
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$181
	DD	0a7H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$182
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$184
	DD	0a9H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$185
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$187
	DD	0abH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$188
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$190
	DD	0adH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$191
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$193
	DD	0afH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$194
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$196
	DD	0b1H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$197
	DD	0b2H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$198
	DD	0b3H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$199
	DD	0b4H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$200
	DD	0b5H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$201
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$198
	DD	0b7H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$199
	DD	0b8H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$200
	DD	0b9H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$201
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$203
	DD	0bbH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$204
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$206
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$208
	DD	0beH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$209
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$211
	DD	0c0H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$212
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$214
	DD	0c2H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$215
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$217
	DD	0c4H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$218
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$220
	DD	0c6H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$221
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$223
	DD	0c8H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$224
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$226
	DD	0caH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$227
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$229
	DD	0ccH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$230
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$232
	DD	0ceH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$233
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$235
	DD	0d0H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$236
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$238
	DD	0d2H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$239
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$241
	DD	0d4H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$242
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$244
	DD	0d6H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$245
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$247
	DD	0d8H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$248
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$250
	DD	0daH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$251
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$253
	DD	0dcH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$254
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$256
	DD	0deH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$257
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$259
	DD	0e0H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$260
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$262
	DD	0e2H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$263
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$265
	DD	0e4H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$266
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$268
	DD	0e6H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$269
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$271
	DD	0e8H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$272
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$274
	DD	0eaH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$275
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$277
	DD	0ecH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$278
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$280
	DD	0eeH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$281
	DD	0efH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$282
	DD	0f0H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$283
	DD	0f1H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$284
	DD	0f2H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$285
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$282
	DD	0f4H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$283
	DD	0f5H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$284
	DD	0f6H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$285
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$287
	DD	0f8H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$288
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$290
	DD	0faH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$291
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$293
	DD	0fcH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$294
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$296
	DD	0feH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$297
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$299
	DD	0100H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$300
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$302
	DD	0102H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$303
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$305
	DD	0104H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$306
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$308
	DD	0106H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$309
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$311
	DD	0108H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$312
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$314
	DD	010aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$315
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$317
	DD	010cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$318
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$320
	DD	010eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$321
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$323
	DD	0110H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$324
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$326
	DD	0112H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$327
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$329
	DD	0114H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$330
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$332
	DD	0116H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$333
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$335
	DD	0118H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$336
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$338
	DD	011aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$339
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$341
	DD	011cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$342
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$344
	DD	011eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$345
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$347
	DD	0120H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$348
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$350
	DD	0122H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$351
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$353
	DD	0124H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$354
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$356
	DD	0126H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$357
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$359
	DD	0128H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$360
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$362
	DD	012aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$363
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$365
	DD	012cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$366
	DD	012dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$367
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$367
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$369
	DD	0130H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$370
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$372
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$374
	DD	0133H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$375
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$377
	DD	0135H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$378
	DD	0136H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$379
	DD	0137H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$380
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$379
	DD	0139H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$380
	DD	06H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$382
	DD	013bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$383
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$385
	DD	013dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$386
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$391
	DD	013fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$392
	DD	0140H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$393
	DD	0141H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$394
	DD	0140H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$396
	DD	0140H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$397
	DD	0144H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$398
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$400
	DD	0146H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$401
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$403
	DD	0148H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$404
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$406
	DD	014aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$407
	DD	014bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$408
	DD	014bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$409
	DD	014bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$410
	DD	014eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$411
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$413
	DD	0150H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$414
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$416
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$418
	DD	0153H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$419
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$421
	DD	0155H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$422
	DD	0156H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$423
	DD	0157H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$424
	DD	0158H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$425
	DD	0159H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$426
	DD	015aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$427
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$429
	DD	015cH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$430
	DD	015dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$431
	DD	015eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$432
	DD	015fH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$433
	DD	0160H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$434
	DD	0161H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$435
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$437
	DD	0163H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$438
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$440
	DD	0165H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$441
	DD	0166H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$442
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$442
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$444
	DD	0169H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$445
	DD	016aH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$446
	DD	016bH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$447
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$450
	DD	016dH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$451
	DD	016eH
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$452
	DD	02H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$455
	DD	0170H
	DD	FLAT:__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$456
__ehfuncinfo$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z DD 019930522H
	DD	0172H
	DD	FLAT:__unwindtable$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
_TEXT	SEGMENT
tv8471 = -7220						; size = 4
tv8469 = -7216						; size = 4
tv8468 = -7212						; size = 4
tv8465 = -7208						; size = 4
tv8847 = -7204						; size = 4
tv8462 = -7200						; size = 4
tv8846 = -7196						; size = 4
tv8460 = -7192						; size = 4
tv8455 = -7188						; size = 4
tv8458 = -7184						; size = 4
tv8454 = -7180						; size = 4
tv8844 = -7176						; size = 4
tv8451 = -7172						; size = 4
tv8843 = -7168						; size = 4
tv8448 = -7164						; size = 4
tv8842 = -7160						; size = 4
tv8446 = -7156						; size = 4
tv8441 = -7152						; size = 4
tv8444 = -7148						; size = 4
tv8440 = -7144						; size = 4
tv8839 = -7140						; size = 4
tv8437 = -7136						; size = 4
tv8838 = -7132						; size = 4
tv8434 = -7128						; size = 4
tv7005 = -7124						; size = 4
tv8431 = -7120						; size = 4
tv8428 = -7116						; size = 4
tv8836 = -7112						; size = 4
tv8426 = -7108						; size = 4
tv8835 = -7104						; size = 4
tv8423 = -7100						; size = 4
tv8834 = -7096						; size = 4
tv8421 = -7092						; size = 4
tv8418 = -7088						; size = 4
tv8833 = -7084						; size = 4
tv8415 = -7080						; size = 4
tv8832 = -7076						; size = 4
tv8413 = -7072						; size = 4
tv8411 = -7068						; size = 4
tv8831 = -7064						; size = 4
tv8409 = -7060						; size = 4
tv8830 = -7056						; size = 4
tv8407 = -7052						; size = 4
tv8829 = -7048						; size = 4
tv8405 = -7044						; size = 4
tv8828 = -7040						; size = 4
tv8403 = -7036						; size = 4
tv8827 = -7032						; size = 4
tv8401 = -7028						; size = 4
tv8826 = -7024						; size = 4
tv8399 = -7020						; size = 4
tv8825 = -7016						; size = 4
tv8397 = -7012						; size = 4
tv8395 = -7008						; size = 4
tv8824 = -7004						; size = 4
tv8393 = -7000						; size = 4
tv8823 = -6996						; size = 4
tv8391 = -6992						; size = 4
tv8822 = -6988						; size = 4
tv8389 = -6984						; size = 4
tv8821 = -6980						; size = 4
tv8387 = -6976						; size = 4
tv8820 = -6972						; size = 4
tv8385 = -6968						; size = 4
tv8819 = -6964						; size = 4
tv8383 = -6960						; size = 4
tv8818 = -6956						; size = 4
tv8381 = -6952						; size = 4
tv8378 = -6948						; size = 4
tv8817 = -6944						; size = 4
tv8375 = -6940						; size = 4
tv8816 = -6936						; size = 4
tv8373 = -6932						; size = 4
tv8370 = -6928						; size = 4
tv8815 = -6924						; size = 4
tv8368 = -6920						; size = 4
tv8365 = -6916						; size = 4
tv8814 = -6912						; size = 4
tv8362 = -6908						; size = 4
tv8813 = -6904						; size = 4
tv8360 = -6900						; size = 4
tv8357 = -6896						; size = 4
tv8811 = -6892						; size = 4
tv8354 = -6888						; size = 4
tv8810 = -6884						; size = 4
tv8352 = -6880						; size = 4
tv6474 = -6876						; size = 4
tv8350 = -6872						; size = 4
tv6500 = -6868						; size = 4
tv8346 = -6864						; size = 4
tv8343 = -6860						; size = 4
tv8809 = -6856						; size = 4
tv8340 = -6852						; size = 4
tv8808 = -6848						; size = 4
tv8338 = -6844						; size = 4
tv8335 = -6840						; size = 4
tv8807 = -6836						; size = 4
tv8332 = -6832						; size = 4
tv8806 = -6828						; size = 4
tv8330 = -6824						; size = 4
tv8327 = -6820						; size = 4
tv8804 = -6816						; size = 4
tv8324 = -6812						; size = 4
tv8803 = -6808						; size = 4
tv8322 = -6804						; size = 4
tv8802 = -6800						; size = 4
tv8320 = -6796						; size = 4
tv8317 = -6792						; size = 4
tv6219 = -6788						; size = 4
tv8314 = -6784						; size = 4
tv6223 = -6780						; size = 4
tv8310 = -6776						; size = 4
tv8308 = -6772						; size = 4
tv8305 = -6768						; size = 4
tv8302 = -6764						; size = 4
tv8299 = -6760						; size = 4
tv8800 = -6756						; size = 4
tv8296 = -6752						; size = 4
tv8799 = -6748						; size = 4
tv8294 = -6744						; size = 4
tv8291 = -6740						; size = 4
tv8798 = -6736						; size = 4
tv8288 = -6732						; size = 4
tv8797 = -6728						; size = 4
tv8286 = -6724						; size = 4
tv8283 = -6720						; size = 4
tv8795 = -6716						; size = 4
tv8281 = -6712						; size = 4
tv8794 = -6708						; size = 4
tv8279 = -6704						; size = 4
tv8793 = -6700						; size = 4
tv8276 = -6696						; size = 4
tv8792 = -6692						; size = 4
tv8274 = -6688						; size = 4
tv8271 = -6684						; size = 4
tv8791 = -6680						; size = 4
tv8268 = -6676						; size = 4
tv8790 = -6672						; size = 4
tv8266 = -6668						; size = 4
tv8263 = -6664						; size = 4
tv8789 = -6660						; size = 4
tv8261 = -6656						; size = 4
tv8258 = -6652						; size = 4
tv8788 = -6648						; size = 4
tv8255 = -6644						; size = 4
tv8787 = -6640						; size = 4
tv8253 = -6636						; size = 4
tv8250 = -6632						; size = 4
tv8785 = -6628						; size = 4
tv8248 = -6624						; size = 4
tv8784 = -6620						; size = 4
tv8245 = -6616						; size = 4
tv8783 = -6612						; size = 4
tv8239 = -6608						; size = 4
tv8236 = -6604						; size = 4
tv8782 = -6600						; size = 4
tv8233 = -6596						; size = 4
tv8781 = -6592						; size = 4
tv8231 = -6588						; size = 4
tv8228 = -6584						; size = 4
tv8780 = -6580						; size = 4
tv8225 = -6576						; size = 4
tv8779 = -6572						; size = 4
tv8223 = -6568						; size = 4
tv8220 = -6564						; size = 4
tv8778 = -6560						; size = 4
tv8217 = -6556						; size = 4
tv8777 = -6552						; size = 4
tv8215 = -6548						; size = 4
tv8212 = -6544						; size = 4
tv8776 = -6540						; size = 4
tv8209 = -6536						; size = 4
tv8775 = -6532						; size = 4
tv8207 = -6528						; size = 4
tv8204 = -6524						; size = 4
tv8774 = -6520						; size = 4
tv8201 = -6516						; size = 4
tv8773 = -6512						; size = 4
tv8199 = -6508						; size = 4
tv8196 = -6504						; size = 4
tv8772 = -6500						; size = 4
tv8193 = -6496						; size = 4
tv8771 = -6492						; size = 4
tv8191 = -6488						; size = 4
tv8188 = -6484						; size = 4
tv8770 = -6480						; size = 4
tv8185 = -6476						; size = 4
tv8769 = -6472						; size = 4
tv8183 = -6468						; size = 4
tv8180 = -6464						; size = 4
tv8768 = -6460						; size = 4
tv8177 = -6456						; size = 4
tv8767 = -6452						; size = 4
tv8175 = -6448						; size = 4
tv8172 = -6444						; size = 4
tv8766 = -6440						; size = 4
tv8169 = -6436						; size = 4
tv8765 = -6432						; size = 4
tv8167 = -6428						; size = 4
tv8164 = -6424						; size = 4
tv8764 = -6420						; size = 4
tv8161 = -6416						; size = 4
tv8763 = -6412						; size = 4
tv8159 = -6408						; size = 4
tv8156 = -6404						; size = 4
tv8762 = -6400						; size = 4
tv8153 = -6396						; size = 4
tv8761 = -6392						; size = 4
tv8151 = -6388						; size = 4
tv8148 = -6384						; size = 4
tv8760 = -6380						; size = 4
tv8145 = -6376						; size = 4
tv8759 = -6372						; size = 4
tv8143 = -6368						; size = 4
tv8140 = -6364						; size = 4
tv8758 = -6360						; size = 4
tv8137 = -6356						; size = 4
tv8757 = -6352						; size = 4
tv8135 = -6348						; size = 4
tv8132 = -6344						; size = 4
tv8756 = -6340						; size = 4
tv8129 = -6336						; size = 4
tv8755 = -6332						; size = 4
tv8127 = -6328						; size = 4
tv8124 = -6324						; size = 4
tv8754 = -6320						; size = 4
tv8121 = -6316						; size = 4
tv8753 = -6312						; size = 4
tv8119 = -6308						; size = 4
tv8116 = -6304						; size = 4
tv8752 = -6300						; size = 4
tv8113 = -6296						; size = 4
tv8751 = -6292						; size = 4
tv8111 = -6288						; size = 4
tv8108 = -6284						; size = 4
tv8750 = -6280						; size = 4
tv8105 = -6276						; size = 4
tv8749 = -6272						; size = 4
tv8103 = -6268						; size = 4
tv8100 = -6264						; size = 4
tv8748 = -6260						; size = 4
tv8097 = -6256						; size = 4
tv8747 = -6252						; size = 4
tv8095 = -6248						; size = 4
tv8092 = -6244						; size = 4
tv8746 = -6240						; size = 4
tv8089 = -6236						; size = 4
tv8745 = -6232						; size = 4
tv8087 = -6228						; size = 4
tv8084 = -6224						; size = 4
tv8744 = -6220						; size = 4
tv8081 = -6216						; size = 4
tv8743 = -6212						; size = 4
tv8079 = -6208						; size = 4
tv8076 = -6204						; size = 4
tv8742 = -6200						; size = 4
tv8073 = -6196						; size = 4
tv8741 = -6192						; size = 4
tv8071 = -6188						; size = 4
tv8068 = -6184						; size = 4
tv8740 = -6180						; size = 4
tv8065 = -6176						; size = 4
tv8739 = -6172						; size = 4
tv8063 = -6168						; size = 4
tv8060 = -6164						; size = 4
tv8737 = -6160						; size = 4
tv8057 = -6156						; size = 4
tv8736 = -6152						; size = 4
tv8055 = -6148						; size = 4
tv8052 = -6144						; size = 4
tv8734 = -6140						; size = 4
tv8049 = -6136						; size = 4
tv8733 = -6132						; size = 4
tv8047 = -6128						; size = 4
tv8044 = -6124						; size = 4
tv8731 = -6120						; size = 4
tv8041 = -6116						; size = 4
tv8730 = -6112						; size = 4
tv8039 = -6108						; size = 4
tv8036 = -6104						; size = 4
tv8728 = -6100						; size = 4
tv8033 = -6096						; size = 4
tv8727 = -6092						; size = 4
tv8031 = -6088						; size = 4
tv8028 = -6084						; size = 4
tv8725 = -6080						; size = 4
tv8026 = -6076						; size = 4
tv8724 = -6072						; size = 4
tv8024 = -6068						; size = 4
tv8723 = -6064						; size = 4
tv8022 = -6060						; size = 4
tv8722 = -6056						; size = 4
tv8020 = -6052						; size = 4
tv8721 = -6048						; size = 4
tv8017 = -6044						; size = 4
tv8720 = -6040						; size = 4
tv8011 = -6036						; size = 4
tv8008 = -6032						; size = 4
tv8718 = -6028						; size = 4
tv8005 = -6024						; size = 4
tv8717 = -6020						; size = 4
tv8003 = -6016						; size = 4
tv8000 = -6012						; size = 4
tv8715 = -6008						; size = 4
tv7997 = -6004						; size = 4
tv8714 = -6000						; size = 4
tv7995 = -5996						; size = 4
tv7992 = -5992						; size = 4
tv8712 = -5988						; size = 4
tv7989 = -5984						; size = 4
tv8711 = -5980						; size = 4
tv7987 = -5976						; size = 4
tv7984 = -5972						; size = 4
tv8709 = -5968						; size = 4
tv7981 = -5964						; size = 4
tv8708 = -5960						; size = 4
tv7979 = -5956						; size = 4
tv7976 = -5952						; size = 4
tv8706 = -5948						; size = 4
tv7973 = -5944						; size = 4
tv8705 = -5940						; size = 4
tv7971 = -5936						; size = 4
tv7968 = -5932						; size = 4
tv8703 = -5928						; size = 4
tv7965 = -5924						; size = 4
tv8702 = -5920						; size = 4
tv7963 = -5916						; size = 4
tv7960 = -5912						; size = 4
tv8700 = -5908						; size = 4
tv7957 = -5904						; size = 4
tv8699 = -5900						; size = 4
tv7955 = -5896						; size = 4
tv7952 = -5892						; size = 4
tv8697 = -5888						; size = 4
tv7949 = -5884						; size = 4
tv8696 = -5880						; size = 4
tv7947 = -5876						; size = 4
tv7944 = -5872						; size = 4
tv8694 = -5868						; size = 4
tv7941 = -5864						; size = 4
tv8693 = -5860						; size = 4
tv7939 = -5856						; size = 4
tv7936 = -5852						; size = 4
tv8691 = -5848						; size = 4
tv7933 = -5844						; size = 4
tv8690 = -5840						; size = 4
tv7931 = -5836						; size = 4
tv7928 = -5832						; size = 4
tv8688 = -5828						; size = 4
tv7925 = -5824						; size = 4
tv8687 = -5820						; size = 4
tv7923 = -5816						; size = 4
tv7920 = -5812						; size = 4
tv8685 = -5808						; size = 4
tv7917 = -5804						; size = 4
tv8684 = -5800						; size = 4
tv7915 = -5796						; size = 4
tv7912 = -5792						; size = 4
tv8682 = -5788						; size = 4
tv7909 = -5784						; size = 4
tv8681 = -5780						; size = 4
tv7907 = -5776						; size = 4
tv7904 = -5772						; size = 4
tv8679 = -5768						; size = 4
tv7901 = -5764						; size = 4
tv8678 = -5760						; size = 4
tv7899 = -5756						; size = 4
tv7896 = -5752						; size = 4
tv8676 = -5748						; size = 4
tv7893 = -5744						; size = 4
tv8675 = -5740						; size = 4
tv7891 = -5736						; size = 4
tv7888 = -5732						; size = 4
tv8673 = -5728						; size = 4
tv7885 = -5724						; size = 4
tv8672 = -5720						; size = 4
tv7883 = -5716						; size = 4
tv7880 = -5712						; size = 4
tv8670 = -5708						; size = 4
tv7877 = -5704						; size = 4
tv8669 = -5700						; size = 4
tv7875 = -5696						; size = 4
tv7872 = -5692						; size = 4
tv8667 = -5688						; size = 4
tv7869 = -5684						; size = 4
tv8666 = -5680						; size = 4
tv7867 = -5676						; size = 4
tv7864 = -5672						; size = 4
tv8664 = -5668						; size = 4
tv7861 = -5664						; size = 4
tv8663 = -5660						; size = 4
tv7859 = -5656						; size = 4
tv7856 = -5652						; size = 4
tv8661 = -5648						; size = 4
tv7853 = -5644						; size = 4
tv8660 = -5640						; size = 4
tv7851 = -5636						; size = 4
tv7848 = -5632						; size = 4
tv8658 = -5628						; size = 4
tv7845 = -5624						; size = 4
tv8657 = -5620						; size = 4
tv7843 = -5616						; size = 4
tv7840 = -5612						; size = 4
tv8655 = -5608						; size = 4
tv7837 = -5604						; size = 4
tv8654 = -5600						; size = 4
tv7835 = -5596						; size = 4
tv7832 = -5592						; size = 4
tv8652 = -5588						; size = 4
tv7829 = -5584						; size = 4
tv8651 = -5580						; size = 4
tv7827 = -5576						; size = 4
tv7824 = -5572						; size = 4
tv8649 = -5568						; size = 4
tv7821 = -5564						; size = 4
tv8648 = -5560						; size = 4
tv7819 = -5556						; size = 4
tv7816 = -5552						; size = 4
tv8646 = -5548						; size = 4
tv7812 = -5544						; size = 4
tv7809 = -5540						; size = 4
tv8644 = -5536						; size = 4
tv7806 = -5532						; size = 4
tv8643 = -5528						; size = 4
tv7804 = -5524						; size = 4
tv7801 = -5520						; size = 4
tv8641 = -5516						; size = 4
tv7799 = -5512						; size = 4
tv8640 = -5508						; size = 4
tv7797 = -5504						; size = 4
tv8639 = -5500						; size = 4
tv7795 = -5496						; size = 4
tv8638 = -5492						; size = 4
tv7793 = -5488						; size = 4
tv8637 = -5484						; size = 4
tv7790 = -5480						; size = 4
tv8636 = -5476						; size = 4
tv7784 = -5472						; size = 4
tv7781 = -5468						; size = 4
tv8634 = -5464						; size = 4
tv7778 = -5460						; size = 4
tv8633 = -5456						; size = 4
tv7776 = -5452						; size = 4
tv7773 = -5448						; size = 4
tv8631 = -5444						; size = 4
tv7770 = -5440						; size = 4
tv8630 = -5436						; size = 4
tv7768 = -5432						; size = 4
tv7765 = -5428						; size = 4
tv8628 = -5424						; size = 4
tv7762 = -5420						; size = 4
tv8627 = -5416						; size = 4
tv7760 = -5412						; size = 4
tv7757 = -5408						; size = 4
tv8625 = -5404						; size = 4
tv7754 = -5400						; size = 4
tv8624 = -5396						; size = 4
tv7752 = -5392						; size = 4
tv7749 = -5388						; size = 4
tv8622 = -5384						; size = 4
tv7746 = -5380						; size = 4
tv8621 = -5376						; size = 4
tv7744 = -5372						; size = 4
tv7741 = -5368						; size = 4
tv8619 = -5364						; size = 4
tv7738 = -5360						; size = 4
tv8618 = -5356						; size = 4
tv7736 = -5352						; size = 4
tv7733 = -5348						; size = 4
tv8616 = -5344						; size = 4
tv7730 = -5340						; size = 4
tv8615 = -5336						; size = 4
tv7728 = -5332						; size = 4
tv7725 = -5328						; size = 4
tv8613 = -5324						; size = 4
tv7722 = -5320						; size = 4
tv8612 = -5316						; size = 4
tv7720 = -5312						; size = 4
tv7717 = -5308						; size = 4
tv8610 = -5304						; size = 4
tv7713 = -5300						; size = 4
tv7710 = -5296						; size = 4
tv8608 = -5292						; size = 4
tv7707 = -5288						; size = 4
tv8607 = -5284						; size = 4
tv7705 = -5280						; size = 4
tv7702 = -5276						; size = 4
tv8605 = -5272						; size = 4
tv7700 = -5268						; size = 4
tv8604 = -5264						; size = 4
tv7698 = -5260						; size = 4
tv8603 = -5256						; size = 4
tv7696 = -5252						; size = 4
tv8602 = -5248						; size = 4
tv7694 = -5244						; size = 4
tv8601 = -5240						; size = 4
tv7691 = -5236						; size = 4
tv8600 = -5232						; size = 4
tv7683 = -5228						; size = 4
tv7680 = -5224						; size = 4
tv8598 = -5220						; size = 4
tv7677 = -5216						; size = 4
tv8597 = -5212						; size = 4
tv7675 = -5208						; size = 4
tv7672 = -5204						; size = 4
tv8595 = -5200						; size = 4
tv7669 = -5196						; size = 4
tv8594 = -5192						; size = 4
tv7666 = -5188						; size = 4
tv8593 = -5184						; size = 4
tv7663 = -5180						; size = 4
tv7660 = -5176						; size = 4
tv8591 = -5172						; size = 4
tv7656 = -5168						; size = 4
tv8590 = -5164						; size = 4
tv7654 = -5160						; size = 4
tv8589 = -5156						; size = 4
tv7646 = -5152						; size = 4
tv7643 = -5148						; size = 4
tv2251 = -5144						; size = 4
tv7640 = -5140						; size = 4
tv2258 = -5136						; size = 4
tv7636 = -5132						; size = 4
tv7633 = -5128						; size = 4
tv8586 = -5124						; size = 4
tv7631 = -5120						; size = 4
tv8585 = -5116						; size = 4
tv7629 = -5112						; size = 4
tv8584 = -5108						; size = 4
tv7627 = -5104						; size = 4
tv8583 = -5100						; size = 4
tv7625 = -5096						; size = 4
tv8582 = -5092						; size = 4
tv7622 = -5088						; size = 4
tv8581 = -5084						; size = 4
tv7616 = -5080						; size = 4
tv7611 = -5076						; size = 4
tv7608 = -5072						; size = 4
tv8579 = -5068						; size = 4
tv7604 = -5064						; size = 4
tv7601 = -5060						; size = 4
tv8577 = -5056						; size = 4
tv7599 = -5052						; size = 4
tv8576 = -5048						; size = 4
tv7597 = -5044						; size = 4
tv8575 = -5040						; size = 4
tv7595 = -5036						; size = 4
tv8574 = -5032						; size = 4
tv7593 = -5028						; size = 4
tv8573 = -5024						; size = 4
tv7590 = -5020						; size = 4
tv8572 = -5016						; size = 4
tv7584 = -5012						; size = 4
tv7579 = -5008						; size = 4
tv7576 = -5004						; size = 4
tv8570 = -5000						; size = 4
tv7572 = -4996						; size = 4
tv7569 = -4992						; size = 4
tv8568 = -4988						; size = 4
tv7567 = -4984						; size = 4
tv8567 = -4980						; size = 4
tv7564 = -4976						; size = 4
tv8566 = -4972						; size = 4
tv7562 = -4968						; size = 4
tv7559 = -4964						; size = 4
tv8564 = -4960						; size = 4
tv7555 = -4956						; size = 4
tv1797 = -4952						; size = 4
tv7553 = -4948						; size = 4
tv1807 = -4944						; size = 4
tv7549 = -4940						; size = 4
tv7546 = -4936						; size = 4
tv8562 = -4932						; size = 4
tv7543 = -4928						; size = 4
tv8561 = -4924						; size = 4
tv7541 = -4920						; size = 4
tv7538 = -4916						; size = 4
tv8559 = -4912						; size = 4
tv7534 = -4908						; size = 4
tv7531 = -4904						; size = 4
tv8557 = -4900						; size = 4
tv7529 = -4896						; size = 4
tv8556 = -4892						; size = 4
tv7526 = -4888						; size = 4
tv8555 = -4884						; size = 4
tv7524 = -4880						; size = 4
tv7521 = -4876						; size = 4
tv8553 = -4872						; size = 4
tv7517 = -4868						; size = 4
tv1536 = -4864						; size = 4
tv7515 = -4860						; size = 4
tv1546 = -4856						; size = 4
tv7511 = -4852						; size = 4
tv7508 = -4848						; size = 4
tv8551 = -4844						; size = 4
tv7505 = -4840						; size = 4
tv8550 = -4836						; size = 4
tv7503 = -4832						; size = 4
tv7500 = -4828						; size = 4
tv8548 = -4824						; size = 4
tv7496 = -4820						; size = 4
tv7493 = -4816						; size = 4
tv8546 = -4812						; size = 4
tv7490 = -4808						; size = 4
tv8545 = -4804						; size = 4
tv7488 = -4800						; size = 4
tv7485 = -4796						; size = 4
tv8543 = -4792						; size = 4
tv7483 = -4788						; size = 4
tv8542 = -4784						; size = 4
tv7481 = -4780						; size = 4
tv8541 = -4776						; size = 4
tv7479 = -4772						; size = 4
tv8540 = -4768						; size = 4
tv7477 = -4764						; size = 4
tv8539 = -4760						; size = 4
tv7474 = -4756						; size = 4
tv8538 = -4752						; size = 4
tv7472 = -4748						; size = 4
tv7469 = -4744						; size = 4
tv8536 = -4740						; size = 4
tv7467 = -4736						; size = 4
tv8535 = -4732						; size = 4
tv7465 = -4728						; size = 4
tv8534 = -4724						; size = 4
tv7463 = -4720						; size = 4
tv8533 = -4716						; size = 4
tv7461 = -4712						; size = 4
tv8532 = -4708						; size = 4
tv7458 = -4704						; size = 4
tv8531 = -4700						; size = 4
tv7449 = -4696						; size = 4
tv7446 = -4692						; size = 4
tv8529 = -4688						; size = 4
tv7443 = -4684						; size = 4
tv8528 = -4680						; size = 4
tv7441 = -4676						; size = 4
tv7438 = -4672						; size = 4
tv1082 = -4668						; size = 4
tv7436 = -4664						; size = 4
tv7433 = -4660						; size = 4
tv1101 = -4656						; size = 4
tv7426 = -4652						; size = 4
tv7423 = -4648						; size = 4
tv8525 = -4644						; size = 4
tv7420 = -4640						; size = 4
tv8524 = -4636						; size = 4
tv7418 = -4632						; size = 4
tv7415 = -4628						; size = 4
tv8522 = -4624						; size = 4
tv7413 = -4620						; size = 4
tv8521 = -4616						; size = 4
tv7411 = -4612						; size = 4
tv8520 = -4608						; size = 4
tv7409 = -4604						; size = 4
tv8519 = -4600						; size = 4
tv7407 = -4596						; size = 4
tv8518 = -4592						; size = 4
tv7404 = -4588						; size = 4
tv8517 = -4584						; size = 4
tv7396 = -4580						; size = 4
tv7393 = -4576						; size = 4
tv8515 = -4572						; size = 4
tv7390 = -4568						; size = 4
tv8514 = -4564						; size = 4
tv7388 = -4560						; size = 4
tv7385 = -4556						; size = 4
tv8512 = -4552						; size = 4
tv7383 = -4548						; size = 4
tv7380 = -4544						; size = 4
tv8510 = -4540						; size = 4
tv7376 = -4536						; size = 4
tv8509 = -4532						; size = 4
tv7374 = -4528						; size = 4
tv8508 = -4524						; size = 4
tv7366 = -4520						; size = 4
tv7363 = -4516						; size = 4
tv695 = -4512						; size = 4
tv7360 = -4508						; size = 4
tv702 = -4504						; size = 4
tv7356 = -4500						; size = 4
tv7353 = -4496						; size = 4
tv8505 = -4492						; size = 4
tv7351 = -4488						; size = 4
tv8504 = -4484						; size = 4
tv7349 = -4480						; size = 4
tv8503 = -4476						; size = 4
tv7347 = -4472						; size = 4
tv8502 = -4468						; size = 4
tv7345 = -4464						; size = 4
tv8501 = -4460						; size = 4
tv7342 = -4456						; size = 4
tv8500 = -4452						; size = 4
tv7336 = -4448						; size = 4
tv7333 = -4444						; size = 4
tv8498 = -4440						; size = 4
tv7330 = -4436						; size = 4
tv8497 = -4432						; size = 4
tv7328 = -4428						; size = 4
tv7326 = -4424						; size = 4
tv7323 = -4420						; size = 4
tv8495 = -4416						; size = 4
tv7320 = -4412						; size = 4
tv8494 = -4408						; size = 4
tv7318 = -4404						; size = 4
tv7315 = -4400						; size = 4
tv8492 = -4396						; size = 4
tv7311 = -4392						; size = 4
tv7308 = -4388						; size = 4
tv8490 = -4384						; size = 4
tv7304 = -4380						; size = 4
tv7301 = -4376						; size = 4
tv8488 = -4372						; size = 4
tv7298 = -4368						; size = 4
tv8487 = -4364						; size = 4
tv7296 = -4360						; size = 4
tv7294 = -4356						; size = 4
tv7291 = -4352						; size = 4
tv8485 = -4348						; size = 4
tv7289 = -4344						; size = 4
tv8484 = -4340						; size = 4
tv7287 = -4336						; size = 4
tv8483 = -4332						; size = 4
tv7284 = -4328						; size = 4
tv8482 = -4324						; size = 4
tv7278 = -4320						; size = 4
tv7275 = -4316						; size = 4
tv8480 = -4312						; size = 4
tv7273 = -4308						; size = 4
tv8479 = -4304						; size = 4
tv7271 = -4300						; size = 4
tv8478 = -4296						; size = 4
tv7268 = -4292						; size = 4
tv166 = -4288						; size = 4
tv7266 = -4284						; size = 4
tv7264 = -4280						; size = 4
tv174 = -4276						; size = 4
tv7260 = -4272						; size = 4
tv7259 = -4268						; size = 4
tv7257 = -4264						; size = 4
tv8477 = -4260						; size = 4
tv7255 = -4256						; size = 4
tv8476 = -4252						; size = 4
tv7253 = -4248						; size = 4
tv8475 = -4244						; size = 4
_this$ = -4240						; size = 4
$T373179 = -4236					; size = 4
$T373178 = -4232					; size = 4
$T373177 = -4228					; size = 4
$T373176 = -4224					; size = 4
$T373175 = -4220					; size = 4
$T373174 = -4216					; size = 4
$T373173 = -4212					; size = 4
$T373172 = -4208					; size = 4
$T373171 = -4204					; size = 4
$T373170 = -4200					; size = 4
$T373169 = -4196					; size = 4
$T373168 = -4192					; size = 4
$T373167 = -4188					; size = 4
$T373166 = -4184					; size = 4
$T373165 = -4180					; size = 4
$T373164 = -4176					; size = 4
$T373163 = -4172					; size = 4
$T373162 = -4168					; size = 4
$T373161 = -4164					; size = 4
$T373160 = -4160					; size = 4
$T373159 = -4156					; size = 4
$T373158 = -4152					; size = 4
$T373157 = -4148					; size = 4
$T373156 = -4144					; size = 4
$T373155 = -4140					; size = 4
$T373154 = -4136					; size = 4
$T373153 = -4132					; size = 4
$T373152 = -4128					; size = 4
$T373151 = -4124					; size = 4
$T373150 = -4120					; size = 4
$T373149 = -4116					; size = 4
$T373148 = -4112					; size = 4
$T373147 = -4108					; size = 4
$T373146 = -4104					; size = 4
$T373145 = -4100					; size = 4
$T373144 = -4096					; size = 4
$T373143 = -4092					; size = 4
$T373142 = -4088					; size = 4
$T373141 = -4084					; size = 4
$T373140 = -4080					; size = 4
$T373139 = -4076					; size = 4
$T373138 = -4072					; size = 4
$T373137 = -4068					; size = 4
$T373136 = -4064					; size = 4
$T373135 = -4060					; size = 4
$T373134 = -4056					; size = 4
$T373133 = -4052					; size = 4
$T373132 = -4048					; size = 4
$T373131 = -4044					; size = 4
$T373130 = -4040					; size = 4
$T373129 = -4036					; size = 4
$T373128 = -4032					; size = 4
$T373127 = -4028					; size = 4
$T373126 = -4024					; size = 4
$T373125 = -4020					; size = 4
$T373124 = -4016					; size = 4
$T373123 = -4012					; size = 4
$T373122 = -4008					; size = 4
$T373121 = -4004					; size = 8
$T373120 = -3992					; size = 4
$T373119 = -3988					; size = 4
$T373118 = -3984					; size = 4
$T373117 = -3980					; size = 4
$T373116 = -3976					; size = 4
$T373115 = -3972					; size = 4
$T373114 = -3968					; size = 4
$T373113 = -3964					; size = 4
$T373112 = -3960					; size = 4
$T373111 = -3956					; size = 4
$T373110 = -3952					; size = 4
$T373109 = -3948					; size = 4
$T373108 = -3944					; size = 4
$T373107 = -3940					; size = 4
$T373106 = -3936					; size = 4
$T373105 = -3932					; size = 4
$T373104 = -3928					; size = 4
$T373103 = -3924					; size = 4
$T373102 = -3920					; size = 4
$T373101 = -3916					; size = 4
$T373100 = -3912					; size = 4
$T373099 = -3908					; size = 4
$T373098 = -3904					; size = 4
$T373097 = -3900					; size = 4
$T373096 = -3896					; size = 4
$T373095 = -3892					; size = 4
$T373094 = -3888					; size = 4
$T373093 = -3884					; size = 4
$T373092 = -3880					; size = 4
$T373091 = -3876					; size = 4
$T373090 = -3872					; size = 4
$T373089 = -3868					; size = 4
$T373088 = -3864					; size = 4
$T373087 = -3860					; size = 4
$T373086 = -3856					; size = 4
$T373085 = -3852					; size = 4
$T373084 = -3848					; size = 4
$T373083 = -3844					; size = 4
$T373082 = -3840					; size = 4
$T373081 = -3836					; size = 4
$T373080 = -3832					; size = 4
$T373079 = -3828					; size = 4
$T373078 = -3824					; size = 4
$T373077 = -3820					; size = 4
$T373076 = -3816					; size = 4
$T373075 = -3812					; size = 4
$T373074 = -3808					; size = 4
$T373073 = -3804					; size = 4
$T373072 = -3800					; size = 4
$T373071 = -3796					; size = 4
$T373070 = -3792					; size = 4
$T373069 = -3788					; size = 4
$T373068 = -3784					; size = 4
$T373067 = -3780					; size = 4
$T373066 = -3776					; size = 4
$T373065 = -3772					; size = 4
$T373064 = -3768					; size = 4
$T373063 = -3764					; size = 4
$T373062 = -3760					; size = 4
$T373061 = -3756					; size = 4
$T373060 = -3752					; size = 4
$T373059 = -3748					; size = 4
$T373058 = -3744					; size = 4
$T373057 = -3740					; size = 4
$T373056 = -3736					; size = 4
$T373055 = -3732					; size = 4
$T373054 = -3728					; size = 4
$T373053 = -3724					; size = 4
$T373052 = -3720					; size = 4
$T373051 = -3716					; size = 4
$T373050 = -3712					; size = 4
$T373049 = -3708					; size = 4
$T373048 = -3704					; size = 4
$T373047 = -3700					; size = 4
$T373046 = -3696					; size = 4
$T373045 = -3692					; size = 4
$T373044 = -3688					; size = 4
$T373043 = -3684					; size = 4
$T373042 = -3680					; size = 4
$T373041 = -3676					; size = 4
$T373040 = -3672					; size = 4
$T373039 = -3668					; size = 4
$T373038 = -3664					; size = 4
$T373037 = -3660					; size = 4
$T373036 = -3656					; size = 4
$T373035 = -3652					; size = 4
$T373034 = -3648					; size = 4
$T373033 = -3644					; size = 4
$T373032 = -3640					; size = 4
$T373031 = -3636					; size = 4
$T373030 = -3632					; size = 4
$T373029 = -3628					; size = 4
$T373028 = -3624					; size = 4
$T373027 = -3620					; size = 4
$T373026 = -3616					; size = 4
$T373025 = -3612					; size = 4
$T373024 = -3608					; size = 4
$T373023 = -3604					; size = 4
$T373022 = -3600					; size = 4
$T373021 = -3596					; size = 4
$T373020 = -3592					; size = 4
$T373019 = -3588					; size = 4
$T373018 = -3584					; size = 4
$T373017 = -3580					; size = 4
$T373016 = -3576					; size = 4
$T373015 = -3572					; size = 4
$T373014 = -3568					; size = 4
$T373013 = -3564					; size = 4
$T373012 = -3560					; size = 4
$T373011 = -3556					; size = 4
$T373010 = -3552					; size = 4
$T373009 = -3548					; size = 4
$T373008 = -3544					; size = 4
$T373007 = -3540					; size = 4
$T373006 = -3536					; size = 4
$T373005 = -3532					; size = 4
$T373004 = -3528					; size = 4
$T373003 = -3524					; size = 4
$T373002 = -3520					; size = 4
$T373001 = -3516					; size = 4
$T373000 = -3512					; size = 4
$T372999 = -3508					; size = 4
$T372998 = -3504					; size = 4
$T372997 = -3500					; size = 4
$T372996 = -3496					; size = 4
$T372995 = -3492					; size = 4
$T372994 = -3488					; size = 4
$T372993 = -3484					; size = 4
$T372992 = -3480					; size = 4
$T372991 = -3476					; size = 4
$T372990 = -3472					; size = 4
$T372989 = -3468					; size = 4
$T372988 = -3464					; size = 4
$T372987 = -3460					; size = 4
$T372986 = -3456					; size = 4
$T372985 = -3452					; size = 4
$T372984 = -3448					; size = 4
$T372983 = -3444					; size = 4
$T372982 = -3440					; size = 4
$T372981 = -3436					; size = 4
$T372980 = -3432					; size = 4
$T372979 = -3428					; size = 4
$T372978 = -3424					; size = 4
$T372977 = -3420					; size = 4
$T372976 = -3416					; size = 4
$T372975 = -3412					; size = 4
$T372974 = -3408					; size = 4
$T372973 = -3404					; size = 4
$T372972 = -3400					; size = 4
$T372971 = -3396					; size = 4
$T372970 = -3392					; size = 4
$T372969 = -3388					; size = 4
$T372968 = -3384					; size = 4
$T372967 = -3380					; size = 4
$T372966 = -3376					; size = 4
$T372965 = -3372					; size = 4
$T372964 = -3368					; size = 4
$T372963 = -3364					; size = 4
$T372962 = -3360					; size = 4
$T372961 = -3356					; size = 4
$T372960 = -3352					; size = 4
$T372959 = -3348					; size = 4
$T372958 = -3344					; size = 4
$T372957 = -3340					; size = 4
$T372956 = -3336					; size = 4
$T372955 = -3332					; size = 4
$T372954 = -3328					; size = 4
$T372953 = -3324					; size = 4
$T372952 = -3320					; size = 4
$T372951 = -3316					; size = 4
$T372950 = -3312					; size = 4
$T372949 = -3308					; size = 4
$T372948 = -3304					; size = 4
$T372947 = -3300					; size = 4
$T372946 = -3296					; size = 4
$T372945 = -3292					; size = 4
$T372944 = -3288					; size = 4
$T372943 = -3284					; size = 4
$T372942 = -3280					; size = 4
$T372941 = -3276					; size = 4
$T372940 = -3272					; size = 4
$T372939 = -3268					; size = 4
$T372938 = -3264					; size = 4
$T372937 = -3260					; size = 4
$T372936 = -3256					; size = 4
$T372935 = -3252					; size = 4
$T372934 = -3248					; size = 4
$T372933 = -3244					; size = 4
$T372932 = -3240					; size = 4
$T372931 = -3236					; size = 4
$T372930 = -3232					; size = 4
$T372929 = -3228					; size = 4
$T372928 = -3224					; size = 4
$T372927 = -3220					; size = 4
$T372926 = -3216					; size = 4
$T372925 = -3212					; size = 4
$T372924 = -3208					; size = 4
$T372923 = -3204					; size = 4
$T372922 = -3200					; size = 4
$T372921 = -3196					; size = 4
$T372920 = -3192					; size = 4
$T372919 = -3188					; size = 4
$T372918 = -3184					; size = 4
$T372917 = -3180					; size = 4
$T372916 = -3176					; size = 4
$T372915 = -3172					; size = 4
$T372914 = -3168					; size = 4
$T372913 = -3164					; size = 4
$T372912 = -3160					; size = 4
$T372911 = -3156					; size = 4
$T372910 = -3152					; size = 4
$T372909 = -3148					; size = 4
$T372908 = -3144					; size = 4
$T372907 = -3140					; size = 4
$T372906 = -3136					; size = 4
$T372905 = -3132					; size = 4
$T372904 = -3128					; size = 4
$T372903 = -3124					; size = 4
$T372902 = -3120					; size = 4
$T372901 = -3116					; size = 4
$T372900 = -3112					; size = 4
$T372899 = -3108					; size = 4
$T372898 = -3104					; size = 4
$T372897 = -3100					; size = 4
$T372896 = -3096					; size = 4
$T372895 = -3092					; size = 4
$T372894 = -3088					; size = 4
$T372893 = -3084					; size = 4
$T372892 = -3080					; size = 4
$T372891 = -3076					; size = 4
$T372890 = -3072					; size = 4
$T372889 = -3068					; size = 4
$T372888 = -3064					; size = 4
$T372887 = -3060					; size = 4
$T372886 = -3056					; size = 4
$T372885 = -3052					; size = 4
$T372884 = -3048					; size = 4
$T372883 = -3044					; size = 4
$T372882 = -3040					; size = 4
$T372881 = -3036					; size = 4
$T372880 = -3032					; size = 4
$T372879 = -3028					; size = 4
$T372878 = -3024					; size = 4
$T372877 = -3020					; size = 4
$T372876 = -3016					; size = 4
$T372875 = -3012					; size = 4
$T372874 = -3008					; size = 4
$T372873 = -3004					; size = 4
$T372872 = -3000					; size = 4
$T372871 = -2996					; size = 4
$T372870 = -2992					; size = 4
$T372869 = -2988					; size = 4
$T372868 = -2984					; size = 4
$T372867 = -2980					; size = 4
$T372866 = -2976					; size = 4
$T372865 = -2972					; size = 4
$T372864 = -2968					; size = 4
$T372863 = -2964					; size = 4
$T372862 = -2960					; size = 4
$T372861 = -2956					; size = 4
$T372860 = -2952					; size = 4
$T372859 = -2948					; size = 4
$T372858 = -2944					; size = 4
$T372857 = -2940					; size = 4
$T372856 = -2936					; size = 4
$T372855 = -2932					; size = 4
$T372854 = -2928					; size = 4
$T372853 = -2924					; size = 4
$T372852 = -2920					; size = 4
$T372851 = -2916					; size = 4
$T372850 = -2912					; size = 4
$T372849 = -2908					; size = 4
$T372848 = -2904					; size = 4
$T372847 = -2900					; size = 4
$T372846 = -2896					; size = 4
$T372845 = -2892					; size = 4
$T372844 = -2888					; size = 4
$T372843 = -2884					; size = 4
$T372842 = -2880					; size = 4
$T372841 = -2876					; size = 4
$T372840 = -2872					; size = 4
$T372839 = -2868					; size = 4
$T372838 = -2864					; size = 4
$T372837 = -2860					; size = 4
$T372836 = -2856					; size = 4
$T372835 = -2852					; size = 4
$T372834 = -2848					; size = 4
$T372833 = -2844					; size = 4
$T372832 = -2840					; size = 4
$T372831 = -2836					; size = 4
$T372830 = -2832					; size = 4
$T372829 = -2828					; size = 4
$T372828 = -2824					; size = 4
$T372827 = -2820					; size = 4
$T372826 = -2816					; size = 4
$T372825 = -2812					; size = 4
$T372824 = -2808					; size = 4
$T372823 = -2804					; size = 4
$T372822 = -2800					; size = 4
$T372821 = -2796					; size = 4
$T372820 = -2792					; size = 4
$T372819 = -2788					; size = 8
$T372818 = -2780					; size = 4
$T372817 = -2776					; size = 4
$T372816 = -2772					; size = 4
$T372815 = -2768					; size = 4
$T372814 = -2764					; size = 4
$T372813 = -2760					; size = 4
$T372812 = -2756					; size = 4
$T372811 = -2752					; size = 4
_language$155618 = -2748				; size = 28
_pos$155616 = -2720					; size = 4
_weaponName$155535 = -2716				; size = 28
_it$155529 = -2688					; size = 4
_str$155523 = -2684					; size = 28
_i$155524 = -2653					; size = 1
_it$155430 = -2652					; size = 4
_vAdminlist$155336 = -2648				; size = 16
_sTemp$155013 = -2632					; size = 28
_i$155343 = -2603					; size = 1
_i$155003 = -2602					; size = 1
_playerFound$155002 = -2601				; size = 1
_i$154952 = -2600					; size = 4
_i$154924 = -2596					; size = 4
_i2$154851 = -2592					; size = 1
_i2$154787 = -2591					; size = 1
_i$154771 = -2590					; size = 1
_i$154755 = -2589					; size = 1
_bla$154873 = -2588					; size = 4
_i2$154676 = -2584					; size = 1
_i2$154622 = -2583					; size = 1
_i$154608 = -2582					; size = 1
_i$154594 = -2581					; size = 1
_bla$154695 = -2580					; size = 4
_i$154579 = -2576					; size = 4
_index$154733 = -2571					; size = 1
_whitespacePos$154577 = -2570				; size = 1
_i$154516 = -2569					; size = 1
_i$154501 = -2568					; size = 4
_index$154555 = -2562					; size = 1
_whitespacePos$154499 = -2561				; size = 1
_i$154455 = -2560					; size = 4
_victim$154446 = -2556					; size = 28
_index$154477 = -2525					; size = 1
_reason$154448 = -2524					; size = 28
_whitespacePos$154444 = -2493				; size = 1
_i$154418 = -2492					; size = 4
_index$154428 = -2485					; size = 1
_i$154392 = -2484					; size = 4
_index$154402 = -2477					; size = 1
_victim$154370 = -2476					; size = 28
_msg$154373 = -2448					; size = 28
_victim$154336 = -2420					; size = 28
_msg$154339 = -2392					; size = 28
_i$154272 = -2364					; size = 4
_victim$154269 = -2360					; size = 28
_index$154289 = -2329					; size = 1
_reason$154271 = -2328					; size = 28
_i$154265 = -2300					; size = 4
_victim$154263 = -2296					; size = 28
_index$154302 = -2266					; size = 1
_whitespacePos$154261 = -2265				; size = 1
_i$154219 = -2264					; size = 4
_victim$154210 = -2260					; size = 28
_index$154239 = -2229					; size = 1
_reason$154212 = -2228					; size = 28
_whitespacePos$154208 = -2197				; size = 1
_i$154159 = -2196					; size = 4
_index$154181 = -2189					; size = 1
_time$154102 = -2188					; size = 16
_diff$154094 = -2172					; size = 8
_date$154095 = -2160					; size = 28
_adminID$154091 = -2132					; size = 4
_i$154084 = -2128					; size = 4
_uiCMDLength$ = -2124					; size = 4
_ucUserID$ = -2117					; size = 1
$T155606 = -2116					; size = 28
$T155587 = -2088					; size = 28
$T155586 = -2060					; size = 28
$T155584 = -2032					; size = 28
$T155583 = -2004					; size = 28
$T155582 = -1976					; size = 28
$T155581 = -1948					; size = 28
$T155585 = -1920					; size = 28
$T155574 = -1892					; size = 28
$T155573 = -1864					; size = 28
$T155571 = -1836					; size = 28
$T155570 = -1808					; size = 28
$T155569 = -1780					; size = 28
$T155568 = -1752					; size = 28
$T155572 = -1724					; size = 28
$T155540 = -1696					; size = 28
$T155537 = -1668					; size = 28
$T155496 = -1640					; size = 28
$T154971 = -1612					; size = 28
$T154970 = -1584					; size = 28
$T154933 = -1556					; size = 28
$T154737 = -1528					; size = 28
$T154735 = -1500					; size = 28
$T154734 = -1472					; size = 28
$T154736 = -1444					; size = 28
$T154559 = -1416					; size = 28
$T154557 = -1388					; size = 28
$T154556 = -1360					; size = 28
$T154558 = -1332					; size = 28
$T154481 = -1304					; size = 28
$T154479 = -1276					; size = 28
$T154478 = -1248					; size = 28
$T154480 = -1220					; size = 28
$T154461 = -1192					; size = 28
$T154460 = -1164					; size = 28
$T154432 = -1136					; size = 28
$T154430 = -1108					; size = 28
$T154429 = -1080					; size = 28
$T154431 = -1052					; size = 28
$T154406 = -1024					; size = 28
$T154404 = -996						; size = 28
$T154403 = -968						; size = 28
$T154405 = -940						; size = 28
$T154382 = -912						; size = 28
$T154376 = -884						; size = 28
$T154375 = -856						; size = 28
$T154348 = -828						; size = 28
$T154342 = -800						; size = 28
$T154341 = -772						; size = 28
$T154306 = -744						; size = 28
$T154304 = -716						; size = 28
$T154303 = -688						; size = 28
$T154305 = -660						; size = 28
$T154293 = -632						; size = 28
$T154291 = -604						; size = 28
$T154290 = -576						; size = 28
$T154292 = -548						; size = 28
$T154243 = -520						; size = 28
$T154241 = -492						; size = 28
$T154240 = -464						; size = 28
$T154242 = -436						; size = 28
$T154225 = -408						; size = 28
$T154224 = -380						; size = 28
$T154196 = -352						; size = 28
$T154183 = -324						; size = 28
$T154182 = -296						; size = 28
$T154195 = -268						; size = 28
$T154137 = -240						; size = 28
$T154136 = -212						; size = 28
$T154125 = -184						; size = 28
$T154124 = -156						; size = 28
$T154113 = -128						; size = 28
$T154082 = -100						; size = 28
$T154081 = -72						; size = 28
$T154080 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sPlayerName$ = 8					; size = 28
_sCmd$ = 36						; size = 28
_sArg$ = 64						; size = 28
?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z PROC ; Battlefield::game::ingameCmd, COMDAT
; _this$ = ecx
; Line 396
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 7208				; 00001c28H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 400
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154080[ebp]
	push	ecx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8475[ebp], eax
	mov	edx, DWORD PTR tv8475[ebp]
	mov	DWORD PTR tv7253[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv7253[ebp]
	push	eax
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154080[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 401
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154081[ebp]
	push	edx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8476[ebp], eax
	mov	eax, DWORD PTR tv8476[ebp]
	mov	DWORD PTR tv7255[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv7255[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154081[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 402
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154082[ebp]
	push	eax
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8477[ebp], eax
	mov	ecx, DWORD PTR tv8477[ebp]
	mov	DWORD PTR tv7257[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv7257[ebp]
	push	edx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154082[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 404
	mov	BYTE PTR _ucUserID$[ebp], 0
; Line 405
	mov	DWORD PTR _i$154084[ebp], 0
	jmp	SHORT $LN183@ingameCmd
$LN182@ingameCmd:
	mov	eax, DWORD PTR _i$154084[ebp]
	add	eax, 1
	mov	DWORD PTR _i$154084[ebp], eax
$LN183@ingameCmd:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$154084[ebp], edx
	jge	SHORT $LN181@ingameCmd
; Line 407
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$154084[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN180@ingameCmd
; Line 409
	mov	dl, BYTE PTR _i$154084[ebp]
	mov	BYTE PTR _ucUserID$[ebp], dl
$LN180@ingameCmd:
; Line 411
	jmp	SHORT $LN182@ingameCmd
$LN181@ingameCmd:
; Line 415
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	DWORD PTR _uiCMDLength$[ebp], eax
; Line 417
	cmp	DWORD PTR _uiCMDLength$[ebp], 0
	je	$LN179@ingameCmd
	push	0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 47					; 0000002fH
	jne	$LN179@ingameCmd
; Line 419
	movzx	ecx, BYTE PTR _ucUserID$[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23420]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372811[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7259[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?getAdminID@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::getAdminID
	mov	DWORD PTR tv7260[ebp], eax
	mov	edx, DWORD PTR tv7260[ebp]
	mov	DWORD PTR _adminID$154091[ebp], edx
; Line 420
	cmp	DWORD PTR _adminID$154091[ebp], 0
	je	$LN178@ingameCmd
; Line 422
	fldz
	fstp	QWORD PTR _diff$154094[ebp]
; Line 423
	mov	eax, DWORD PTR _adminID$154091[ebp]
	push	eax
	lea	ecx, DWORD PTR _date$154095[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+21432]
	call	?getAdminPayday@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Database::SQLite::getAdminPayday
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 424
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	movzx	eax, al
	test	eax, eax
	jne	$LN177@ingameCmd
; Line 426
	push	OFFSET $SG-296
	lea	ecx, DWORD PTR _date$154095[ebp]
	push	ecx
	lea	edx, DWORD PTR _time$154102[ebp]
	push	edx
	call	??$split@DU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PBD@Z ; dlib::split<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 427
	push	2
	lea	ecx, DWORD PTR _time$154102[ebp]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movzx	eax, ax
	push	eax
	push	0
	lea	ecx, DWORD PTR _time$154102[ebp]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movzx	ecx, al
	push	ecx
	push	1
	lea	ecx, DWORD PTR _time$154102[ebp]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movzx	edx, al
	push	edx
	call	?timeFromNow@helper@@YANEEG@Z		; helper::timeFromNow
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR _diff$154094[ebp]
; Line 428
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _time$154102[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; Line 429
	jmp	SHORT $LN176@ingameCmd
$LN177@ingameCmd:
; Line 431
	lea	eax, DWORD PTR _adminID$154091[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154113[ebp]
	push	ecx
	call	??$cast_to_string@I@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABI@Z ; dlib::cast_to_string<unsigned int>
	add	esp, 8
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv7264[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372812[ebp], esp
	mov	ecx, DWORD PTR tv7264[ebp]
	push	ecx
	push	OFFSET $SG-297
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7266[ebp], eax
	push	431					; 000001afH
	push	OFFSET $SG-298
	push	OFFSET $SG-299
	call	?error@log@helper@@YAXPBD0JV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; helper::log::error
	add	esp, 40					; 00000028H
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154113[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN176@ingameCmd:
; Line 434
	fldz
	fcomp	QWORD PTR _diff$154094[ebp]
	fnstsw	ax
	test	ah, 5
	jp	$LN175@ingameCmd
; Line 436
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372813[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv7268[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372814[ebp], esp
	push	OFFSET $SG-300
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8478[ebp], eax
	mov	ecx, DWORD PTR tv8478[ebp]
	mov	DWORD PTR tv7271[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	edx, DWORD PTR _diff$154094[ebp]
	push	edx
	lea	eax, DWORD PTR $T154124[ebp]
	push	eax
	call	??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z ; dlib::cast_to_string<double>
	add	esp, 8
	mov	DWORD PTR tv8479[ebp], eax
	mov	ecx, DWORD PTR tv8479[ebp]
	mov	DWORD PTR tv7273[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv7273[ebp]
	push	edx
	push	OFFSET $SG-302
	lea	eax, DWORD PTR $T154125[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8480[ebp], eax
	mov	ecx, DWORD PTR tv8480[ebp]
	mov	DWORD PTR tv7275[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372815[ebp], esp
	push	OFFSET $SG-301
	mov	eax, DWORD PTR tv7275[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7278[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T154125[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154124[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 437
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
	jmp	$LN173@ingameCmd
$LN175@ingameCmd:
; Line 439
	fld	QWORD PTR __real@c010000000000000
	fcomp	QWORD PTR _diff$154094[ebp]
	fnstsw	ax
	test	ah, 5
	jp	$LN173@ingameCmd
	fld	QWORD PTR _diff$154094[ebp]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	$LN173@ingameCmd
; Line 441
	fld	QWORD PTR _diff$154094[ebp]
	fmul	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR $T372819[ebp]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372816[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8482[ebp], eax
	mov	eax, DWORD PTR tv8482[ebp]
	mov	DWORD PTR tv7284[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372817[ebp], esp
	push	OFFSET $SG-303
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8483[ebp], eax
	mov	ecx, DWORD PTR tv8483[ebp]
	mov	DWORD PTR tv7287[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	edx, DWORD PTR $T372819[ebp]
	push	edx
	lea	eax, DWORD PTR $T154136[ebp]
	push	eax
	call	??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z ; dlib::cast_to_string<double>
	add	esp, 8
	mov	DWORD PTR tv8484[ebp], eax
	mov	ecx, DWORD PTR tv8484[ebp]
	mov	DWORD PTR tv7289[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv7289[ebp]
	push	edx
	push	OFFSET $SG-305
	lea	eax, DWORD PTR $T154137[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8485[ebp], eax
	mov	ecx, DWORD PTR tv8485[ebp]
	mov	DWORD PTR tv7291[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372818[ebp], esp
	push	OFFSET $SG-304
	mov	eax, DWORD PTR tv7291[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7294[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T154137[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154136[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN173@ingameCmd:
; Line 444
	push	OFFSET $SG-306
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN172@ingameCmd
; Line 446
	push	OFFSET $SG-307
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN171@ingameCmd
; Line 448
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372820[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7296[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::player_kill
; Line 449
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372821[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8487[ebp], eax
	mov	ecx, DWORD PTR tv8487[ebp]
	mov	DWORD PTR tv7298[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372822[ebp], esp
	push	OFFSET $SG-308
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8488[ebp], eax
	mov	edx, DWORD PTR tv8488[ebp]
	mov	DWORD PTR tv7301[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372823[ebp], esp
	push	OFFSET $SG-309
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7304[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 450
	push	0
	push	0
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372824[ebp], esp
	push	OFFSET $SG-310
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8490[ebp], eax
	mov	eax, DWORD PTR tv8490[ebp]
	mov	DWORD PTR tv7308[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372825[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7311[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 452
	jmp	$LN170@ingameCmd
$LN171@ingameCmd:
; Line 454
	mov	DWORD PTR _i$154159[ebp], 0
	jmp	SHORT $LN169@ingameCmd
$LN168@ingameCmd:
	mov	ecx, DWORD PTR _i$154159[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$154159[ebp], ecx
$LN169@ingameCmd:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	cmp	DWORD PTR _i$154159[ebp], eax
	jae	$LN167@ingameCmd
; Line 456
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$154159[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN166@ingameCmd
; Line 458
	push	1
	push	0
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372826[ebp], esp
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	push	OFFSET $SG-311
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8492[ebp], eax
	mov	edx, DWORD PTR tv8492[ebp]
	mov	DWORD PTR tv7315[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372827[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7318[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 459
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372828[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8494[ebp], eax
	mov	eax, DWORD PTR tv8494[ebp]
	mov	DWORD PTR tv7320[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372829[ebp], esp
	push	OFFSET $SG-312
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8495[ebp], eax
	mov	ecx, DWORD PTR tv8495[ebp]
	mov	DWORD PTR tv7323[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372830[ebp], esp
	push	OFFSET $SG-313
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7326[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 460
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372831[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7328[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::player_kill
; Line 462
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372832[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8497[ebp], eax
	mov	ecx, DWORD PTR tv8497[ebp]
	mov	DWORD PTR tv7330[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372833[ebp], esp
	push	OFFSET $SG-314
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8498[ebp], eax
	mov	edx, DWORD PTR tv8498[ebp]
	mov	DWORD PTR tv7333[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372834[ebp], esp
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	push	OFFSET $SG-315
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7336[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 463
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN166@ingameCmd:
; Line 465
	jmp	$LN168@ingameCmd
$LN167@ingameCmd:
; Line 467
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154181[ebp], al
; Line 468
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372835[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8500[ebp], eax
	mov	ecx, DWORD PTR tv8500[ebp]
	mov	DWORD PTR tv7342[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372836[ebp], esp
	push	OFFSET $SG-316
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8501[ebp], eax
	mov	edx, DWORD PTR tv8501[ebp]
	mov	DWORD PTR tv7345[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	movzx	eax, BYTE PTR _index$154181[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	lea	eax, DWORD PTR $T154195[ebp]
	push	eax
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8502[ebp], eax
	mov	ecx, DWORD PTR tv8502[ebp]
	mov	DWORD PTR tv7347[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	movzx	edx, BYTE PTR _index$154181[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	push	OFFSET $SG-319
	lea	edx, DWORD PTR $T154182[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8503[ebp], eax
	mov	eax, DWORD PTR tv8503[ebp]
	mov	DWORD PTR tv7349[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	push	OFFSET $SG-318
	mov	ecx, DWORD PTR tv7349[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154183[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8504[ebp], eax
	mov	eax, DWORD PTR tv8504[ebp]
	mov	DWORD PTR tv7351[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	ecx, DWORD PTR tv7347[ebp]
	push	ecx
	mov	edx, DWORD PTR tv7351[ebp]
	push	edx
	lea	eax, DWORD PTR $T154196[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8505[ebp], eax
	mov	ecx, DWORD PTR tv8505[ebp]
	mov	DWORD PTR tv7353[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372837[ebp], esp
	push	OFFSET $SG-317
	mov	eax, DWORD PTR tv7353[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7356[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	lea	ecx, DWORD PTR $T154196[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	lea	ecx, DWORD PTR $T154183[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	ecx, DWORD PTR $T154182[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154195[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN170@ingameCmd:
	jmp	$LN47@ingameCmd
$LN172@ingameCmd:
; Line 471
	push	OFFSET $SG-320
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN164@ingameCmd
; Line 473
	push	0
	push	32					; 00000020H
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	BYTE PTR _whitespacePos$154208[ebp], al
; Line 474
	movzx	eax, BYTE PTR _whitespacePos$154208[ebp]
	cmp	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN163@ingameCmd
; Line 476
	movzx	ecx, BYTE PTR _whitespacePos$154208[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _victim$154210[ebp]
	push	edx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
; Line 477
	movzx	eax, BYTE PTR _whitespacePos$154208[ebp]
	push	eax
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _reason$154212[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
; Line 479
	lea	ecx, DWORD PTR _reason$154212[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	cmp	eax, 3
	jae	$LN162@ingameCmd
; Line 481
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372838[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv702[ebp], eax
	mov	eax, DWORD PTR tv702[ebp]
	mov	DWORD PTR tv7360[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372839[ebp], esp
	push	OFFSET $SG-321
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv695[ebp], eax
	mov	ecx, DWORD PTR tv695[ebp]
	mov	DWORD PTR tv7363[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372840[ebp], esp
	push	OFFSET $SG-322
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7366[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 482
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR _reason$154212[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154210[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN162@ingameCmd:
; Line 485
	mov	DWORD PTR _i$154219[ebp], 0
	jmp	SHORT $LN161@ingameCmd
$LN160@ingameCmd:
	mov	edx, DWORD PTR _i$154219[ebp]
	add	edx, 1
	mov	DWORD PTR _i$154219[ebp], edx
$LN161@ingameCmd:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	DWORD PTR _i$154219[ebp], ecx
	jae	$LN159@ingameCmd
; Line 487
	lea	edx, DWORD PTR _victim$154210[ebp]
	push	edx
	mov	eax, DWORD PTR _i$154219[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN158@ingameCmd
; Line 489
	push	1
	push	0
	lea	ecx, DWORD PTR _victim$154210[ebp]
	push	ecx
	push	OFFSET $SG-324
	lea	edx, DWORD PTR $T154224[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8508[ebp], eax
	mov	eax, DWORD PTR tv8508[ebp]
	mov	DWORD PTR tv7374[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	push	OFFSET $SG-323
	mov	ecx, DWORD PTR tv7374[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154225[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8509[ebp], eax
	mov	eax, DWORD PTR tv8509[ebp]
	mov	DWORD PTR tv7376[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	movzx	ecx, BYTE PTR _whitespacePos$154208[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372841[ebp], esp
	push	eax
	mov	eax, DWORD PTR tv7376[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8510[ebp], eax
	mov	ecx, DWORD PTR tv8510[ebp]
	mov	DWORD PTR tv7380[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372842[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7383[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	lea	ecx, DWORD PTR $T154225[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T154224[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 490
	movzx	ecx, BYTE PTR _whitespacePos$154208[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372843[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8512[ebp], eax
	mov	edx, DWORD PTR tv8512[ebp]
	mov	DWORD PTR tv7385[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372844[ebp], esp
	lea	eax, DWORD PTR _victim$154210[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7388[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Battlefield::game::player_kick
; Line 491
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372845[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8514[ebp], eax
	mov	eax, DWORD PTR tv8514[ebp]
	mov	DWORD PTR tv7390[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372846[ebp], esp
	push	OFFSET $SG-325
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8515[ebp], eax
	mov	ecx, DWORD PTR tv8515[ebp]
	mov	DWORD PTR tv7393[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372847[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-326
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7396[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 492
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR _reason$154212[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154210[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN158@ingameCmd:
; Line 494
	jmp	$LN160@ingameCmd
$LN159@ingameCmd:
; Line 496
	lea	ecx, DWORD PTR _victim$154210[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154239[ebp], al
; Line 497
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372848[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8517[ebp], eax
	mov	eax, DWORD PTR tv8517[ebp]
	mov	DWORD PTR tv7404[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372849[ebp], esp
	push	OFFSET $SG-327
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8518[ebp], eax
	mov	ecx, DWORD PTR tv8518[ebp]
	mov	DWORD PTR tv7407[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	movzx	edx, BYTE PTR _index$154239[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154242[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8519[ebp], eax
	mov	eax, DWORD PTR tv8519[ebp]
	mov	DWORD PTR tv7409[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	movzx	ecx, BYTE PTR _index$154239[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-330
	lea	ecx, DWORD PTR $T154240[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8520[ebp], eax
	mov	edx, DWORD PTR tv8520[ebp]
	mov	DWORD PTR tv7411[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	push	OFFSET $SG-329
	mov	eax, DWORD PTR tv7411[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154241[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8521[ebp], eax
	mov	edx, DWORD PTR tv8521[ebp]
	mov	DWORD PTR tv7413[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	mov	eax, DWORD PTR tv7409[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7413[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154243[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8522[ebp], eax
	mov	eax, DWORD PTR tv8522[ebp]
	mov	DWORD PTR tv7415[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372850[ebp], esp
	push	OFFSET $SG-328
	mov	edx, DWORD PTR tv7415[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7418[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T154243[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	lea	ecx, DWORD PTR $T154241[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	lea	ecx, DWORD PTR $T154240[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T154242[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 498
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	lea	ecx, DWORD PTR _reason$154212[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154210[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 499
	jmp	SHORT $LN157@ingameCmd
$LN163@ingameCmd:
; Line 500
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372851[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8524[ebp], eax
	mov	ecx, DWORD PTR tv8524[ebp]
	mov	DWORD PTR tv7420[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372852[ebp], esp
	push	OFFSET $SG-331
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8525[ebp], eax
	mov	edx, DWORD PTR tv8525[ebp]
	mov	DWORD PTR tv7423[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372853[ebp], esp
	push	OFFSET $SG-332
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7426[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN157@ingameCmd:
	jmp	$LN47@ingameCmd
$LN164@ingameCmd:
; Line 502
	push	OFFSET $SG-333
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN155@ingameCmd
; Line 504
	push	0
	push	32					; 00000020H
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	BYTE PTR _whitespacePos$154261[ebp], al
; Line 505
	movzx	edx, BYTE PTR _whitespacePos$154261[ebp]
	cmp	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN154@ingameCmd
; Line 507
	movzx	eax, BYTE PTR _whitespacePos$154261[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _victim$154263[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
; Line 508
	mov	DWORD PTR _i$154265[ebp], 0
	jmp	SHORT $LN153@ingameCmd
$LN152@ingameCmd:
	mov	edx, DWORD PTR _i$154265[ebp]
	add	edx, 1
	mov	DWORD PTR _i$154265[ebp], edx
$LN153@ingameCmd:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	DWORD PTR _i$154265[ebp], ecx
	jae	$LN151@ingameCmd
; Line 510
	movzx	edx, BYTE PTR _whitespacePos$154261[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _victim$154269[ebp]
	push	eax
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
; Line 511
	movzx	ecx, BYTE PTR _whitespacePos$154261[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _reason$154271[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
; Line 513
	mov	DWORD PTR _i$154272[ebp], 0
	jmp	SHORT $LN150@ingameCmd
$LN149@ingameCmd:
	mov	edx, DWORD PTR _i$154272[ebp]
	add	edx, 1
	mov	DWORD PTR _i$154272[ebp], edx
$LN150@ingameCmd:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	DWORD PTR _i$154272[ebp], ecx
	jae	$LN148@ingameCmd
; Line 515
	lea	edx, DWORD PTR _victim$154269[ebp]
	push	edx
	mov	eax, DWORD PTR _i$154272[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN147@ingameCmd
; Line 517
	push	1
	push	0
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372854[ebp], esp
	lea	edx, DWORD PTR _victim$154269[ebp]
	push	edx
	push	OFFSET $SG-334
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1101[ebp], eax
	mov	eax, DWORD PTR tv1101[ebp]
	mov	DWORD PTR tv7433[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372855[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7436[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 518
	movzx	ecx, BYTE PTR _whitespacePos$154261[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372856[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv1082[ebp], eax
	mov	edx, DWORD PTR tv1082[ebp]
	mov	DWORD PTR tv7438[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372857[ebp], esp
	lea	eax, DWORD PTR _victim$154269[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7441[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Battlefield::game::player_kick
; Line 519
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372858[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8528[ebp], eax
	mov	eax, DWORD PTR tv8528[ebp]
	mov	DWORD PTR tv7443[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372859[ebp], esp
	push	OFFSET $SG-335
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8529[ebp], eax
	mov	ecx, DWORD PTR tv8529[ebp]
	mov	DWORD PTR tv7446[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372860[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-336
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7449[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 520
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR _reason$154271[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR _victim$154269[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154263[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN147@ingameCmd:
; Line 522
	jmp	$LN149@ingameCmd
$LN148@ingameCmd:
; Line 524
	lea	ecx, DWORD PTR _victim$154269[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154289[ebp], al
; Line 525
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372861[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8531[ebp], eax
	mov	eax, DWORD PTR tv8531[ebp]
	mov	DWORD PTR tv7458[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372862[ebp], esp
	push	OFFSET $SG-337
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8532[ebp], eax
	mov	ecx, DWORD PTR tv8532[ebp]
	mov	DWORD PTR tv7461[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	movzx	edx, BYTE PTR _index$154289[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154292[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8533[ebp], eax
	mov	eax, DWORD PTR tv8533[ebp]
	mov	DWORD PTR tv7463[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 70		; 00000046H
	movzx	ecx, BYTE PTR _index$154289[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-340
	lea	ecx, DWORD PTR $T154290[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8534[ebp], eax
	mov	edx, DWORD PTR tv8534[ebp]
	mov	DWORD PTR tv7465[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	push	OFFSET $SG-339
	mov	eax, DWORD PTR tv7465[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154291[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8535[ebp], eax
	mov	edx, DWORD PTR tv8535[ebp]
	mov	DWORD PTR tv7467[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 72		; 00000048H
	mov	eax, DWORD PTR tv7463[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7467[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154293[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8536[ebp], eax
	mov	eax, DWORD PTR tv8536[ebp]
	mov	DWORD PTR tv7469[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372863[ebp], esp
	push	OFFSET $SG-338
	mov	edx, DWORD PTR tv7469[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7472[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	lea	ecx, DWORD PTR $T154293[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T154291[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR $T154290[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR $T154292[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 526
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	lea	ecx, DWORD PTR _reason$154271[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR _victim$154269[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN152@ingameCmd
$LN151@ingameCmd:
; Line 528
	lea	eax, DWORD PTR _victim$154263[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154302[ebp], al
; Line 529
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372864[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8538[ebp], eax
	mov	eax, DWORD PTR tv8538[ebp]
	mov	DWORD PTR tv7474[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372865[ebp], esp
	push	OFFSET $SG-341
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8539[ebp], eax
	mov	ecx, DWORD PTR tv8539[ebp]
	mov	DWORD PTR tv7477[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	movzx	edx, BYTE PTR _index$154302[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154305[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8540[ebp], eax
	mov	eax, DWORD PTR tv8540[ebp]
	mov	DWORD PTR tv7479[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 80		; 00000050H
	movzx	ecx, BYTE PTR _index$154302[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-344
	lea	ecx, DWORD PTR $T154303[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8541[ebp], eax
	mov	edx, DWORD PTR tv8541[ebp]
	mov	DWORD PTR tv7481[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	push	OFFSET $SG-343
	mov	eax, DWORD PTR tv7481[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154304[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8542[ebp], eax
	mov	edx, DWORD PTR tv8542[ebp]
	mov	DWORD PTR tv7483[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 82		; 00000052H
	mov	eax, DWORD PTR tv7479[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7483[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154306[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8543[ebp], eax
	mov	eax, DWORD PTR tv8543[ebp]
	mov	DWORD PTR tv7485[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 83		; 00000053H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372866[ebp], esp
	push	OFFSET $SG-342
	mov	edx, DWORD PTR tv7485[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7488[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T154306[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T154304[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	lea	ecx, DWORD PTR $T154303[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	lea	ecx, DWORD PTR $T154305[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 530
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154263[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 531
	jmp	SHORT $LN146@ingameCmd
$LN154@ingameCmd:
; Line 532
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372867[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8545[ebp], eax
	mov	ecx, DWORD PTR tv8545[ebp]
	mov	DWORD PTR tv7490[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372868[ebp], esp
	push	OFFSET $SG-345
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8546[ebp], eax
	mov	edx, DWORD PTR tv8546[ebp]
	mov	DWORD PTR tv7493[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372869[ebp], esp
	push	OFFSET $SG-346
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7496[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN146@ingameCmd:
	jmp	$LN47@ingameCmd
$LN155@ingameCmd:
; Line 534
	push	OFFSET $SG-347
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN144@ingameCmd
; Line 536
	push	2
	push	0
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372870[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-348
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8548[ebp], eax
	mov	ecx, DWORD PTR tv8548[ebp]
	mov	DWORD PTR tv7500[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372871[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7503[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 537
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372872[ebp], esp
	push	OFFSET $SG-349
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8550[ebp], eax
	mov	ecx, DWORD PTR tv8550[ebp]
	mov	DWORD PTR tv7505[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372873[ebp], esp
	push	OFFSET $SG-350
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8551[ebp], eax
	mov	edx, DWORD PTR tv8551[ebp]
	mov	DWORD PTR tv7508[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372874[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7511[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN47@ingameCmd
$LN144@ingameCmd:
; Line 539
	push	OFFSET $SG-351
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN142@ingameCmd
; Line 541
	push	0
	push	OFFSET $SG-352
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	push	eax
	push	0
	lea	eax, DWORD PTR _victim$154336[ebp]
	push	eax
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
; Line 542
	push	0
	push	OFFSET $SG-353
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	push	eax
	push	0
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	eax
	lea	ecx, DWORD PTR _msg$154339[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
; Line 543
	push	2
	push	0
	lea	ecx, DWORD PTR _victim$154336[ebp]
	push	ecx
	push	OFFSET $SG-355
	lea	edx, DWORD PTR $T154341[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1546[ebp], eax
	mov	eax, DWORD PTR tv1546[ebp]
	mov	DWORD PTR tv7515[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	push	OFFSET $SG-354
	mov	ecx, DWORD PTR tv7515[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154342[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1536[ebp], eax
	mov	eax, DWORD PTR tv1536[ebp]
	mov	DWORD PTR tv7517[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372875[ebp], esp
	lea	edx, DWORD PTR _msg$154339[ebp]
	push	edx
	mov	eax, DWORD PTR tv7517[ebp]
	push	eax
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8553[ebp], eax
	mov	ecx, DWORD PTR tv8553[ebp]
	mov	DWORD PTR tv7521[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372876[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7524[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T154342[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T154341[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 544
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372877[ebp], esp
	lea	edx, DWORD PTR _victim$154336[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8555[ebp], eax
	mov	eax, DWORD PTR tv8555[ebp]
	mov	DWORD PTR tv7526[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372878[ebp], esp
	push	OFFSET $SG-356
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8556[ebp], eax
	mov	ecx, DWORD PTR tv8556[ebp]
	mov	DWORD PTR tv7529[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 99		; 00000063H
	push	OFFSET $SG-357
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154348[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8557[ebp], eax
	mov	ecx, DWORD PTR tv8557[ebp]
	mov	DWORD PTR tv7531[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372879[ebp], esp
	lea	eax, DWORD PTR _msg$154339[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7531[ebp]
	push	ecx
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7534[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 101		; 00000065H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T154348[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 545
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR _msg$154339[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154336[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN47@ingameCmd
$LN142@ingameCmd:
; Line 546
	push	OFFSET $SG-358
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN140@ingameCmd
; Line 548
	push	3
	push	0
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372880[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	push	OFFSET $SG-359
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8559[ebp], eax
	mov	eax, DWORD PTR tv8559[ebp]
	mov	DWORD PTR tv7538[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372881[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7541[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 549
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372882[ebp], esp
	push	OFFSET $SG-360
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8561[ebp], eax
	mov	ecx, DWORD PTR tv8561[ebp]
	mov	DWORD PTR tv7543[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372883[ebp], esp
	push	OFFSET $SG-361
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8562[ebp], eax
	mov	edx, DWORD PTR tv8562[ebp]
	mov	DWORD PTR tv7546[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372884[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7549[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
	jmp	$LN47@ingameCmd
$LN140@ingameCmd:
; Line 551
	push	OFFSET $SG-362
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN138@ingameCmd
; Line 553
	push	0
	push	OFFSET $SG-363
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	push	eax
	push	0
	lea	eax, DWORD PTR _victim$154370[ebp]
	push	eax
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
; Line 554
	push	0
	push	OFFSET $SG-364
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	push	eax
	push	0
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	eax
	lea	ecx, DWORD PTR _msg$154373[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
; Line 555
	push	3
	push	0
	lea	ecx, DWORD PTR _victim$154370[ebp]
	push	ecx
	push	OFFSET $SG-366
	lea	edx, DWORD PTR $T154375[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1807[ebp], eax
	mov	eax, DWORD PTR tv1807[ebp]
	mov	DWORD PTR tv7553[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	push	OFFSET $SG-365
	mov	ecx, DWORD PTR tv7553[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154376[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv1797[ebp], eax
	mov	eax, DWORD PTR tv1797[ebp]
	mov	DWORD PTR tv7555[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372885[ebp], esp
	lea	edx, DWORD PTR _msg$154373[ebp]
	push	edx
	mov	eax, DWORD PTR tv7555[ebp]
	push	eax
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8564[ebp], eax
	mov	ecx, DWORD PTR tv8564[ebp]
	mov	DWORD PTR tv7559[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 109		; 0000006dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372886[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7562[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	lea	ecx, DWORD PTR $T154376[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T154375[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 556
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372887[ebp], esp
	lea	edx, DWORD PTR _victim$154370[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8566[ebp], eax
	mov	eax, DWORD PTR tv8566[ebp]
	mov	DWORD PTR tv7564[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372888[ebp], esp
	push	OFFSET $SG-367
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8567[ebp], eax
	mov	ecx, DWORD PTR tv8567[ebp]
	mov	DWORD PTR tv7567[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	push	OFFSET $SG-368
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154382[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8568[ebp], eax
	mov	ecx, DWORD PTR tv8568[ebp]
	mov	DWORD PTR tv7569[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 112		; 00000070H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372889[ebp], esp
	lea	eax, DWORD PTR _msg$154373[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7569[ebp]
	push	ecx
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7572[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	lea	ecx, DWORD PTR $T154382[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 557
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	lea	ecx, DWORD PTR _msg$154373[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154370[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN47@ingameCmd
$LN138@ingameCmd:
; Line 558
	push	OFFSET $SG-369
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN136@ingameCmd
; Line 560
	mov	DWORD PTR _i$154392[ebp], 0
	jmp	SHORT $LN135@ingameCmd
$LN134@ingameCmd:
	mov	ecx, DWORD PTR _i$154392[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$154392[ebp], ecx
$LN135@ingameCmd:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	cmp	DWORD PTR _i$154392[ebp], eax
	jae	$LN133@ingameCmd
; Line 562
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$154392[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN132@ingameCmd
; Line 564
	push	4
	push	0
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T372890[ebp], esp
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	push	OFFSET $SG-370
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8570[ebp], eax
	mov	edx, DWORD PTR tv8570[ebp]
	mov	DWORD PTR tv7576[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 114		; 00000072H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372891[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7579[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 565
	push	0
	push	0
	mov	edx, DWORD PTR _i$154392[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+23476]
	push	ecx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372892[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7584[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z ; Battlefield::game::player_move
; Line 566
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN132@ingameCmd:
; Line 568
	jmp	$LN134@ingameCmd
$LN133@ingameCmd:
; Line 570
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154402[ebp], al
; Line 571
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372893[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8572[ebp], eax
	mov	eax, DWORD PTR tv8572[ebp]
	mov	DWORD PTR tv7590[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 115		; 00000073H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372894[ebp], esp
	push	OFFSET $SG-371
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8573[ebp], eax
	mov	ecx, DWORD PTR tv8573[ebp]
	mov	DWORD PTR tv7593[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 116		; 00000074H
	movzx	edx, BYTE PTR _index$154402[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154405[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8574[ebp], eax
	mov	eax, DWORD PTR tv8574[ebp]
	mov	DWORD PTR tv7595[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 117		; 00000075H
	movzx	ecx, BYTE PTR _index$154402[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-374
	lea	ecx, DWORD PTR $T154403[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8575[ebp], eax
	mov	edx, DWORD PTR tv8575[ebp]
	mov	DWORD PTR tv7597[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 118		; 00000076H
	push	OFFSET $SG-373
	mov	eax, DWORD PTR tv7597[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154404[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8576[ebp], eax
	mov	edx, DWORD PTR tv8576[ebp]
	mov	DWORD PTR tv7599[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 119		; 00000077H
	mov	eax, DWORD PTR tv7595[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7599[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154406[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8577[ebp], eax
	mov	eax, DWORD PTR tv8577[ebp]
	mov	DWORD PTR tv7601[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 120		; 00000078H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372895[ebp], esp
	push	OFFSET $SG-372
	mov	edx, DWORD PTR tv7601[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7604[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 124		; 0000007cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 123		; 0000007bH
	lea	ecx, DWORD PTR $T154406[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 122		; 0000007aH
	lea	ecx, DWORD PTR $T154404[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 121		; 00000079H
	lea	ecx, DWORD PTR $T154403[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154405[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN47@ingameCmd
$LN136@ingameCmd:
; Line 573
	push	OFFSET $SG-375
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN130@ingameCmd
; Line 575
	mov	DWORD PTR _i$154418[ebp], 0
	jmp	SHORT $LN129@ingameCmd
$LN128@ingameCmd:
	mov	edx, DWORD PTR _i$154418[ebp]
	add	edx, 1
	mov	DWORD PTR _i$154418[ebp], edx
$LN129@ingameCmd:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	DWORD PTR _i$154418[ebp], ecx
	jae	$LN127@ingameCmd
; Line 577
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$154418[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN126@ingameCmd
; Line 579
	push	5
	push	0
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372896[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	push	OFFSET $SG-376
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8579[ebp], eax
	mov	eax, DWORD PTR tv8579[ebp]
	mov	DWORD PTR tv7608[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 125		; 0000007dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372897[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7611[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 580
	push	1
	push	0
	mov	ecx, DWORD PTR _i$154418[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+23476]
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372898[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7616[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z ; Battlefield::game::player_move
; Line 581
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN126@ingameCmd:
; Line 583
	jmp	$LN128@ingameCmd
$LN127@ingameCmd:
; Line 585
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154428[ebp], al
; Line 586
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372899[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8581[ebp], eax
	mov	eax, DWORD PTR tv8581[ebp]
	mov	DWORD PTR tv7622[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 126		; 0000007eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372900[ebp], esp
	push	OFFSET $SG-377
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8582[ebp], eax
	mov	ecx, DWORD PTR tv8582[ebp]
	mov	DWORD PTR tv7625[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 127		; 0000007fH
	movzx	edx, BYTE PTR _index$154428[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154431[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8583[ebp], eax
	mov	eax, DWORD PTR tv8583[ebp]
	mov	DWORD PTR tv7627[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 128		; 00000080H
	movzx	ecx, BYTE PTR _index$154428[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-380
	lea	ecx, DWORD PTR $T154429[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8584[ebp], eax
	mov	edx, DWORD PTR tv8584[ebp]
	mov	DWORD PTR tv7629[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 129		; 00000081H
	push	OFFSET $SG-379
	mov	eax, DWORD PTR tv7629[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154430[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8585[ebp], eax
	mov	edx, DWORD PTR tv8585[ebp]
	mov	DWORD PTR tv7631[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 130		; 00000082H
	mov	eax, DWORD PTR tv7627[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7631[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154432[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8586[ebp], eax
	mov	eax, DWORD PTR tv8586[ebp]
	mov	DWORD PTR tv7633[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 131		; 00000083H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372901[ebp], esp
	push	OFFSET $SG-378
	mov	edx, DWORD PTR tv7633[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7636[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 135		; 00000087H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 134		; 00000086H
	lea	ecx, DWORD PTR $T154432[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 133		; 00000085H
	lea	ecx, DWORD PTR $T154430[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 132		; 00000084H
	lea	ecx, DWORD PTR $T154429[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154431[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN47@ingameCmd
$LN130@ingameCmd:
; Line 588
	push	OFFSET $SG-381
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN124@ingameCmd
; Line 590
	push	0
	push	32					; 00000020H
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	BYTE PTR _whitespacePos$154444[ebp], al
; Line 591
	movzx	edx, BYTE PTR _whitespacePos$154444[ebp]
	cmp	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN123@ingameCmd
; Line 593
	movzx	eax, BYTE PTR _whitespacePos$154444[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _victim$154446[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
; Line 594
	movzx	edx, BYTE PTR _whitespacePos$154444[ebp]
	push	edx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _reason$154448[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
; Line 596
	lea	ecx, DWORD PTR _reason$154448[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	cmp	eax, 3
	jae	$LN122@ingameCmd
; Line 598
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372902[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2258[ebp], eax
	mov	ecx, DWORD PTR tv2258[ebp]
	mov	DWORD PTR tv7640[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 138		; 0000008aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372903[ebp], esp
	push	OFFSET $SG-382
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2251[ebp], eax
	mov	edx, DWORD PTR tv2251[ebp]
	mov	DWORD PTR tv7643[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 139		; 0000008bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372904[ebp], esp
	push	OFFSET $SG-383
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7646[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 599
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	lea	ecx, DWORD PTR _reason$154448[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154446[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN122@ingameCmd:
; Line 602
	mov	DWORD PTR _i$154455[ebp], 0
	jmp	SHORT $LN121@ingameCmd
$LN120@ingameCmd:
	mov	eax, DWORD PTR _i$154455[ebp]
	add	eax, 1
	mov	DWORD PTR _i$154455[ebp], eax
$LN121@ingameCmd:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$154455[ebp], edx
	jae	$LN119@ingameCmd
; Line 604
	lea	eax, DWORD PTR _victim$154446[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$154455[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN118@ingameCmd
; Line 606
	push	6
	push	0
	lea	edx, DWORD PTR _victim$154446[ebp]
	push	edx
	push	OFFSET $SG-385
	lea	eax, DWORD PTR $T154460[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8589[ebp], eax
	mov	ecx, DWORD PTR tv8589[ebp]
	mov	DWORD PTR tv7654[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH
	push	OFFSET $SG-384
	mov	edx, DWORD PTR tv7654[ebp]
	push	edx
	lea	eax, DWORD PTR $T154461[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8590[ebp], eax
	mov	ecx, DWORD PTR tv8590[ebp]
	mov	DWORD PTR tv7656[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	movzx	edx, BYTE PTR _whitespacePos$154444[ebp]
	push	edx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372905[ebp], esp
	push	eax
	mov	edx, DWORD PTR tv7656[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8591[ebp], eax
	mov	eax, DWORD PTR tv8591[ebp]
	mov	DWORD PTR tv7660[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 142		; 0000008eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372906[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7663[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 141		; 0000008dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
	mov	BYTE PTR __$EHRec$[ebp+8], 140		; 0000008cH
	lea	ecx, DWORD PTR $T154461[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	lea	ecx, DWORD PTR $T154460[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 607
	push	1
	movzx	ecx, BYTE PTR _whitespacePos$154444[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372907[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8593[ebp], eax
	mov	edx, DWORD PTR tv8593[ebp]
	mov	DWORD PTR tv7666[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 143		; 0000008fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372908[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8594[ebp], eax
	mov	ecx, DWORD PTR tv8594[ebp]
	mov	DWORD PTR tv7669[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 144		; 00000090H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372909[ebp], esp
	lea	edx, DWORD PTR _victim$154446[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8595[ebp], eax
	mov	eax, DWORD PTR tv8595[ebp]
	mov	DWORD PTR tv7672[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 145		; 00000091H
	mov	ecx, DWORD PTR _i$154455[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23420]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372910[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7675[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z ; Battlefield::game::player_ban
; Line 608
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372911[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8597[ebp], eax
	mov	eax, DWORD PTR tv8597[ebp]
	mov	DWORD PTR tv7677[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 146		; 00000092H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372912[ebp], esp
	push	OFFSET $SG-386
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8598[ebp], eax
	mov	ecx, DWORD PTR tv8598[ebp]
	mov	DWORD PTR tv7680[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 147		; 00000093H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372913[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-387
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7683[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 609
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	lea	ecx, DWORD PTR _reason$154448[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154446[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN118@ingameCmd:
; Line 611
	jmp	$LN120@ingameCmd
$LN119@ingameCmd:
; Line 613
	lea	ecx, DWORD PTR _victim$154446[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154477[ebp], al
; Line 614
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372914[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8600[ebp], eax
	mov	eax, DWORD PTR tv8600[ebp]
	mov	DWORD PTR tv7691[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 148		; 00000094H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372915[ebp], esp
	push	OFFSET $SG-388
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8601[ebp], eax
	mov	ecx, DWORD PTR tv8601[ebp]
	mov	DWORD PTR tv7694[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 149		; 00000095H
	movzx	edx, BYTE PTR _index$154477[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154480[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8602[ebp], eax
	mov	eax, DWORD PTR tv8602[ebp]
	mov	DWORD PTR tv7696[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 150		; 00000096H
	movzx	ecx, BYTE PTR _index$154477[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-391
	lea	ecx, DWORD PTR $T154478[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8603[ebp], eax
	mov	edx, DWORD PTR tv8603[ebp]
	mov	DWORD PTR tv7698[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 151		; 00000097H
	push	OFFSET $SG-390
	mov	eax, DWORD PTR tv7698[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154479[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8604[ebp], eax
	mov	edx, DWORD PTR tv8604[ebp]
	mov	DWORD PTR tv7700[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 152		; 00000098H
	mov	eax, DWORD PTR tv7696[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7700[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154481[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8605[ebp], eax
	mov	eax, DWORD PTR tv8605[ebp]
	mov	DWORD PTR tv7702[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 153		; 00000099H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372916[ebp], esp
	push	OFFSET $SG-389
	mov	edx, DWORD PTR tv7702[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7705[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 157		; 0000009dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 156		; 0000009cH
	lea	ecx, DWORD PTR $T154481[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 155		; 0000009bH
	lea	ecx, DWORD PTR $T154479[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 154		; 0000009aH
	lea	ecx, DWORD PTR $T154478[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 137		; 00000089H
	lea	ecx, DWORD PTR $T154480[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 615
	mov	BYTE PTR __$EHRec$[ebp+8], 136		; 00000088H
	lea	ecx, DWORD PTR _reason$154448[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _victim$154446[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 616
	jmp	SHORT $LN117@ingameCmd
$LN123@ingameCmd:
; Line 617
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372917[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8607[ebp], eax
	mov	ecx, DWORD PTR tv8607[ebp]
	mov	DWORD PTR tv7707[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 158		; 0000009eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372918[ebp], esp
	push	OFFSET $SG-392
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8608[ebp], eax
	mov	edx, DWORD PTR tv8608[ebp]
	mov	DWORD PTR tv7710[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 159		; 0000009fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372919[ebp], esp
	push	OFFSET $SG-393
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7713[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN117@ingameCmd:
	jmp	$LN47@ingameCmd
$LN124@ingameCmd:
; Line 619
	push	OFFSET $SG-394
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN115@ingameCmd
; Line 621
	push	0
	push	32					; 00000020H
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	BYTE PTR _whitespacePos$154499[ebp], al
; Line 622
	movzx	edx, BYTE PTR _whitespacePos$154499[ebp]
	cmp	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN114@ingameCmd
; Line 624
	mov	DWORD PTR _i$154501[ebp], 0
	jmp	SHORT $LN113@ingameCmd
$LN112@ingameCmd:
	mov	eax, DWORD PTR _i$154501[ebp]
	add	eax, 1
	mov	DWORD PTR _i$154501[ebp], eax
$LN113@ingameCmd:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$154501[ebp], edx
	jae	$LN111@ingameCmd
; Line 626
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$154501[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN110@ingameCmd
; Line 628
	push	6
	push	0
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372920[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-395
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8610[ebp], eax
	mov	ecx, DWORD PTR tv8610[ebp]
	mov	DWORD PTR tv7717[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 160		; 000000a0H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372921[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7720[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 629
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372922[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8612[ebp], eax
	mov	eax, DWORD PTR tv8612[ebp]
	mov	DWORD PTR tv7722[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 161		; 000000a1H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372923[ebp], esp
	push	OFFSET $SG-396
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8613[ebp], eax
	mov	ecx, DWORD PTR tv8613[ebp]
	mov	DWORD PTR tv7725[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 162		; 000000a2H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372924[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-397
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7728[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 630
	mov	BYTE PTR _i$154516[ebp], 0
	jmp	SHORT $LN109@ingameCmd
$LN108@ingameCmd:
	mov	cl, BYTE PTR _i$154516[ebp]
	add	cl, 1
	mov	BYTE PTR _i$154516[ebp], cl
$LN109@ingameCmd:
	movzx	edx, BYTE PTR _i$154516[ebp]
	cmp	edx, 50					; 00000032H
	jge	$LN107@ingameCmd
; Line 632
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372925[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8615[ebp], eax
	mov	ecx, DWORD PTR tv8615[ebp]
	mov	DWORD PTR tv7730[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 163		; 000000a3H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372926[ebp], esp
	push	OFFSET $SG-398
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8616[ebp], eax
	mov	edx, DWORD PTR tv8616[ebp]
	mov	DWORD PTR tv7733[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 164		; 000000a4H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372927[ebp], esp
	push	OFFSET $SG-399
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7736[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 633
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372928[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8618[ebp], eax
	mov	ecx, DWORD PTR tv8618[ebp]
	mov	DWORD PTR tv7738[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 165		; 000000a5H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372929[ebp], esp
	push	OFFSET $SG-400
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8619[ebp], eax
	mov	edx, DWORD PTR tv8619[ebp]
	mov	DWORD PTR tv7741[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 166		; 000000a6H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372930[ebp], esp
	push	OFFSET $SG-401
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7744[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 634
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372931[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8621[ebp], eax
	mov	ecx, DWORD PTR tv8621[ebp]
	mov	DWORD PTR tv7746[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 167		; 000000a7H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372932[ebp], esp
	push	OFFSET $SG-402
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8622[ebp], eax
	mov	edx, DWORD PTR tv8622[ebp]
	mov	DWORD PTR tv7749[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 168		; 000000a8H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372933[ebp], esp
	push	OFFSET $SG-403
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7752[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 635
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372934[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8624[ebp], eax
	mov	ecx, DWORD PTR tv8624[ebp]
	mov	DWORD PTR tv7754[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 169		; 000000a9H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372935[ebp], esp
	push	OFFSET $SG-404
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8625[ebp], eax
	mov	edx, DWORD PTR tv8625[ebp]
	mov	DWORD PTR tv7757[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 170		; 000000aaH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372936[ebp], esp
	push	OFFSET $SG-405
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7760[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 636
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372937[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8627[ebp], eax
	mov	ecx, DWORD PTR tv8627[ebp]
	mov	DWORD PTR tv7762[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 171		; 000000abH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372938[ebp], esp
	push	OFFSET $SG-406
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8628[ebp], eax
	mov	edx, DWORD PTR tv8628[ebp]
	mov	DWORD PTR tv7765[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 172		; 000000acH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372939[ebp], esp
	push	OFFSET $SG-407
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7768[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 637
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372940[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8630[ebp], eax
	mov	ecx, DWORD PTR tv8630[ebp]
	mov	DWORD PTR tv7770[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 173		; 000000adH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372941[ebp], esp
	push	OFFSET $SG-408
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8631[ebp], eax
	mov	edx, DWORD PTR tv8631[ebp]
	mov	DWORD PTR tv7773[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 174		; 000000aeH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372942[ebp], esp
	push	OFFSET $SG-409
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7776[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 638
	jmp	$LN108@ingameCmd
$LN107@ingameCmd:
; Line 639
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372943[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8633[ebp], eax
	mov	ecx, DWORD PTR tv8633[ebp]
	mov	DWORD PTR tv7778[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 175		; 000000afH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372944[ebp], esp
	push	OFFSET $SG-410
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8634[ebp], eax
	mov	edx, DWORD PTR tv8634[ebp]
	mov	DWORD PTR tv7781[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 176		; 000000b0H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372945[ebp], esp
	push	OFFSET $SG-411
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7784[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 640
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN110@ingameCmd:
; Line 642
	jmp	$LN112@ingameCmd
$LN111@ingameCmd:
; Line 644
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154555[ebp], al
; Line 645
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372946[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8636[ebp], eax
	mov	eax, DWORD PTR tv8636[ebp]
	mov	DWORD PTR tv7790[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 177		; 000000b1H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372947[ebp], esp
	push	OFFSET $SG-412
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8637[ebp], eax
	mov	ecx, DWORD PTR tv8637[ebp]
	mov	DWORD PTR tv7793[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 178		; 000000b2H
	movzx	edx, BYTE PTR _index$154555[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	lea	edx, DWORD PTR $T154558[ebp]
	push	edx
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8638[ebp], eax
	mov	eax, DWORD PTR tv8638[ebp]
	mov	DWORD PTR tv7795[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 179		; 000000b3H
	movzx	ecx, BYTE PTR _index$154555[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-415
	lea	ecx, DWORD PTR $T154556[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8639[ebp], eax
	mov	edx, DWORD PTR tv8639[ebp]
	mov	DWORD PTR tv7797[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 180		; 000000b4H
	push	OFFSET $SG-414
	mov	eax, DWORD PTR tv7797[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154557[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8640[ebp], eax
	mov	edx, DWORD PTR tv8640[ebp]
	mov	DWORD PTR tv7799[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 181		; 000000b5H
	mov	eax, DWORD PTR tv7795[ebp]
	push	eax
	mov	ecx, DWORD PTR tv7799[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154559[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8641[ebp], eax
	mov	eax, DWORD PTR tv8641[ebp]
	mov	DWORD PTR tv7801[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 182		; 000000b6H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372948[ebp], esp
	push	OFFSET $SG-413
	mov	edx, DWORD PTR tv7801[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7804[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 186		; 000000baH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 185		; 000000b9H
	lea	ecx, DWORD PTR $T154559[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 184		; 000000b8H
	lea	ecx, DWORD PTR $T154557[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 183		; 000000b7H
	lea	ecx, DWORD PTR $T154556[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154558[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 647
	jmp	SHORT $LN106@ingameCmd
$LN114@ingameCmd:
; Line 648
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372949[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8643[ebp], eax
	mov	ecx, DWORD PTR tv8643[ebp]
	mov	DWORD PTR tv7806[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 187		; 000000bbH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372950[ebp], esp
	push	OFFSET $SG-416
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8644[ebp], eax
	mov	edx, DWORD PTR tv8644[ebp]
	mov	DWORD PTR tv7809[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 188		; 000000bcH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372951[ebp], esp
	push	OFFSET $SG-417
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7812[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN106@ingameCmd:
	jmp	$LN47@ingameCmd
$LN115@ingameCmd:
; Line 650
	push	OFFSET $SG-418
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN104@ingameCmd
; Line 652
	push	0
	push	32					; 00000020H
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	BYTE PTR _whitespacePos$154577[ebp], al
; Line 653
	movzx	edx, BYTE PTR _whitespacePos$154577[ebp]
	cmp	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN103@ingameCmd
; Line 655
	mov	DWORD PTR _i$154579[ebp], 0
	jmp	SHORT $LN102@ingameCmd
$LN101@ingameCmd:
	mov	eax, DWORD PTR _i$154579[ebp]
	add	eax, 1
	mov	DWORD PTR _i$154579[ebp], eax
$LN102@ingameCmd:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$154579[ebp], edx
	jae	$LN100@ingameCmd
; Line 657
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$154579[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN99@ingameCmd
; Line 659
	push	6
	push	0
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372952[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-419
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8646[ebp], eax
	mov	ecx, DWORD PTR tv8646[ebp]
	mov	DWORD PTR tv7816[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 189		; 000000bdH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372953[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7819[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
; Line 660
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372954[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8648[ebp], eax
	mov	eax, DWORD PTR tv8648[ebp]
	mov	DWORD PTR tv7821[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 190		; 000000beH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372955[ebp], esp
	push	OFFSET $SG-420
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8649[ebp], eax
	mov	ecx, DWORD PTR tv8649[ebp]
	mov	DWORD PTR tv7824[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 191		; 000000bfH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T372956[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	push	OFFSET $SG-421
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv7827[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 662
	mov	BYTE PTR _i$154594[ebp], 0
	jmp	SHORT $LN98@ingameCmd
$LN97@ingameCmd:
	mov	cl, BYTE PTR _i$154594[ebp]
	add	cl, 1
	mov	BYTE PTR _i$154594[ebp], cl
$LN98@ingameCmd:
	movzx	edx, BYTE PTR _i$154594[ebp]
	cmp	edx, 4
	jge	$LN96@ingameCmd
; Line 663
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372957[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8651[ebp], eax
	mov	ecx, DWORD PTR tv8651[ebp]
	mov	DWORD PTR tv7829[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 192		; 000000c0H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372958[ebp], esp
	push	OFFSET $SG-422
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8652[ebp], eax
	mov	edx, DWORD PTR tv8652[ebp]
	mov	DWORD PTR tv7832[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 193		; 000000c1H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372959[ebp], esp
	push	OFFSET $SG-423
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7835[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN97@ingameCmd
$LN96@ingameCmd:
; Line 665
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372960[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8654[ebp], eax
	mov	ecx, DWORD PTR tv8654[ebp]
	mov	DWORD PTR tv7837[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 194		; 000000c2H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372961[ebp], esp
	push	OFFSET $SG-424
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8655[ebp], eax
	mov	edx, DWORD PTR tv8655[ebp]
	mov	DWORD PTR tv7840[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 195		; 000000c3H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372962[ebp], esp
	push	OFFSET $SG-425
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7843[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 666
	mov	BYTE PTR _i$154608[ebp], 0
	jmp	SHORT $LN95@ingameCmd
$LN94@ingameCmd:
	mov	al, BYTE PTR _i$154608[ebp]
	add	al, 1
	mov	BYTE PTR _i$154608[ebp], al
$LN95@ingameCmd:
	movzx	ecx, BYTE PTR _i$154608[ebp]
	cmp	ecx, 4
	jge	$LN93@ingameCmd
; Line 667
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372963[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8657[ebp], eax
	mov	eax, DWORD PTR tv8657[ebp]
	mov	DWORD PTR tv7845[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 196		; 000000c4H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372964[ebp], esp
	push	OFFSET $SG-426
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8658[ebp], eax
	mov	ecx, DWORD PTR tv8658[ebp]
	mov	DWORD PTR tv7848[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 197		; 000000c5H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372965[ebp], esp
	push	OFFSET $SG-427
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7851[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN94@ingameCmd
$LN93@ingameCmd:
; Line 669
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372966[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8660[ebp], eax
	mov	eax, DWORD PTR tv8660[ebp]
	mov	DWORD PTR tv7853[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 198		; 000000c6H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372967[ebp], esp
	push	OFFSET $SG-428
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8661[ebp], eax
	mov	ecx, DWORD PTR tv8661[ebp]
	mov	DWORD PTR tv7856[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 199		; 000000c7H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372968[ebp], esp
	push	OFFSET $SG-429
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7859[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 670
	mov	BYTE PTR _i2$154622[ebp], 0
	jmp	SHORT $LN92@ingameCmd
$LN91@ingameCmd:
	mov	dl, BYTE PTR _i2$154622[ebp]
	add	dl, 1
	mov	BYTE PTR _i2$154622[ebp], dl
$LN92@ingameCmd:
	movzx	eax, BYTE PTR _i2$154622[ebp]
	cmp	eax, 40					; 00000028H
	jge	$LN90@ingameCmd
; Line 671
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372969[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8663[ebp], eax
	mov	eax, DWORD PTR tv8663[ebp]
	mov	DWORD PTR tv7861[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 200		; 000000c8H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372970[ebp], esp
	push	OFFSET $SG-430
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8664[ebp], eax
	mov	ecx, DWORD PTR tv8664[ebp]
	mov	DWORD PTR tv7864[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 201		; 000000c9H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372971[ebp], esp
	push	OFFSET $SG-431
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7867[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN91@ingameCmd
$LN90@ingameCmd:
; Line 673
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372972[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8666[ebp], eax
	mov	eax, DWORD PTR tv8666[ebp]
	mov	DWORD PTR tv7869[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 202		; 000000caH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372973[ebp], esp
	push	OFFSET $SG-432
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8667[ebp], eax
	mov	ecx, DWORD PTR tv8667[ebp]
	mov	DWORD PTR tv7872[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 203		; 000000cbH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372974[ebp], esp
	push	OFFSET $SG-433
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7875[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 674
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372975[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8669[ebp], eax
	mov	eax, DWORD PTR tv8669[ebp]
	mov	DWORD PTR tv7877[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 204		; 000000ccH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372976[ebp], esp
	push	OFFSET $SG-434
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8670[ebp], eax
	mov	ecx, DWORD PTR tv8670[ebp]
	mov	DWORD PTR tv7880[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 205		; 000000cdH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372977[ebp], esp
	push	OFFSET $SG-435
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7883[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 675
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372978[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8672[ebp], eax
	mov	eax, DWORD PTR tv8672[ebp]
	mov	DWORD PTR tv7885[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 206		; 000000ceH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372979[ebp], esp
	push	OFFSET $SG-436
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8673[ebp], eax
	mov	ecx, DWORD PTR tv8673[ebp]
	mov	DWORD PTR tv7888[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 207		; 000000cfH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372980[ebp], esp
	push	OFFSET $SG-437
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7891[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 676
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372981[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8675[ebp], eax
	mov	eax, DWORD PTR tv8675[ebp]
	mov	DWORD PTR tv7893[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 208		; 000000d0H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372982[ebp], esp
	push	OFFSET $SG-438
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8676[ebp], eax
	mov	ecx, DWORD PTR tv8676[ebp]
	mov	DWORD PTR tv7896[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 209		; 000000d1H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372983[ebp], esp
	push	OFFSET $SG-439
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7899[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 677
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372984[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8678[ebp], eax
	mov	eax, DWORD PTR tv8678[ebp]
	mov	DWORD PTR tv7901[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 210		; 000000d2H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372985[ebp], esp
	push	OFFSET $SG-440
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8679[ebp], eax
	mov	ecx, DWORD PTR tv8679[ebp]
	mov	DWORD PTR tv7904[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 211		; 000000d3H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372986[ebp], esp
	push	OFFSET $SG-441
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7907[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 678
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372987[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8681[ebp], eax
	mov	eax, DWORD PTR tv8681[ebp]
	mov	DWORD PTR tv7909[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 212		; 000000d4H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372988[ebp], esp
	push	OFFSET $SG-442
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8682[ebp], eax
	mov	ecx, DWORD PTR tv8682[ebp]
	mov	DWORD PTR tv7912[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 213		; 000000d5H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372989[ebp], esp
	push	OFFSET $SG-443
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7915[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 679
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372990[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8684[ebp], eax
	mov	eax, DWORD PTR tv8684[ebp]
	mov	DWORD PTR tv7917[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 214		; 000000d6H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372991[ebp], esp
	push	OFFSET $SG-444
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8685[ebp], eax
	mov	ecx, DWORD PTR tv8685[ebp]
	mov	DWORD PTR tv7920[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 215		; 000000d7H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372992[ebp], esp
	push	OFFSET $SG-445
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7923[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 681
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372993[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8687[ebp], eax
	mov	eax, DWORD PTR tv8687[ebp]
	mov	DWORD PTR tv7925[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 216		; 000000d8H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372994[ebp], esp
	push	OFFSET $SG-446
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8688[ebp], eax
	mov	ecx, DWORD PTR tv8688[ebp]
	mov	DWORD PTR tv7928[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 217		; 000000d9H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372995[ebp], esp
	push	OFFSET $SG-447
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7931[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 682
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372996[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8690[ebp], eax
	mov	eax, DWORD PTR tv8690[ebp]
	mov	DWORD PTR tv7933[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 218		; 000000daH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372997[ebp], esp
	push	OFFSET $SG-448
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8691[ebp], eax
	mov	ecx, DWORD PTR tv8691[ebp]
	mov	DWORD PTR tv7936[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 219		; 000000dbH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372998[ebp], esp
	push	OFFSET $SG-449
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7939[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 683
	mov	BYTE PTR _i2$154676[ebp], 0
	jmp	SHORT $LN89@ingameCmd
$LN88@ingameCmd:
	mov	dl, BYTE PTR _i2$154676[ebp]
	add	dl, 1
	mov	BYTE PTR _i2$154676[ebp], dl
$LN89@ingameCmd:
	movzx	eax, BYTE PTR _i2$154676[ebp]
	cmp	eax, 40					; 00000028H
	jge	$LN87@ingameCmd
; Line 684
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T372999[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8693[ebp], eax
	mov	eax, DWORD PTR tv8693[ebp]
	mov	DWORD PTR tv7941[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 220		; 000000dcH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373000[ebp], esp
	push	OFFSET $SG-450
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8694[ebp], eax
	mov	ecx, DWORD PTR tv8694[ebp]
	mov	DWORD PTR tv7944[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 221		; 000000ddH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373001[ebp], esp
	push	OFFSET $SG-451
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7947[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN88@ingameCmd
$LN87@ingameCmd:
; Line 685
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373002[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8696[ebp], eax
	mov	eax, DWORD PTR tv8696[ebp]
	mov	DWORD PTR tv7949[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 222		; 000000deH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373003[ebp], esp
	push	OFFSET $SG-452
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8697[ebp], eax
	mov	ecx, DWORD PTR tv8697[ebp]
	mov	DWORD PTR tv7952[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 223		; 000000dfH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373004[ebp], esp
	push	OFFSET $SG-453
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7955[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 686
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373005[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8699[ebp], eax
	mov	eax, DWORD PTR tv8699[ebp]
	mov	DWORD PTR tv7957[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 224		; 000000e0H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373006[ebp], esp
	push	OFFSET $SG-454
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8700[ebp], eax
	mov	ecx, DWORD PTR tv8700[ebp]
	mov	DWORD PTR tv7960[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 225		; 000000e1H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373007[ebp], esp
	push	OFFSET $SG-455
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7963[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 688
	mov	DWORD PTR _bla$154695[ebp], 10		; 0000000aH
$LN86@ingameCmd:
; Line 689
	mov	edx, DWORD PTR _bla$154695[ebp]
	mov	eax, DWORD PTR _bla$154695[ebp]
	sub	eax, 1
	mov	DWORD PTR _bla$154695[ebp], eax
	test	edx, edx
	je	$LN85@ingameCmd
; Line 691
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373008[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8702[ebp], eax
	mov	eax, DWORD PTR tv8702[ebp]
	mov	DWORD PTR tv7965[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 226		; 000000e2H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373009[ebp], esp
	push	OFFSET $SG-456
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8703[ebp], eax
	mov	ecx, DWORD PTR tv8703[ebp]
	mov	DWORD PTR tv7968[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 227		; 000000e3H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373010[ebp], esp
	push	OFFSET $SG-457
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7971[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 692
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373011[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8705[ebp], eax
	mov	eax, DWORD PTR tv8705[ebp]
	mov	DWORD PTR tv7973[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 228		; 000000e4H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373012[ebp], esp
	push	OFFSET $SG-458
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8706[ebp], eax
	mov	ecx, DWORD PTR tv8706[ebp]
	mov	DWORD PTR tv7976[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 229		; 000000e5H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373013[ebp], esp
	push	OFFSET $SG-459
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7979[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 693
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373014[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8708[ebp], eax
	mov	eax, DWORD PTR tv8708[ebp]
	mov	DWORD PTR tv7981[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 230		; 000000e6H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373015[ebp], esp
	push	OFFSET $SG-460
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8709[ebp], eax
	mov	ecx, DWORD PTR tv8709[ebp]
	mov	DWORD PTR tv7984[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 231		; 000000e7H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373016[ebp], esp
	lea	eax, DWORD PTR _bla$154695[ebp]
	push	eax
	push	edx
	call	??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ; dlib::cast_to_string<int>
	add	esp, 8
	mov	DWORD PTR tv7987[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 694
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373017[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8711[ebp], eax
	mov	eax, DWORD PTR tv8711[ebp]
	mov	DWORD PTR tv7989[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 232		; 000000e8H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373018[ebp], esp
	push	OFFSET $SG-461
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8712[ebp], eax
	mov	ecx, DWORD PTR tv8712[ebp]
	mov	DWORD PTR tv7992[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 233		; 000000e9H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373019[ebp], esp
	push	OFFSET $SG-462
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7995[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 695
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373020[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8714[ebp], eax
	mov	eax, DWORD PTR tv8714[ebp]
	mov	DWORD PTR tv7997[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 234		; 000000eaH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373021[ebp], esp
	push	OFFSET $SG-463
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8715[ebp], eax
	mov	ecx, DWORD PTR tv8715[ebp]
	mov	DWORD PTR tv8000[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 235		; 000000ebH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373022[ebp], esp
	push	OFFSET $SG-464
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8003[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 696
	jmp	$LN86@ingameCmd
$LN85@ingameCmd:
; Line 698
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373023[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8717[ebp], eax
	mov	eax, DWORD PTR tv8717[ebp]
	mov	DWORD PTR tv8005[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 236		; 000000ecH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373024[ebp], esp
	push	OFFSET $SG-465
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8718[ebp], eax
	mov	ecx, DWORD PTR tv8718[ebp]
	mov	DWORD PTR tv8008[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 237		; 000000edH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373025[ebp], esp
	push	OFFSET $SG-466
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8011[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 699
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN99@ingameCmd:
; Line 701
	jmp	$LN101@ingameCmd
$LN100@ingameCmd:
; Line 703
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	mov	BYTE PTR _index$154733[ebp], al
; Line 704
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373026[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8720[ebp], eax
	mov	ecx, DWORD PTR tv8720[ebp]
	mov	DWORD PTR tv8017[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 238		; 000000eeH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373027[ebp], esp
	push	OFFSET $SG-467
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8721[ebp], eax
	mov	edx, DWORD PTR tv8721[ebp]
	mov	DWORD PTR tv8020[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 239		; 000000efH
	movzx	eax, BYTE PTR _index$154733[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	lea	eax, DWORD PTR $T154736[ebp]
	push	eax
	call	??$toupper@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::toupper<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv8722[ebp], eax
	mov	ecx, DWORD PTR tv8722[ebp]
	mov	DWORD PTR tv8022[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 240		; 000000f0H
	movzx	edx, BYTE PTR _index$154733[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	push	OFFSET $SG-470
	lea	edx, DWORD PTR $T154734[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8723[ebp], eax
	mov	eax, DWORD PTR tv8723[ebp]
	mov	DWORD PTR tv8024[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 241		; 000000f1H
	push	OFFSET $SG-469
	mov	ecx, DWORD PTR tv8024[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154735[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8724[ebp], eax
	mov	eax, DWORD PTR tv8724[ebp]
	mov	DWORD PTR tv8026[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 242		; 000000f2H
	mov	ecx, DWORD PTR tv8022[ebp]
	push	ecx
	mov	edx, DWORD PTR tv8026[ebp]
	push	edx
	lea	eax, DWORD PTR $T154737[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8725[ebp], eax
	mov	ecx, DWORD PTR tv8725[ebp]
	mov	DWORD PTR tv8028[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 243		; 000000f3H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373028[ebp], esp
	push	OFFSET $SG-468
	mov	eax, DWORD PTR tv8028[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8031[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 247		; 000000f7H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 246		; 000000f6H
	lea	ecx, DWORD PTR $T154737[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 245		; 000000f5H
	lea	ecx, DWORD PTR $T154735[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 244		; 000000f4H
	lea	ecx, DWORD PTR $T154734[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154736[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 706
	jmp	SHORT $LN84@ingameCmd
$LN103@ingameCmd:
; Line 707
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373029[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8727[ebp], eax
	mov	eax, DWORD PTR tv8727[ebp]
	mov	DWORD PTR tv8033[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 248		; 000000f8H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373030[ebp], esp
	push	OFFSET $SG-471
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8728[ebp], eax
	mov	ecx, DWORD PTR tv8728[ebp]
	mov	DWORD PTR tv8036[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 249		; 000000f9H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373031[ebp], esp
	push	OFFSET $SG-472
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8039[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN84@ingameCmd:
	jmp	$LN47@ingameCmd
$LN104@ingameCmd:
; Line 709
	push	OFFSET $SG-473
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN82@ingameCmd
; Line 711
	mov	BYTE PTR _i$154755[ebp], 0
	jmp	SHORT $LN81@ingameCmd
$LN80@ingameCmd:
	mov	cl, BYTE PTR _i$154755[ebp]
	add	cl, 1
	mov	BYTE PTR _i$154755[ebp], cl
$LN81@ingameCmd:
	movzx	edx, BYTE PTR _i$154755[ebp]
	cmp	edx, 4
	jge	$LN79@ingameCmd
; Line 712
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373032[ebp], esp
	push	OFFSET $SG-474
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8730[ebp], eax
	mov	eax, DWORD PTR tv8730[ebp]
	mov	DWORD PTR tv8041[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 250		; 000000faH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373033[ebp], esp
	push	OFFSET $SG-475
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8731[ebp], eax
	mov	ecx, DWORD PTR tv8731[ebp]
	mov	DWORD PTR tv8044[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 251		; 000000fbH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373034[ebp], esp
	push	OFFSET $SG-476
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8047[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN80@ingameCmd
$LN79@ingameCmd:
; Line 714
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373035[ebp], esp
	push	OFFSET $SG-477
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8733[ebp], eax
	mov	edx, DWORD PTR tv8733[ebp]
	mov	DWORD PTR tv8049[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 252		; 000000fcH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373036[ebp], esp
	push	OFFSET $SG-478
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8734[ebp], eax
	mov	eax, DWORD PTR tv8734[ebp]
	mov	DWORD PTR tv8052[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 253		; 000000fdH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373037[ebp], esp
	push	OFFSET $SG-479
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8055[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 715
	mov	BYTE PTR _i$154771[ebp], 0
	jmp	SHORT $LN78@ingameCmd
$LN77@ingameCmd:
	mov	cl, BYTE PTR _i$154771[ebp]
	add	cl, 1
	mov	BYTE PTR _i$154771[ebp], cl
$LN78@ingameCmd:
	movzx	edx, BYTE PTR _i$154771[ebp]
	cmp	edx, 4
	jge	$LN76@ingameCmd
; Line 716
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373038[ebp], esp
	push	OFFSET $SG-480
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8736[ebp], eax
	mov	eax, DWORD PTR tv8736[ebp]
	mov	DWORD PTR tv8057[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 254		; 000000feH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373039[ebp], esp
	push	OFFSET $SG-481
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8737[ebp], eax
	mov	ecx, DWORD PTR tv8737[ebp]
	mov	DWORD PTR tv8060[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 255		; 000000ffH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373040[ebp], esp
	push	OFFSET $SG-482
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8063[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN77@ingameCmd
$LN76@ingameCmd:
; Line 718
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373041[ebp], esp
	push	OFFSET $SG-483
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8739[ebp], eax
	mov	edx, DWORD PTR tv8739[ebp]
	mov	DWORD PTR tv8065[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 256		; 00000100H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373042[ebp], esp
	push	OFFSET $SG-484
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8740[ebp], eax
	mov	eax, DWORD PTR tv8740[ebp]
	mov	DWORD PTR tv8068[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373043[ebp], esp
	push	OFFSET $SG-485
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8071[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 719
	mov	BYTE PTR _i2$154787[ebp], 0
	jmp	SHORT $LN75@ingameCmd
$LN74@ingameCmd:
	mov	cl, BYTE PTR _i2$154787[ebp]
	add	cl, 1
	mov	BYTE PTR _i2$154787[ebp], cl
$LN75@ingameCmd:
	movzx	edx, BYTE PTR _i2$154787[ebp]
	cmp	edx, 40					; 00000028H
	jge	$LN73@ingameCmd
; Line 720
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373044[ebp], esp
	push	OFFSET $SG-486
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8741[ebp], eax
	mov	eax, DWORD PTR tv8741[ebp]
	mov	DWORD PTR tv8073[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 258		; 00000102H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373045[ebp], esp
	push	OFFSET $SG-487
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8742[ebp], eax
	mov	ecx, DWORD PTR tv8742[ebp]
	mov	DWORD PTR tv8076[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373046[ebp], esp
	push	OFFSET $SG-488
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8079[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN74@ingameCmd
$LN73@ingameCmd:
; Line 722
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373047[ebp], esp
	push	OFFSET $SG-489
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8743[ebp], eax
	mov	edx, DWORD PTR tv8743[ebp]
	mov	DWORD PTR tv8081[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 260		; 00000104H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373048[ebp], esp
	push	OFFSET $SG-490
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8744[ebp], eax
	mov	eax, DWORD PTR tv8744[ebp]
	mov	DWORD PTR tv8084[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373049[ebp], esp
	push	OFFSET $SG-491
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8087[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 723
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373050[ebp], esp
	push	OFFSET $SG-492
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8745[ebp], eax
	mov	ecx, DWORD PTR tv8745[ebp]
	mov	DWORD PTR tv8089[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 262		; 00000106H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373051[ebp], esp
	push	OFFSET $SG-493
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8746[ebp], eax
	mov	edx, DWORD PTR tv8746[ebp]
	mov	DWORD PTR tv8092[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373052[ebp], esp
	push	OFFSET $SG-494
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8095[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 724
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373053[ebp], esp
	push	OFFSET $SG-495
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8747[ebp], eax
	mov	eax, DWORD PTR tv8747[ebp]
	mov	DWORD PTR tv8097[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 264		; 00000108H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373054[ebp], esp
	push	OFFSET $SG-496
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8748[ebp], eax
	mov	ecx, DWORD PTR tv8748[ebp]
	mov	DWORD PTR tv8100[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373055[ebp], esp
	push	OFFSET $SG-497
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8103[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 725
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373056[ebp], esp
	push	OFFSET $SG-498
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8749[ebp], eax
	mov	edx, DWORD PTR tv8749[ebp]
	mov	DWORD PTR tv8105[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 266		; 0000010aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373057[ebp], esp
	push	OFFSET $SG-499
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8750[ebp], eax
	mov	eax, DWORD PTR tv8750[ebp]
	mov	DWORD PTR tv8108[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373058[ebp], esp
	push	OFFSET $SG-500
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8111[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 726
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373059[ebp], esp
	push	OFFSET $SG-501
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8751[ebp], eax
	mov	ecx, DWORD PTR tv8751[ebp]
	mov	DWORD PTR tv8113[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 268		; 0000010cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373060[ebp], esp
	push	OFFSET $SG-502
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8752[ebp], eax
	mov	edx, DWORD PTR tv8752[ebp]
	mov	DWORD PTR tv8116[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373061[ebp], esp
	push	OFFSET $SG-503
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8119[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 727
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373062[ebp], esp
	push	OFFSET $SG-504
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8753[ebp], eax
	mov	eax, DWORD PTR tv8753[ebp]
	mov	DWORD PTR tv8121[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 270		; 0000010eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373063[ebp], esp
	push	OFFSET $SG-505
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8754[ebp], eax
	mov	ecx, DWORD PTR tv8754[ebp]
	mov	DWORD PTR tv8124[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373064[ebp], esp
	push	OFFSET $SG-506
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8127[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 728
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373065[ebp], esp
	push	OFFSET $SG-507
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8755[ebp], eax
	mov	edx, DWORD PTR tv8755[ebp]
	mov	DWORD PTR tv8129[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 272		; 00000110H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373066[ebp], esp
	push	OFFSET $SG-508
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8756[ebp], eax
	mov	eax, DWORD PTR tv8756[ebp]
	mov	DWORD PTR tv8132[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373067[ebp], esp
	push	OFFSET $SG-509
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8135[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 730
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373068[ebp], esp
	push	OFFSET $SG-510
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8757[ebp], eax
	mov	ecx, DWORD PTR tv8757[ebp]
	mov	DWORD PTR tv8137[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 274		; 00000112H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373069[ebp], esp
	push	OFFSET $SG-511
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8758[ebp], eax
	mov	edx, DWORD PTR tv8758[ebp]
	mov	DWORD PTR tv8140[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373070[ebp], esp
	push	OFFSET $SG-512
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8143[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 731
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373071[ebp], esp
	push	OFFSET $SG-513
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8759[ebp], eax
	mov	eax, DWORD PTR tv8759[ebp]
	mov	DWORD PTR tv8145[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 276		; 00000114H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373072[ebp], esp
	push	OFFSET $SG-514
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8760[ebp], eax
	mov	ecx, DWORD PTR tv8760[ebp]
	mov	DWORD PTR tv8148[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373073[ebp], esp
	push	OFFSET $SG-515
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8151[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 732
	mov	BYTE PTR _i2$154851[ebp], 0
	jmp	SHORT $LN72@ingameCmd
$LN71@ingameCmd:
	mov	dl, BYTE PTR _i2$154851[ebp]
	add	dl, 1
	mov	BYTE PTR _i2$154851[ebp], dl
$LN72@ingameCmd:
	movzx	eax, BYTE PTR _i2$154851[ebp]
	cmp	eax, 40					; 00000028H
	jge	$LN70@ingameCmd
; Line 733
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373074[ebp], esp
	push	OFFSET $SG-516
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8761[ebp], eax
	mov	ecx, DWORD PTR tv8761[ebp]
	mov	DWORD PTR tv8153[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 278		; 00000116H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373075[ebp], esp
	push	OFFSET $SG-517
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8762[ebp], eax
	mov	edx, DWORD PTR tv8762[ebp]
	mov	DWORD PTR tv8156[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373076[ebp], esp
	push	OFFSET $SG-518
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8159[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN71@ingameCmd
$LN70@ingameCmd:
; Line 734
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373077[ebp], esp
	push	OFFSET $SG-519
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8763[ebp], eax
	mov	eax, DWORD PTR tv8763[ebp]
	mov	DWORD PTR tv8161[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 280		; 00000118H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373078[ebp], esp
	push	OFFSET $SG-520
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8764[ebp], eax
	mov	ecx, DWORD PTR tv8764[ebp]
	mov	DWORD PTR tv8164[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373079[ebp], esp
	push	OFFSET $SG-521
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8167[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 735
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373080[ebp], esp
	push	OFFSET $SG-522
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8765[ebp], eax
	mov	edx, DWORD PTR tv8765[ebp]
	mov	DWORD PTR tv8169[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 282		; 0000011aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373081[ebp], esp
	push	OFFSET $SG-523
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8766[ebp], eax
	mov	eax, DWORD PTR tv8766[ebp]
	mov	DWORD PTR tv8172[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373082[ebp], esp
	push	OFFSET $SG-524
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8175[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 737
	mov	DWORD PTR _bla$154873[ebp], 10		; 0000000aH
$LN69@ingameCmd:
; Line 738
	mov	ecx, DWORD PTR _bla$154873[ebp]
	mov	edx, DWORD PTR _bla$154873[ebp]
	sub	edx, 1
	mov	DWORD PTR _bla$154873[ebp], edx
	test	ecx, ecx
	je	$LN68@ingameCmd
; Line 740
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373083[ebp], esp
	push	OFFSET $SG-525
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8767[ebp], eax
	mov	eax, DWORD PTR tv8767[ebp]
	mov	DWORD PTR tv8177[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 284		; 0000011cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373084[ebp], esp
	push	OFFSET $SG-526
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8768[ebp], eax
	mov	ecx, DWORD PTR tv8768[ebp]
	mov	DWORD PTR tv8180[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373085[ebp], esp
	push	OFFSET $SG-527
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8183[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 741
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373086[ebp], esp
	push	OFFSET $SG-528
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8769[ebp], eax
	mov	edx, DWORD PTR tv8769[ebp]
	mov	DWORD PTR tv8185[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 286		; 0000011eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373087[ebp], esp
	push	OFFSET $SG-529
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8770[ebp], eax
	mov	eax, DWORD PTR tv8770[ebp]
	mov	DWORD PTR tv8188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373088[ebp], esp
	push	OFFSET $SG-530
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8191[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 742
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373089[ebp], esp
	push	OFFSET $SG-531
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8771[ebp], eax
	mov	ecx, DWORD PTR tv8771[ebp]
	mov	DWORD PTR tv8193[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 288		; 00000120H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373090[ebp], esp
	push	OFFSET $SG-532
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8772[ebp], eax
	mov	edx, DWORD PTR tv8772[ebp]
	mov	DWORD PTR tv8196[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373091[ebp], esp
	lea	ecx, DWORD PTR _bla$154873[ebp]
	push	ecx
	push	eax
	call	??$cast_to_string@H@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABH@Z ; dlib::cast_to_string<int>
	add	esp, 8
	mov	DWORD PTR tv8199[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 743
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373092[ebp], esp
	push	OFFSET $SG-533
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8773[ebp], eax
	mov	edx, DWORD PTR tv8773[ebp]
	mov	DWORD PTR tv8201[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 290		; 00000122H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373093[ebp], esp
	push	OFFSET $SG-534
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8774[ebp], eax
	mov	eax, DWORD PTR tv8774[ebp]
	mov	DWORD PTR tv8204[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373094[ebp], esp
	push	OFFSET $SG-535
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8207[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 744
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373095[ebp], esp
	push	OFFSET $SG-536
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8775[ebp], eax
	mov	ecx, DWORD PTR tv8775[ebp]
	mov	DWORD PTR tv8209[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 292		; 00000124H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373096[ebp], esp
	push	OFFSET $SG-537
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8776[ebp], eax
	mov	edx, DWORD PTR tv8776[ebp]
	mov	DWORD PTR tv8212[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373097[ebp], esp
	push	OFFSET $SG-538
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8215[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 745
	jmp	$LN69@ingameCmd
$LN68@ingameCmd:
; Line 747
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373098[ebp], esp
	push	OFFSET $SG-539
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8777[ebp], eax
	mov	eax, DWORD PTR tv8777[ebp]
	mov	DWORD PTR tv8217[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 294		; 00000126H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373099[ebp], esp
	push	OFFSET $SG-540
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8778[ebp], eax
	mov	ecx, DWORD PTR tv8778[ebp]
	mov	DWORD PTR tv8220[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373100[ebp], esp
	push	OFFSET $SG-541
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8223[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN47@ingameCmd
$LN82@ingameCmd:
; Line 749
	push	OFFSET $SG-542
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN66@ingameCmd
; Line 751
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373101[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8779[ebp], eax
	mov	eax, DWORD PTR tv8779[ebp]
	mov	DWORD PTR tv8225[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 296		; 00000128H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373102[ebp], esp
	push	OFFSET $SG-543
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8780[ebp], eax
	mov	ecx, DWORD PTR tv8780[ebp]
	mov	DWORD PTR tv8228[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373103[ebp], esp
	push	OFFSET $SG-544
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8231[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN47@ingameCmd
$LN66@ingameCmd:
; Line 753
	push	OFFSET $SG-545
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN64@ingameCmd
; Line 755
	mov	DWORD PTR _i$154924[ebp], 0
	jmp	SHORT $LN63@ingameCmd
$LN62@ingameCmd:
	mov	ecx, DWORD PTR _i$154924[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$154924[ebp], ecx
$LN63@ingameCmd:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	cmp	DWORD PTR _i$154924[ebp], eax
	jae	$LN61@ingameCmd
; Line 757
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$154924[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN60@ingameCmd
; Line 759
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373104[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8781[ebp], eax
	mov	ecx, DWORD PTR tv8781[ebp]
	mov	DWORD PTR tv8233[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 298		; 0000012aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373105[ebp], esp
	push	OFFSET $SG-546
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8782[ebp], eax
	mov	edx, DWORD PTR tv8782[ebp]
	mov	DWORD PTR tv8236[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	eax, DWORD PTR _i$154924[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23420]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373106[ebp], esp
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8239[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 760
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN184@ingameCmd
$LN60@ingameCmd:
; Line 762
	jmp	$LN62@ingameCmd
$LN61@ingameCmd:
; Line 764
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373107[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8783[ebp], eax
	mov	ecx, DWORD PTR tv8783[ebp]
	mov	DWORD PTR tv8245[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 300		; 0000012cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373108[ebp], esp
	push	OFFSET $SG-547
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8784[ebp], eax
	mov	edx, DWORD PTR tv8784[ebp]
	mov	DWORD PTR tv8248[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPlayerIndexByName@game@Battlefield@@AAEEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::getPlayerIndexByName
	movzx	ecx, al
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-549
	lea	ecx, DWORD PTR $T154933[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8785[ebp], eax
	mov	edx, DWORD PTR tv8785[ebp]
	mov	DWORD PTR tv8250[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373109[ebp], esp
	push	OFFSET $SG-548
	mov	ecx, DWORD PTR tv8250[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8253[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154933[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN47@ingameCmd
$LN64@ingameCmd:
; Line 766
	push	OFFSET $SG-550
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN58@ingameCmd
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?updateAdvMessages@SQLite@Database@@QAEXXZ ; Database::SQLite::updateAdvMessages
; Line 769
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373110[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8787[ebp], eax
	mov	eax, DWORD PTR tv8787[ebp]
	mov	DWORD PTR tv8255[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 304		; 00000130H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373111[ebp], esp
	push	OFFSET $SG-551
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8788[ebp], eax
	mov	ecx, DWORD PTR tv8788[ebp]
	mov	DWORD PTR tv8258[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373112[ebp], esp
	push	OFFSET $SG-552
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8261[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN47@ingameCmd
$LN58@ingameCmd:
; Line 771
	push	OFFSET $SG-553
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN56@ingameCmd
; Line 773
	mov	DWORD PTR _i$154952[ebp], 0
	jmp	SHORT $LN55@ingameCmd
$LN54@ingameCmd:
	mov	ecx, DWORD PTR _i$154952[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$154952[ebp], ecx
$LN55@ingameCmd:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	cmp	DWORD PTR _i$154952[ebp], eax
	jae	$LN53@ingameCmd
; Line 775
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$154952[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN52@ingameCmd
; Line 777
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373113[ebp], esp
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8789[ebp], eax
	mov	ecx, DWORD PTR tv8789[ebp]
	mov	DWORD PTR tv8263[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 306		; 00000132H
	mov	edx, DWORD PTR _i$154952[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23420]
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373114[ebp], esp
	push	ecx
	mov	ecx, edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8266[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?updateAdminPassword@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateAdminPassword
; Line 778
	jmp	SHORT $LN53@ingameCmd
$LN52@ingameCmd:
; Line 780
	jmp	$LN54@ingameCmd
$LN53@ingameCmd:
; Line 782
	jmp	$LN47@ingameCmd
$LN56@ingameCmd:
	push	OFFSET $SG-554
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN50@ingameCmd
; Line 784
	fld	QWORD PTR _diff$154094[ebp]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	$LN49@ingameCmd
; Line 785
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373115[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8790[ebp], eax
	mov	ecx, DWORD PTR tv8790[ebp]
	mov	DWORD PTR tv8268[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 307		; 00000133H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373116[ebp], esp
	push	OFFSET $SG-555
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8791[ebp], eax
	mov	edx, DWORD PTR tv8791[ebp]
	mov	DWORD PTR tv8271[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373117[ebp], esp
	push	OFFSET $SG-556
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8274[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 786
	jmp	$LN48@ingameCmd
$LN49@ingameCmd:
; Line 787
	fld	QWORD PTR _diff$154094[ebp]
	fmul	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR $T373121[ebp]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373118[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8792[ebp], eax
	mov	ecx, DWORD PTR tv8792[ebp]
	mov	DWORD PTR tv8276[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 309		; 00000135H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373119[ebp], esp
	push	OFFSET $SG-557
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8793[ebp], eax
	mov	edx, DWORD PTR tv8793[ebp]
	mov	DWORD PTR tv8279[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	lea	eax, DWORD PTR $T373121[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154970[ebp]
	push	ecx
	call	??$cast_to_string@N@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABN@Z ; dlib::cast_to_string<double>
	add	esp, 8
	mov	DWORD PTR tv8794[ebp], eax
	mov	edx, DWORD PTR tv8794[ebp]
	mov	DWORD PTR tv8281[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	mov	eax, DWORD PTR tv8281[ebp]
	push	eax
	push	OFFSET $SG-559
	lea	ecx, DWORD PTR $T154971[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8795[ebp], eax
	mov	edx, DWORD PTR tv8795[ebp]
	mov	DWORD PTR tv8283[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373120[ebp], esp
	push	OFFSET $SG-558
	mov	ecx, DWORD PTR tv8283[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8286[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	lea	ecx, DWORD PTR $T154971[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154970[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN48@ingameCmd:
; Line 789
	jmp	$LN47@ingameCmd
$LN50@ingameCmd:
; Line 791
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373122[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8797[ebp], eax
	mov	eax, DWORD PTR tv8797[ebp]
	mov	DWORD PTR tv8288[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 315		; 0000013bH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373123[ebp], esp
	push	OFFSET $SG-560
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8798[ebp], eax
	mov	ecx, DWORD PTR tv8798[ebp]
	mov	DWORD PTR tv8291[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373124[ebp], esp
	push	OFFSET $SG-561
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8294[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN47@ingameCmd:
; Line 793
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _date$154095[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 794
	jmp	$LN46@ingameCmd
$LN178@ingameCmd:
; Line 796
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373125[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8799[ebp], eax
	mov	eax, DWORD PTR tv8799[ebp]
	mov	DWORD PTR tv8296[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 317		; 0000013dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373126[ebp], esp
	push	OFFSET $SG-562
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8800[ebp], eax
	mov	ecx, DWORD PTR tv8800[ebp]
	mov	DWORD PTR tv8299[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373127[ebp], esp
	push	OFFSET $SG-563
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8302[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN46@ingameCmd:
; Line 799
	jmp	$LN1@ingameCmd
$LN179@ingameCmd:
; Line 801
	push	OFFSET $SG-564
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN44@ingameCmd
; Line 803
	push	1
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373128[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8305[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	call	?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ; Battlefield::Vote::addVoter
	jmp	$LN1@ingameCmd
$LN44@ingameCmd:
; Line 805
	push	OFFSET $SG-565
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN42@ingameCmd
; Line 807
	push	0
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373129[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8308[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	call	?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ; Battlefield::Vote::addVoter
	jmp	$LN1@ingameCmd
$LN42@ingameCmd:
; Line 809
	push	OFFSET $SG-566
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN40@ingameCmd
; Line 811
	mov	BYTE PTR _playerFound$155002[ebp], 0
; Line 812
	mov	BYTE PTR _i$155003[ebp], 0
	jmp	SHORT $LN39@ingameCmd
$LN38@ingameCmd:
	mov	dl, BYTE PTR _i$155003[ebp]
	add	dl, 1
	mov	BYTE PTR _i$155003[ebp], dl
$LN39@ingameCmd:
	movzx	eax, BYTE PTR _i$155003[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	eax, edx
	jge	SHORT $LN37@ingameCmd
; Line 814
	lea	eax, DWORD PTR _sArg$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _i$155003[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN36@ingameCmd
; Line 816
	mov	BYTE PTR _playerFound$155002[ebp], 1
; Line 817
	jmp	SHORT $LN37@ingameCmd
$LN36@ingameCmd:
; Line 819
	jmp	SHORT $LN38@ingameCmd
$LN37@ingameCmd:
; Line 821
	movzx	edx, BYTE PTR _playerFound$155002[ebp]
	test	edx, edx
	je	SHORT $LN35@ingameCmd
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN35@ingameCmd
; Line 822
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373130[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8310[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	call	?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::Vote::startVoteKick
$LN35@ingameCmd:
; Line 823
	jmp	$LN1@ingameCmd
$LN40@ingameCmd:
; Line 824
	push	OFFSET $SG-567
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN33@ingameCmd
; Line 826
	lea	ecx, DWORD PTR _sTemp$155013[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 319		; 0000013fH
; Line 827
	lea	edx, DWORD PTR _vAdminlist$155336[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?adminlist@SQLite@Database@@QAE?AV?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@XZ ; Database::SQLite::adminlist
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
; Line 828
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373131[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv6223[ebp], eax
	mov	eax, DWORD PTR tv6223[ebp]
	mov	DWORD PTR tv8314[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 65		; 00000041H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373132[ebp], esp
	push	OFFSET $SG-568
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv6219[ebp], eax
	mov	ecx, DWORD PTR tv6219[ebp]
	mov	DWORD PTR tv8317[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 66		; 00000042H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373133[ebp], esp
	push	OFFSET $SG-569
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8320[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 829
	mov	BYTE PTR _i$155343[ebp], 0
; Line 830
	lea	edx, DWORD PTR $T373134[ebp]
	push	edx
	lea	ecx, DWORD PTR _vAdminlist$155336[ebp]
	call	?begin@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _it$155430[ebp], eax
	jmp	SHORT $LN32@ingameCmd
$LN31@ingameCmd:
	lea	ecx, DWORD PTR _it$155430[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator++
$LN32@ingameCmd:
	lea	ecx, DWORD PTR $T373135[ebp]
	push	ecx
	lea	ecx, DWORD PTR _vAdminlist$155336[ebp]
	call	?end@?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@2@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::end
	push	eax
	lea	ecx, DWORD PTR _it$155430[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN30@ingameCmd
; Line 832
	push	OFFSET $SG-570
	lea	ecx, DWORD PTR _it$155430[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@@std@@QBEABUadmin@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::admin,std::allocator<Database::admin> > >::operator*
	add	eax, 32					; 00000020H
	push	eax
	lea	eax, DWORD PTR $T155496[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8802[ebp], eax
	mov	ecx, DWORD PTR tv8802[ebp]
	mov	DWORD PTR tv8322[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 67		; 00000043H
	mov	edx, DWORD PTR tv8322[ebp]
	push	edx
	lea	ecx, DWORD PTR _sTemp$155013[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	lea	ecx, DWORD PTR $T155496[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 833
	mov	al, BYTE PTR _i$155343[ebp]
	add	al, 1
	mov	BYTE PTR _i$155343[ebp], al
	movsx	ecx, BYTE PTR _i$155343[ebp]
	cmp	ecx, 4
	jle	$LN29@ingameCmd
; Line 835
	mov	BYTE PTR _i$155343[ebp], 0
; Line 836
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373136[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8803[ebp], eax
	mov	eax, DWORD PTR tv8803[ebp]
	mov	DWORD PTR tv8324[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 68		; 00000044H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373137[ebp], esp
	push	OFFSET $SG-571
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8804[ebp], eax
	mov	ecx, DWORD PTR tv8804[ebp]
	mov	DWORD PTR tv8327[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 69		; 00000045H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373138[ebp], esp
	lea	edx, DWORD PTR _sTemp$155013[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8330[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 64		; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 837
	lea	ecx, DWORD PTR _sTemp$155013[ebp]
	call	?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
$LN29@ingameCmd:
; Line 839
	jmp	$LN31@ingameCmd
$LN30@ingameCmd:
; Line 840
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	lea	ecx, DWORD PTR _vAdminlist$155336[ebp]
	call	??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _sTemp$155013[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN1@ingameCmd
$LN33@ingameCmd:
; Line 841
	push	OFFSET $SG-572
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN27@ingameCmd
; Line 843
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373139[ebp], esp
	push	OFFSET $SG-573
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8806[ebp], eax
	mov	edx, DWORD PTR tv8806[ebp]
	mov	DWORD PTR tv8332[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 326		; 00000146H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373140[ebp], esp
	push	OFFSET $SG-574
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8807[ebp], eax
	mov	eax, DWORD PTR tv8807[ebp]
	mov	DWORD PTR tv8335[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 71		; 00000047H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373141[ebp], esp
	push	OFFSET $SG-575
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8338[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN1@ingameCmd
$LN27@ingameCmd:
; Line 845
	push	OFFSET $SG-576
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN25@ingameCmd
; Line 847
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373142[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8808[ebp], eax
	mov	ecx, DWORD PTR tv8808[ebp]
	mov	DWORD PTR tv8340[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 328		; 00000148H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373143[ebp], esp
	push	OFFSET $SG-577
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8809[ebp], eax
	mov	edx, DWORD PTR tv8809[ebp]
	mov	DWORD PTR tv8343[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 73		; 00000049H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373144[ebp], esp
	push	OFFSET $SG-578
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8346[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN1@ingameCmd
$LN25@ingameCmd:
; Line 849
	push	OFFSET $SG-579
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN23@ingameCmd
; Line 851
	lea	ecx, DWORD PTR _str$155523[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 330		; 0000014aH
; Line 852
	mov	BYTE PTR _i$155524[ebp], 0
; Line 853
	lea	edx, DWORD PTR $T373145[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _it$155529[ebp], eax
	jmp	SHORT $LN22@ingameCmd
$LN21@ingameCmd:
	lea	ecx, DWORD PTR _it$155529[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN22@ingameCmd:
	lea	ecx, DWORD PTR $T373146[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$155529[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN20@ingameCmd
; Line 855
	lea	ecx, DWORD PTR _it$155529[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _weaponName$155535[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
; Line 856
	push	0
	lea	ecx, DWORD PTR _weaponName$155535[ebp]
	call	?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::at
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 85					; 00000055H
	jne	SHORT $LN19@ingameCmd
; Line 857
	push	OFFSET $SG-580
	push	2
	push	0
	lea	ecx, DWORD PTR _weaponName$155535[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	push	eax
	lea	ecx, DWORD PTR $T155537[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv6500[ebp], eax
	mov	edx, DWORD PTR tv6500[ebp]
	mov	DWORD PTR tv8350[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 76		; 0000004cH
	mov	eax, DWORD PTR tv8350[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$155523[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T155537[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 858
	jmp	SHORT $LN18@ingameCmd
$LN19@ingameCmd:
; Line 859
	push	OFFSET $SG-581
	lea	ecx, DWORD PTR _weaponName$155535[ebp]
	push	ecx
	lea	edx, DWORD PTR $T155540[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv6474[ebp], eax
	mov	eax, DWORD PTR tv6474[ebp]
	mov	DWORD PTR tv8352[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 77		; 0000004dH
	mov	ecx, DWORD PTR tv8352[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$155523[ebp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	lea	ecx, DWORD PTR $T155540[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN18@ingameCmd:
; Line 861
	mov	dl, BYTE PTR _i$155524[ebp]
	add	dl, 1
	mov	BYTE PTR _i$155524[ebp], dl
	movsx	eax, BYTE PTR _i$155524[ebp]
	cmp	eax, 4
	jle	$LN17@ingameCmd
; Line 863
	mov	BYTE PTR _i$155524[ebp], 0
; Line 864
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373147[ebp], esp
	push	OFFSET $SG-582
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8810[ebp], eax
	mov	ecx, DWORD PTR tv8810[ebp]
	mov	DWORD PTR tv8354[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 78		; 0000004eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373148[ebp], esp
	push	OFFSET $SG-583
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8811[ebp], eax
	mov	edx, DWORD PTR tv8811[ebp]
	mov	DWORD PTR tv8357[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 79		; 0000004fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373149[ebp], esp
	lea	eax, DWORD PTR _str$155523[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8360[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 75		; 0000004bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 865
	lea	ecx, DWORD PTR _str$155523[ebp]
	call	?clear@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::clear
$LN17@ingameCmd:
; Line 867
	mov	BYTE PTR __$EHRec$[ebp+8], 74		; 0000004aH
	lea	ecx, DWORD PTR _weaponName$155535[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN21@ingameCmd
$LN20@ingameCmd:
; Line 868
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _str$155523[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN1@ingameCmd
$LN23@ingameCmd:
; Line 869
	push	OFFSET $SG-584
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN14@ingameCmd
	push	OFFSET $SG-585
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@ingameCmd
	push	OFFSET $SG-586
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN15@ingameCmd
$LN14@ingameCmd:
; Line 871
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@ingameCmd
; Line 873
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373150[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8813[ebp], eax
	mov	eax, DWORD PTR tv8813[ebp]
	mov	DWORD PTR tv8362[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 336		; 00000150H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373151[ebp], esp
	push	OFFSET $SG-587
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8814[ebp], eax
	mov	ecx, DWORD PTR tv8814[ebp]
	mov	DWORD PTR tv8365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 81		; 00000051H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373152[ebp], esp
	push	OFFSET $SG-588
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8368[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 875
	jmp	$LN12@ingameCmd
$LN13@ingameCmd:
; Line 877
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373153[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8815[ebp], eax
	mov	eax, DWORD PTR tv8815[ebp]
	mov	DWORD PTR tv8370[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 338		; 00000152H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373154[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8373[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?sendRequest@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::sendRequest
; Line 878
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373155[ebp], esp
	lea	edx, DWORD PTR _sPlayerName$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8816[ebp], eax
	mov	eax, DWORD PTR tv8816[ebp]
	mov	DWORD PTR tv8375[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 339		; 00000153H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373156[ebp], esp
	push	OFFSET $SG-589
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8817[ebp], eax
	mov	ecx, DWORD PTR tv8817[ebp]
	mov	DWORD PTR tv8378[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 84		; 00000054H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373157[ebp], esp
	push	OFFSET $SG-590
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8381[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 879
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+23388]
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR $T155572[ebp]
	push	ecx
	call	??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ; dlib::cast_to_string<unsigned short>
	add	esp, 8
	mov	DWORD PTR tv8818[ebp], eax
	mov	edx, DWORD PTR tv8818[ebp]
	mov	DWORD PTR tv8383[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 341		; 00000155H
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	push	OFFSET $SG-594
	lea	ecx, DWORD PTR $T155568[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8819[ebp], eax
	mov	edx, DWORD PTR tv8819[ebp]
	mov	DWORD PTR tv8385[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	push	OFFSET $SG-593
	mov	eax, DWORD PTR tv8385[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155569[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8820[ebp], eax
	mov	edx, DWORD PTR tv8820[ebp]
	mov	DWORD PTR tv8387[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	push	ecx
	mov	edx, DWORD PTR tv8387[ebp]
	push	edx
	lea	eax, DWORD PTR $T155570[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8821[ebp], eax
	mov	ecx, DWORD PTR tv8821[ebp]
	mov	DWORD PTR tv8389[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	push	OFFSET $SG-592
	mov	edx, DWORD PTR tv8389[ebp]
	push	edx
	lea	eax, DWORD PTR $T155571[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8822[ebp], eax
	mov	ecx, DWORD PTR tv8822[ebp]
	mov	DWORD PTR tv8391[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	mov	edx, DWORD PTR tv8383[ebp]
	push	edx
	mov	eax, DWORD PTR tv8391[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155573[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8823[ebp], eax
	mov	edx, DWORD PTR tv8823[ebp]
	mov	DWORD PTR tv8393[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	push	OFFSET $SG-591
	mov	eax, DWORD PTR tv8393[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155574[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8824[ebp], eax
	mov	edx, DWORD PTR tv8824[ebp]
	mov	DWORD PTR tv8395[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 91		; 0000005bH
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373158[ebp], esp
	lea	ecx, DWORD PTR _sArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv8395[ebp]
	push	edx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8397[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nma_NotificateAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::nma_NotificateAll
	mov	BYTE PTR __$EHRec$[ebp+8], 90		; 0000005aH
	lea	ecx, DWORD PTR $T155574[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 89		; 00000059H
	lea	ecx, DWORD PTR $T155573[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 88		; 00000058H
	lea	ecx, DWORD PTR $T155571[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 87		; 00000057H
	lea	ecx, DWORD PTR $T155570[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 86		; 00000056H
	lea	ecx, DWORD PTR $T155569[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 85		; 00000055H
	lea	ecx, DWORD PTR $T155568[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T155572[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 880
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	add	ecx, 28					; 0000001cH
	push	ecx
	lea	edx, DWORD PTR $T155585[ebp]
	push	edx
	call	??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ; dlib::cast_to_string<unsigned short>
	add	esp, 8
	mov	DWORD PTR tv8825[ebp], eax
	mov	eax, DWORD PTR tv8825[ebp]
	mov	DWORD PTR tv8399[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 348		; 0000015cH
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	push	ecx
	push	OFFSET $SG-598
	lea	edx, DWORD PTR $T155581[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8826[ebp], eax
	mov	eax, DWORD PTR tv8826[ebp]
	mov	DWORD PTR tv8401[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	push	OFFSET $SG-597
	mov	ecx, DWORD PTR tv8401[ebp]
	push	ecx
	lea	edx, DWORD PTR $T155582[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8827[ebp], eax
	mov	eax, DWORD PTR tv8827[ebp]
	mov	DWORD PTR tv8403[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+23388]
	push	edx
	mov	eax, DWORD PTR tv8403[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155583[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8828[ebp], eax
	mov	edx, DWORD PTR tv8828[ebp]
	mov	DWORD PTR tv8405[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	push	OFFSET $SG-596
	mov	eax, DWORD PTR tv8405[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155584[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8829[ebp], eax
	mov	edx, DWORD PTR tv8829[ebp]
	mov	DWORD PTR tv8407[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	mov	eax, DWORD PTR tv8399[ebp]
	push	eax
	mov	ecx, DWORD PTR tv8407[ebp]
	push	ecx
	lea	edx, DWORD PTR $T155586[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8830[ebp], eax
	mov	eax, DWORD PTR tv8830[ebp]
	mov	DWORD PTR tv8409[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	push	OFFSET $SG-595
	mov	ecx, DWORD PTR tv8409[ebp]
	push	ecx
	lea	edx, DWORD PTR $T155587[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8831[ebp], eax
	mov	eax, DWORD PTR tv8831[ebp]
	mov	DWORD PTR tv8411[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 98		; 00000062H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373159[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	mov	eax, DWORD PTR tv8411[ebp]
	push	eax
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8413[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?mail_SendToAll@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::mail_SendToAll
	mov	BYTE PTR __$EHRec$[ebp+8], 97		; 00000061H
	lea	ecx, DWORD PTR $T155587[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 96		; 00000060H
	lea	ecx, DWORD PTR $T155586[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 95		; 0000005fH
	lea	ecx, DWORD PTR $T155584[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 94		; 0000005eH
	lea	ecx, DWORD PTR $T155583[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 93		; 0000005dH
	lea	ecx, DWORD PTR $T155582[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 92		; 0000005cH
	lea	ecx, DWORD PTR $T155581[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T155585[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN12@ingameCmd:
; Line 881
	jmp	$LN1@ingameCmd
$LN15@ingameCmd:
; Line 883
	push	OFFSET $SG-599
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN10@ingameCmd
; Line 885
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373160[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8832[ebp], eax
	mov	ecx, DWORD PTR tv8832[ebp]
	mov	DWORD PTR tv8415[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 355		; 00000163H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373161[ebp], esp
	push	OFFSET $SG-600
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8833[ebp], eax
	mov	edx, DWORD PTR tv8833[ebp]
	mov	DWORD PTR tv8418[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 100		; 00000064H
	movzx	eax, BYTE PTR _ucUserID$[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23420]
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373162[ebp], esp
	push	edx
	push	OFFSET $SG-601
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8421[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	jmp	$LN1@ingameCmd
$LN10@ingameCmd:
; Line 887
	push	OFFSET $SG-602
	lea	ecx, DWORD PTR _sCmd$[ebp]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN8@ingameCmd
; Line 889
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373163[ebp], esp
	lea	eax, DWORD PTR _sPlayerName$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8834[ebp], eax
	mov	ecx, DWORD PTR tv8834[ebp]
	mov	DWORD PTR tv8423[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 357		; 00000165H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373164[ebp], esp
	push	OFFSET $SG-603
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8835[ebp], eax
	mov	edx, DWORD PTR tv8835[ebp]
	mov	DWORD PTR tv8426[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 102		; 00000066H
	lea	eax, DWORD PTR $T155606[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?chatResponseListAsString@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Database::SQLite::chatResponseListAsString
	mov	DWORD PTR tv8836[ebp], eax
	mov	edx, DWORD PTR tv8836[ebp]
	mov	DWORD PTR tv8428[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 103		; 00000067H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373165[ebp], esp
	mov	ecx, DWORD PTR tv8428[ebp]
	push	ecx
	push	OFFSET $SG-604
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD$$QAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv8431[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 104		; 00000068H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T155606[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN1@ingameCmd
$LN8@ingameCmd:
; Line 891
	push	OFFSET $SG-605
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN6@ingameCmd
; Line 893
	push	0
	push	32					; 00000020H
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _pos$155616[ebp], eax
; Line 895
	cmp	DWORD PTR _pos$155616[ebp], -1
	je	$LN5@ingameCmd
; Line 897
	mov	ecx, DWORD PTR _pos$155616[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _language$155618[ebp]
	push	edx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	DWORD PTR __$EHRec$[ebp+8], 361		; 00000169H
; Line 898
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373166[ebp], esp
	push	OFFSET $SG-606
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv7005[ebp], eax
	mov	eax, DWORD PTR tv7005[ebp]
	mov	DWORD PTR tv8434[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 106		; 0000006aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373167[ebp], esp
	push	OFFSET $SG-607
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8838[ebp], eax
	mov	ecx, DWORD PTR tv8838[ebp]
	mov	DWORD PTR tv8437[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T373168[ebp], esp
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373169[ebp], esp
	lea	edx, DWORD PTR _language$155618[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8839[ebp], eax
	mov	eax, DWORD PTR tv8839[ebp]
	mov	DWORD PTR tv8440[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 108		; 0000006cH
	mov	ecx, DWORD PTR _pos$155616[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373170[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8444[ebp], eax
	push	esi
	mov	BYTE PTR __$EHRec$[ebp+8], 107		; 0000006bH
	call	?translate@translator@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@0@Z ; translator::translate
	add	esp, 60					; 0000003cH
	mov	DWORD PTR tv8441[ebp], eax
	mov	edx, DWORD PTR tv8441[ebp]
	mov	DWORD PTR tv8446[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 105		; 00000069H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 899
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _language$155618[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@ingameCmd:
; Line 912
	jmp	$LN1@ingameCmd
$LN6@ingameCmd:
; Line 913
	push	OFFSET $SG-608
	lea	eax, DWORD PTR _sCmd$[ebp]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ingameCmd
; Line 915
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	?size@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QBEIXZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::size
	test	eax, eax
	je	$LN2@ingameCmd
; Line 916
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373171[ebp], esp
	push	OFFSET $SG-609
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8842[ebp], eax
	mov	edx, DWORD PTR tv8842[ebp]
	mov	DWORD PTR tv8448[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 365		; 0000016dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373172[ebp], esp
	push	OFFSET $SG-610
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8843[ebp], eax
	mov	eax, DWORD PTR tv8843[ebp]
	mov	DWORD PTR tv8451[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T373173[ebp], esp
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373174[ebp], esp
	lea	edx, DWORD PTR _sArg$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8844[ebp], eax
	mov	eax, DWORD PTR tv8844[ebp]
	mov	DWORD PTR tv8454[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 111		; 0000006fH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	?back@?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAEAAUstruct_chat@Battlefield@@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::back
	add	eax, 60					; 0000003cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373175[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8458[ebp], eax
	push	esi
	mov	BYTE PTR __$EHRec$[ebp+8], 110		; 0000006eH
	call	?translate@translator@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V23@0@Z ; translator::translate
	add	esp, 60					; 0000003cH
	mov	DWORD PTR tv8455[ebp], eax
	mov	ecx, DWORD PTR tv8455[ebp]
	mov	DWORD PTR tv8460[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN2@ingameCmd:
; Line 918
	jmp	$LN1@ingameCmd
$LN3@ingameCmd:
; Line 920
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373176[ebp], esp
	push	OFFSET $SG-611
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8846[ebp], eax
	mov	edx, DWORD PTR tv8846[ebp]
	mov	DWORD PTR tv8462[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 368		; 00000170H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373177[ebp], esp
	push	OFFSET $SG-612
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8847[ebp], eax
	mov	eax, DWORD PTR tv8847[ebp]
	mov	DWORD PTR tv8465[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 113		; 00000071H
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T373178[ebp], esp
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373179[ebp], esp
	lea	edx, DWORD PTR _sCmd$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv8468[ebp], eax
	push	esi
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?getChatResponse@SQLite@Database@@QAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V34@@Z ; Database::SQLite::getChatResponse
	mov	DWORD PTR tv8469[ebp], eax
	mov	ecx, DWORD PTR tv8469[ebp]
	mov	DWORD PTR tv8471[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN1@ingameCmd:
; Line 926
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sCmd$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _sArg$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN184@ingameCmd:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	84					; 00000054H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$0:
	lea	ecx, DWORD PTR _sArg$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$1:
	lea	ecx, DWORD PTR _sCmd$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$2:
	lea	ecx, DWORD PTR _sPlayerName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$3:
	lea	ecx, DWORD PTR $T154080[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$4:
	lea	ecx, DWORD PTR $T154081[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$5:
	lea	ecx, DWORD PTR $T154082[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$7:
	lea	ecx, DWORD PTR _date$154095[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$8:
	lea	ecx, DWORD PTR _time$154102[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$9:
	lea	ecx, DWORD PTR $T154113[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$11:
	mov	ecx, DWORD PTR $T372813[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$12:
	mov	ecx, DWORD PTR $T372814[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$13:
	lea	ecx, DWORD PTR $T154124[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$14:
	lea	ecx, DWORD PTR $T154125[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$16:
	mov	ecx, DWORD PTR $T372816[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$17:
	mov	ecx, DWORD PTR $T372817[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$18:
	lea	ecx, DWORD PTR $T154136[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$19:
	lea	ecx, DWORD PTR $T154137[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$22:
	mov	ecx, DWORD PTR $T372821[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$23:
	mov	ecx, DWORD PTR $T372822[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$25:
	mov	ecx, DWORD PTR $T372824[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$27:
	mov	ecx, DWORD PTR $T372826[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$29:
	mov	ecx, DWORD PTR $T372828[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$30:
	mov	ecx, DWORD PTR $T372829[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$33:
	mov	ecx, DWORD PTR $T372832[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$34:
	mov	ecx, DWORD PTR $T372833[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$36:
	mov	ecx, DWORD PTR $T372835[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$37:
	mov	ecx, DWORD PTR $T372836[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$38:
	lea	ecx, DWORD PTR $T154195[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$39:
	lea	ecx, DWORD PTR $T154182[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$40:
	lea	ecx, DWORD PTR $T154183[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$41:
	lea	ecx, DWORD PTR $T154196[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$43:
	lea	ecx, DWORD PTR _victim$154210[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$44:
	lea	ecx, DWORD PTR _reason$154212[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$45:
	mov	ecx, DWORD PTR $T372838[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$46:
	mov	ecx, DWORD PTR $T372839[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$48:
	lea	ecx, DWORD PTR $T154224[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$49:
	lea	ecx, DWORD PTR $T154225[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$50:
	mov	ecx, DWORD PTR $T372841[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$52:
	mov	ecx, DWORD PTR $T372843[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$54:
	mov	ecx, DWORD PTR $T372845[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$55:
	mov	ecx, DWORD PTR $T372846[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$57:
	mov	ecx, DWORD PTR $T372848[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$58:
	mov	ecx, DWORD PTR $T372849[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$59:
	lea	ecx, DWORD PTR $T154242[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$60:
	lea	ecx, DWORD PTR $T154240[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$61:
	lea	ecx, DWORD PTR $T154241[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$62:
	lea	ecx, DWORD PTR $T154243[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$64:
	mov	ecx, DWORD PTR $T372851[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$65:
	mov	ecx, DWORD PTR $T372852[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$67:
	lea	ecx, DWORD PTR _victim$154263[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$68:
	lea	ecx, DWORD PTR _victim$154269[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$69:
	lea	ecx, DWORD PTR _reason$154271[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$70:
	mov	ecx, DWORD PTR $T372854[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$72:
	mov	ecx, DWORD PTR $T372856[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$74:
	mov	ecx, DWORD PTR $T372858[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$75:
	mov	ecx, DWORD PTR $T372859[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$77:
	mov	ecx, DWORD PTR $T372861[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$78:
	mov	ecx, DWORD PTR $T372862[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$79:
	lea	ecx, DWORD PTR $T154292[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$80:
	lea	ecx, DWORD PTR $T154290[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$81:
	lea	ecx, DWORD PTR $T154291[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$82:
	lea	ecx, DWORD PTR $T154293[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$84:
	mov	ecx, DWORD PTR $T372864[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$85:
	mov	ecx, DWORD PTR $T372865[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$86:
	lea	ecx, DWORD PTR $T154305[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$87:
	lea	ecx, DWORD PTR $T154303[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$88:
	lea	ecx, DWORD PTR $T154304[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$89:
	lea	ecx, DWORD PTR $T154306[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$91:
	mov	ecx, DWORD PTR $T372867[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$92:
	mov	ecx, DWORD PTR $T372868[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$94:
	mov	ecx, DWORD PTR $T372870[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$96:
	mov	ecx, DWORD PTR $T372872[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$97:
	mov	ecx, DWORD PTR $T372873[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$99:
	lea	ecx, DWORD PTR _victim$154336[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$100:
	lea	ecx, DWORD PTR _msg$154339[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$101:
	lea	ecx, DWORD PTR $T154341[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$102:
	lea	ecx, DWORD PTR $T154342[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$103:
	mov	ecx, DWORD PTR $T372875[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$105:
	mov	ecx, DWORD PTR $T372877[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$106:
	mov	ecx, DWORD PTR $T372878[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$107:
	lea	ecx, DWORD PTR $T154348[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$109:
	mov	ecx, DWORD PTR $T372880[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$111:
	mov	ecx, DWORD PTR $T372882[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$112:
	mov	ecx, DWORD PTR $T372883[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$114:
	lea	ecx, DWORD PTR _victim$154370[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$115:
	lea	ecx, DWORD PTR _msg$154373[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$116:
	lea	ecx, DWORD PTR $T154375[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$117:
	lea	ecx, DWORD PTR $T154376[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$118:
	mov	ecx, DWORD PTR $T372885[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$120:
	mov	ecx, DWORD PTR $T372887[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$121:
	mov	ecx, DWORD PTR $T372888[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$122:
	lea	ecx, DWORD PTR $T154382[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$124:
	mov	ecx, DWORD PTR $T372890[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$127:
	mov	ecx, DWORD PTR $T372893[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$128:
	mov	ecx, DWORD PTR $T372894[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$129:
	lea	ecx, DWORD PTR $T154405[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$130:
	lea	ecx, DWORD PTR $T154403[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$131:
	lea	ecx, DWORD PTR $T154404[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$132:
	lea	ecx, DWORD PTR $T154406[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$134:
	mov	ecx, DWORD PTR $T372896[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$137:
	mov	ecx, DWORD PTR $T372899[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$138:
	mov	ecx, DWORD PTR $T372900[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$139:
	lea	ecx, DWORD PTR $T154431[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$140:
	lea	ecx, DWORD PTR $T154429[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$141:
	lea	ecx, DWORD PTR $T154430[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$142:
	lea	ecx, DWORD PTR $T154432[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$144:
	lea	ecx, DWORD PTR _victim$154446[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$145:
	lea	ecx, DWORD PTR _reason$154448[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$146:
	mov	ecx, DWORD PTR $T372902[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$147:
	mov	ecx, DWORD PTR $T372903[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$149:
	lea	ecx, DWORD PTR $T154460[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$150:
	lea	ecx, DWORD PTR $T154461[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$151:
	mov	ecx, DWORD PTR $T372905[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$153:
	mov	ecx, DWORD PTR $T372907[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$154:
	mov	ecx, DWORD PTR $T372908[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$155:
	mov	ecx, DWORD PTR $T372909[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$157:
	mov	ecx, DWORD PTR $T372911[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$158:
	mov	ecx, DWORD PTR $T372912[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$160:
	mov	ecx, DWORD PTR $T372914[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$161:
	mov	ecx, DWORD PTR $T372915[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$162:
	lea	ecx, DWORD PTR $T154480[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$163:
	lea	ecx, DWORD PTR $T154478[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$164:
	lea	ecx, DWORD PTR $T154479[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$165:
	lea	ecx, DWORD PTR $T154481[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$167:
	mov	ecx, DWORD PTR $T372917[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$168:
	mov	ecx, DWORD PTR $T372918[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$170:
	mov	ecx, DWORD PTR $T372920[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$172:
	mov	ecx, DWORD PTR $T372922[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$173:
	mov	ecx, DWORD PTR $T372923[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$175:
	mov	ecx, DWORD PTR $T372925[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$176:
	mov	ecx, DWORD PTR $T372926[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$178:
	mov	ecx, DWORD PTR $T372928[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$179:
	mov	ecx, DWORD PTR $T372929[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$181:
	mov	ecx, DWORD PTR $T372931[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$182:
	mov	ecx, DWORD PTR $T372932[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$184:
	mov	ecx, DWORD PTR $T372934[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$185:
	mov	ecx, DWORD PTR $T372935[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$187:
	mov	ecx, DWORD PTR $T372937[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$188:
	mov	ecx, DWORD PTR $T372938[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$190:
	mov	ecx, DWORD PTR $T372940[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$191:
	mov	ecx, DWORD PTR $T372941[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$193:
	mov	ecx, DWORD PTR $T372943[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$194:
	mov	ecx, DWORD PTR $T372944[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$196:
	mov	ecx, DWORD PTR $T372946[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$197:
	mov	ecx, DWORD PTR $T372947[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$198:
	lea	ecx, DWORD PTR $T154558[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$199:
	lea	ecx, DWORD PTR $T154556[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$200:
	lea	ecx, DWORD PTR $T154557[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$201:
	lea	ecx, DWORD PTR $T154559[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$203:
	mov	ecx, DWORD PTR $T372949[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$204:
	mov	ecx, DWORD PTR $T372950[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$206:
	mov	ecx, DWORD PTR $T372952[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$208:
	mov	ecx, DWORD PTR $T372954[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$209:
	mov	ecx, DWORD PTR $T372955[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$211:
	mov	ecx, DWORD PTR $T372957[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$212:
	mov	ecx, DWORD PTR $T372958[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$214:
	mov	ecx, DWORD PTR $T372960[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$215:
	mov	ecx, DWORD PTR $T372961[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$217:
	mov	ecx, DWORD PTR $T372963[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$218:
	mov	ecx, DWORD PTR $T372964[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$220:
	mov	ecx, DWORD PTR $T372966[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$221:
	mov	ecx, DWORD PTR $T372967[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$223:
	mov	ecx, DWORD PTR $T372969[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$224:
	mov	ecx, DWORD PTR $T372970[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$226:
	mov	ecx, DWORD PTR $T372972[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$227:
	mov	ecx, DWORD PTR $T372973[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$229:
	mov	ecx, DWORD PTR $T372975[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$230:
	mov	ecx, DWORD PTR $T372976[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$232:
	mov	ecx, DWORD PTR $T372978[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$233:
	mov	ecx, DWORD PTR $T372979[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$235:
	mov	ecx, DWORD PTR $T372981[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$236:
	mov	ecx, DWORD PTR $T372982[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$238:
	mov	ecx, DWORD PTR $T372984[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$239:
	mov	ecx, DWORD PTR $T372985[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$241:
	mov	ecx, DWORD PTR $T372987[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$242:
	mov	ecx, DWORD PTR $T372988[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$244:
	mov	ecx, DWORD PTR $T372990[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$245:
	mov	ecx, DWORD PTR $T372991[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$247:
	mov	ecx, DWORD PTR $T372993[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$248:
	mov	ecx, DWORD PTR $T372994[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$250:
	mov	ecx, DWORD PTR $T372996[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$251:
	mov	ecx, DWORD PTR $T372997[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$253:
	mov	ecx, DWORD PTR $T372999[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$254:
	mov	ecx, DWORD PTR $T373000[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$256:
	mov	ecx, DWORD PTR $T373002[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$257:
	mov	ecx, DWORD PTR $T373003[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$259:
	mov	ecx, DWORD PTR $T373005[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$260:
	mov	ecx, DWORD PTR $T373006[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$262:
	mov	ecx, DWORD PTR $T373008[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$263:
	mov	ecx, DWORD PTR $T373009[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$265:
	mov	ecx, DWORD PTR $T373011[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$266:
	mov	ecx, DWORD PTR $T373012[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$268:
	mov	ecx, DWORD PTR $T373014[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$269:
	mov	ecx, DWORD PTR $T373015[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$271:
	mov	ecx, DWORD PTR $T373017[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$272:
	mov	ecx, DWORD PTR $T373018[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$274:
	mov	ecx, DWORD PTR $T373020[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$275:
	mov	ecx, DWORD PTR $T373021[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$277:
	mov	ecx, DWORD PTR $T373023[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$278:
	mov	ecx, DWORD PTR $T373024[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$280:
	mov	ecx, DWORD PTR $T373026[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$281:
	mov	ecx, DWORD PTR $T373027[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$282:
	lea	ecx, DWORD PTR $T154736[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$283:
	lea	ecx, DWORD PTR $T154734[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$284:
	lea	ecx, DWORD PTR $T154735[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$285:
	lea	ecx, DWORD PTR $T154737[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$287:
	mov	ecx, DWORD PTR $T373029[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$288:
	mov	ecx, DWORD PTR $T373030[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$290:
	mov	ecx, DWORD PTR $T373032[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$291:
	mov	ecx, DWORD PTR $T373033[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$293:
	mov	ecx, DWORD PTR $T373035[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$294:
	mov	ecx, DWORD PTR $T373036[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$296:
	mov	ecx, DWORD PTR $T373038[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$297:
	mov	ecx, DWORD PTR $T373039[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$299:
	mov	ecx, DWORD PTR $T373041[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$300:
	mov	ecx, DWORD PTR $T373042[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$302:
	mov	ecx, DWORD PTR $T373044[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$303:
	mov	ecx, DWORD PTR $T373045[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$305:
	mov	ecx, DWORD PTR $T373047[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$306:
	mov	ecx, DWORD PTR $T373048[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$308:
	mov	ecx, DWORD PTR $T373050[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$309:
	mov	ecx, DWORD PTR $T373051[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$311:
	mov	ecx, DWORD PTR $T373053[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$312:
	mov	ecx, DWORD PTR $T373054[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$314:
	mov	ecx, DWORD PTR $T373056[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$315:
	mov	ecx, DWORD PTR $T373057[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$317:
	mov	ecx, DWORD PTR $T373059[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$318:
	mov	ecx, DWORD PTR $T373060[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$320:
	mov	ecx, DWORD PTR $T373062[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$321:
	mov	ecx, DWORD PTR $T373063[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$323:
	mov	ecx, DWORD PTR $T373065[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$324:
	mov	ecx, DWORD PTR $T373066[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$326:
	mov	ecx, DWORD PTR $T373068[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$327:
	mov	ecx, DWORD PTR $T373069[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$329:
	mov	ecx, DWORD PTR $T373071[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$330:
	mov	ecx, DWORD PTR $T373072[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$332:
	mov	ecx, DWORD PTR $T373074[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$333:
	mov	ecx, DWORD PTR $T373075[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$335:
	mov	ecx, DWORD PTR $T373077[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$336:
	mov	ecx, DWORD PTR $T373078[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$338:
	mov	ecx, DWORD PTR $T373080[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$339:
	mov	ecx, DWORD PTR $T373081[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$341:
	mov	ecx, DWORD PTR $T373083[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$342:
	mov	ecx, DWORD PTR $T373084[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$344:
	mov	ecx, DWORD PTR $T373086[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$345:
	mov	ecx, DWORD PTR $T373087[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$347:
	mov	ecx, DWORD PTR $T373089[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$348:
	mov	ecx, DWORD PTR $T373090[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$350:
	mov	ecx, DWORD PTR $T373092[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$351:
	mov	ecx, DWORD PTR $T373093[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$353:
	mov	ecx, DWORD PTR $T373095[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$354:
	mov	ecx, DWORD PTR $T373096[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$356:
	mov	ecx, DWORD PTR $T373098[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$357:
	mov	ecx, DWORD PTR $T373099[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$359:
	mov	ecx, DWORD PTR $T373101[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$360:
	mov	ecx, DWORD PTR $T373102[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$362:
	mov	ecx, DWORD PTR $T373104[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$363:
	mov	ecx, DWORD PTR $T373105[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$365:
	mov	ecx, DWORD PTR $T373107[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$366:
	mov	ecx, DWORD PTR $T373108[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$367:
	lea	ecx, DWORD PTR $T154933[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$369:
	mov	ecx, DWORD PTR $T373110[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$370:
	mov	ecx, DWORD PTR $T373111[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$372:
	mov	ecx, DWORD PTR $T373113[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$374:
	mov	ecx, DWORD PTR $T373115[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$375:
	mov	ecx, DWORD PTR $T373116[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$377:
	mov	ecx, DWORD PTR $T373118[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$378:
	mov	ecx, DWORD PTR $T373119[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$379:
	lea	ecx, DWORD PTR $T154970[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$380:
	lea	ecx, DWORD PTR $T154971[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$382:
	mov	ecx, DWORD PTR $T373122[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$383:
	mov	ecx, DWORD PTR $T373123[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$385:
	mov	ecx, DWORD PTR $T373125[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$386:
	mov	ecx, DWORD PTR $T373126[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$391:
	lea	ecx, DWORD PTR _sTemp$155013[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$392:
	lea	ecx, DWORD PTR _vAdminlist$155336[ebp]
	jmp	??1?$vector@Uadmin@Database@@V?$allocator@Uadmin@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::admin,std::allocator<Database::admin> >::~vector<Database::admin,std::allocator<Database::admin> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$393:
	mov	ecx, DWORD PTR $T373131[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$394:
	mov	ecx, DWORD PTR $T373132[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$396:
	lea	ecx, DWORD PTR $T155496[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$397:
	mov	ecx, DWORD PTR $T373136[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$398:
	mov	ecx, DWORD PTR $T373137[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$400:
	mov	ecx, DWORD PTR $T373139[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$401:
	mov	ecx, DWORD PTR $T373140[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$403:
	mov	ecx, DWORD PTR $T373142[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$404:
	mov	ecx, DWORD PTR $T373143[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$406:
	lea	ecx, DWORD PTR _str$155523[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$407:
	lea	ecx, DWORD PTR _weaponName$155535[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$408:
	lea	ecx, DWORD PTR $T155537[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$409:
	lea	ecx, DWORD PTR $T155540[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$410:
	mov	ecx, DWORD PTR $T373147[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$411:
	mov	ecx, DWORD PTR $T373148[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$413:
	mov	ecx, DWORD PTR $T373150[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$414:
	mov	ecx, DWORD PTR $T373151[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$416:
	mov	ecx, DWORD PTR $T373153[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$418:
	mov	ecx, DWORD PTR $T373155[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$419:
	mov	ecx, DWORD PTR $T373156[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$421:
	lea	ecx, DWORD PTR $T155572[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$422:
	lea	ecx, DWORD PTR $T155568[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$423:
	lea	ecx, DWORD PTR $T155569[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$424:
	lea	ecx, DWORD PTR $T155570[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$425:
	lea	ecx, DWORD PTR $T155571[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$426:
	lea	ecx, DWORD PTR $T155573[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$427:
	lea	ecx, DWORD PTR $T155574[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$429:
	lea	ecx, DWORD PTR $T155585[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$430:
	lea	ecx, DWORD PTR $T155581[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$431:
	lea	ecx, DWORD PTR $T155582[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$432:
	lea	ecx, DWORD PTR $T155583[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$433:
	lea	ecx, DWORD PTR $T155584[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$434:
	lea	ecx, DWORD PTR $T155586[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$435:
	lea	ecx, DWORD PTR $T155587[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$437:
	mov	ecx, DWORD PTR $T373160[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$438:
	mov	ecx, DWORD PTR $T373161[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$440:
	mov	ecx, DWORD PTR $T373163[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$441:
	mov	ecx, DWORD PTR $T373164[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$442:
	lea	ecx, DWORD PTR $T155606[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$444:
	lea	ecx, DWORD PTR _language$155618[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$445:
	mov	ecx, DWORD PTR $T373166[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$446:
	mov	ecx, DWORD PTR $T373167[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$447:
	mov	ecx, DWORD PTR $T373169[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$450:
	mov	ecx, DWORD PTR $T373171[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$451:
	mov	ecx, DWORD PTR $T373172[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$452:
	mov	ecx, DWORD PTR $T373174[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$455:
	mov	ecx, DWORD PTR $T373176[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z$456:
	mov	ecx, DWORD PTR $T373177[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-7216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ENDP ; Battlefield::game::ingameCmd
PUBLIC	__real@3fd3333333333333
PUBLIC	__$ArrayPad$
PUBLIC	?refresh@game@Battlefield@@QAEXXZ		; Battlefield::game::refresh
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?refresh@game@Battlefield@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$4
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$6
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$8
	DD	05H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$9
	DD	05H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$10
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$12
	DD	08H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$13
	DD	09H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$14
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$16
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$17
	DD	0cH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$18
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$20
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$21
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$23
	DD	010H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$24
	DD	011H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$25
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$25
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$27
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$29
	DD	015H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$30
	DD	016H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$31
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$32
	DD	018H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$33
	DD	019H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$34
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$34
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$36
	DD	01cH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$37
	DD	01dH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$38
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$38
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$40
	DD	020H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$41
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$43
	DD	022H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$44
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$47
	DD	024H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$48
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$50
	DD	026H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$51
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$54
	DD	028H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$55
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$57
	DD	02aH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$58
	DD	02bH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$59
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$59
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$61
	DD	02eH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$62
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$64
	DD	030H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$65
	DD	031H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$66
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$66
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$69
	DD	034H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$70
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$72
	DD	036H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$73
	DD	037H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$74
	DD	017H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$74
	DD	00H
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$76
	DD	03aH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$77
	DD	03aH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$78
	DD	03cH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$79
	DD	03cH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$80
	DD	03cH
	DD	FLAT:__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$81
__ehfuncinfo$?refresh@game@Battlefield@@QAEXXZ DD 019930522H
	DD	040H
	DD	FLAT:__unwindtable$?refresh@game@Battlefield@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?refresh@game@Battlefield@@QAEXXZ
_TEXT	SEGMENT
tv2457 = -1592						; size = 4
tv2518 = -1588						; size = 4
tv2455 = -1584						; size = 4
tv2517 = -1580						; size = 4
tv2453 = -1576						; size = 4
tv2192 = -1572						; size = 4
tv2450 = -1568						; size = 4
tv2143 = -1564						; size = 4
tv2447 = -1560						; size = 4
tv2444 = -1556						; size = 4
tv2515 = -1552						; size = 4
tv2442 = -1548						; size = 4
tv2514 = -1544						; size = 4
tv2439 = -1540						; size = 4
tv2513 = -1536						; size = 4
tv2437 = -1532						; size = 4
tv2434 = -1528						; size = 4
tv2511 = -1524						; size = 4
tv2431 = -1520						; size = 4
tv2510 = -1516						; size = 4
tv2429 = -1512						; size = 4
tv2424 = -1508						; size = 4
tv2421 = -1504						; size = 4
tv2508 = -1500						; size = 4
tv2419 = -1496						; size = 4
tv2507 = -1492						; size = 4
tv2416 = -1488						; size = 4
tv2506 = -1484						; size = 4
tv2414 = -1480						; size = 4
tv2411 = -1476						; size = 4
tv2504 = -1472						; size = 4
tv2408 = -1468						; size = 4
tv2503 = -1464						; size = 4
tv1823 = -1460						; size = 4
tv2402 = -1456						; size = 4
tv2399 = -1452						; size = 4
tv2501 = -1448						; size = 4
tv2397 = -1444						; size = 4
tv2500 = -1440						; size = 4
tv2394 = -1436						; size = 4
tv2499 = -1432						; size = 4
tv2392 = -1428						; size = 4
tv2389 = -1424						; size = 4
tv2497 = -1420						; size = 4
tv2386 = -1416						; size = 4
tv2496 = -1412						; size = 4
tv2384 = -1408						; size = 4
tv2379 = -1404						; size = 4
tv2376 = -1400						; size = 4
tv2494 = -1396						; size = 4
tv2373 = -1392						; size = 4
tv2493 = -1388						; size = 4
tv2371 = -1384						; size = 4
tv2368 = -1380						; size = 4
tv2491 = -1376						; size = 4
tv2365 = -1372						; size = 4
tv2490 = -1368						; size = 4
tv2994 = -1364						; size = 4
tv2363 = -1360						; size = 4
tv2361 = -1356						; size = 4
tv2358 = -1352						; size = 4
tv2488 = -1348						; size = 4
tv2355 = -1344						; size = 4
tv2487 = -1340						; size = 4
tv2353 = -1336						; size = 4
tv2350 = -1332						; size = 4
tv2485 = -1328						; size = 4
tv2347 = -1324						; size = 4
tv2484 = -1320						; size = 4
tv2345 = -1316						; size = 4
tv2342 = -1312						; size = 4
tv2482 = -1308						; size = 4
tv2340 = -1304						; size = 4
tv2481 = -1300						; size = 4
tv2337 = -1296						; size = 4
tv2480 = -1292						; size = 4
tv2335 = -1288						; size = 4
tv2332 = -1284						; size = 4
tv1150 = -1280						; size = 4
tv2330 = -1276						; size = 4
tv1163 = -1272						; size = 4
tv2327 = -1268						; size = 4
tv1177 = -1264						; size = 4
tv2322 = -1260						; size = 4
tv2319 = -1256						; size = 4
tv2477 = -1252						; size = 4
tv2317 = -1248						; size = 4
tv2314 = -1244						; size = 4
tv2475 = -1240						; size = 4
tv2312 = -1236						; size = 4
tv2474 = -1232						; size = 4
tv2309 = -1228						; size = 4
tv2473 = -1224						; size = 4
tv2307 = -1220						; size = 4
tv2306 = -1216						; size = 4
tv2304 = -1212						; size = 4
tv2472 = -1208						; size = 4
tv2302 = -1204						; size = 4
tv2471 = -1200						; size = 4
tv2300 = -1196						; size = 4
tv2297 = -1192						; size = 4
tv2469 = -1188						; size = 4
tv2294 = -1184						; size = 4
tv2468 = -1180						; size = 4
tv2292 = -1176						; size = 4
tv2467 = -1172						; size = 4
tv2290 = -1168						; size = 4
tv2287 = -1164						; size = 4
tv2465 = -1160						; size = 4
tv2284 = -1156						; size = 4
tv775 = -1152						; size = 4
tv2281 = -1148						; size = 4
tv2279 = -1144						; size = 4
tv2464 = -1140						; size = 4
tv2277 = -1136						; size = 4
tv661 = -1132						; size = 4
tv2274 = -1128						; size = 4
tv2271 = -1124						; size = 4
tv2462 = -1120						; size = 4
tv2267 = -1116						; size = 4
tv2264 = -1112						; size = 4
tv2460 = -1108						; size = 4
tv2260 = -1104						; size = 4
tv2257 = -1100						; size = 4
tv2458 = -1096						; size = 4
tv2253 = -1092						; size = 4
tv81 = -1088						; size = 4
_this$ = -1084						; size = 4
$T373720 = -1080					; size = 4
$T373719 = -1076					; size = 4
$T373718 = -1072					; size = 4
$T373717 = -1068					; size = 4
$T373716 = -1064					; size = 4
$T373715 = -1060					; size = 4
$T373714 = -1056					; size = 4
$T373713 = -1052					; size = 4
$T373712 = -1048					; size = 4
$T373711 = -1044					; size = 4
$T373710 = -1040					; size = 4
$T373709 = -1036					; size = 4
$T373708 = -1032					; size = 4
$T373707 = -1028					; size = 4
$T373706 = -1024					; size = 4
$T373703 = -1020					; size = 4
$T373702 = -1016					; size = 4
$T373701 = -1012					; size = 4
$T373700 = -1008					; size = 4
$T373699 = -1004					; size = 4
$T373698 = -1000					; size = 4
$T373697 = -996						; size = 4
$T373696 = -992						; size = 4
$T373695 = -988						; size = 4
$T373694 = -984						; size = 4
$T373693 = -980						; size = 4
$T373692 = -976						; size = 4
$T373691 = -972						; size = 4
$T373690 = -968						; size = 4
$T373689 = -964						; size = 4
$T373688 = -960						; size = 4
$T373687 = -956						; size = 4
$T373686 = -952						; size = 4
$T373685 = -948						; size = 4
$T373684 = -944						; size = 4
$T373683 = -940						; size = 4
$T373682 = -936						; size = 4
$T373681 = -932						; size = 4
$T373680 = -928						; size = 4
$T373679 = -924						; size = 4
$T373678 = -920						; size = 4
$T373677 = -916						; size = 4
$T373676 = -912						; size = 4
$T373675 = -908						; size = 4
$T373674 = -904						; size = 4
$T373673 = -900						; size = 4
$T373672 = -896						; size = 4
$T373671 = -892						; size = 4
$T373670 = -888						; size = 4
$T373669 = -884						; size = 4
$T373668 = -880						; size = 4
$T373667 = -873						; size = 1
$T373666 = -872						; size = 4
$T373665 = -868						; size = 4
$T373664 = -864						; size = 4
$T373663 = -857						; size = 1
$T373662 = -856						; size = 4
$T373661 = -852						; size = 4
$T373660 = -848						; size = 4
$T373659 = -844						; size = 4
$T373658 = -840						; size = 4
$T373657 = -836						; size = 4
$T373656 = -832						; size = 4
$T373655 = -828						; size = 4
$T373654 = -824						; size = 4
$T373653 = -820						; size = 4
_i$154044 = -816					; size = 4
_slot$154034 = -809					; size = 1
_ip$154037 = -808					; size = 28
_slashPos$154032 = -780					; size = 4
_slotPos$154029 = -776					; size = 4
_message$154028 = -772					; size = 28
_it$153970 = -744					; size = 4
_i$153961 = -739					; size = 1
_playercount$153940 = -738				; size = 1
_bOnWhitelist$153960 = -737				; size = 1
_usTeam$153922 = -736					; size = 2
_cMoveList$153925 = -730				; size = 1
_ucDifference$153920 = -729				; size = 1
_i$153745 = -728					; size = 4
_i$153720 = -724					; size = 4
_sWeapon$153717 = -720					; size = 28
_sAttacker$153713 = -692				; size = 28
_sVictim$153715 = -664					; size = 28
_i$153687 = -636					; size = 4
_asd$153670 = -632					; size = 28
_iPosition$153667 = -604				; size = 4
_i$153655 = -600					; size = 4
_chat$153653 = -596					; size = 88
_i$153572 = -508					; size = 4
_cPlayer$153555 = -501					; size = 1
_usPointer$153554 = -500				; size = 2
_function$153540 = -496					; size = 28
_usRealWordCount$ = -468				; size = 2
$T154043 = -464						; size = 28
$T154042 = -436						; size = 28
$T154041 = -408						; size = 28
$T154036 = -380						; size = 28
$T154015 = -352						; size = 28
$T153999 = -324						; size = 28
$T153951 = -296						; size = 28
$T153737 = -268						; size = 28
$T153725 = -240						; size = 28
$T153700 = -212						; size = 28
$T153696 = -184						; size = 28
$T153691 = -156						; size = 28
$T153679 = -128						; size = 28
$T153663 = -100						; size = 28
$T153654 = -72						; size = 28
$T153570 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?refresh@game@Battlefield@@QAEXXZ PROC			; Battlefield::game::refresh, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?refresh@game@Battlefield@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1580				; 0000062cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_refresh@bf3_socket@@IAEXXZ		; bf3_socket::_refresh
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	mov	WORD PTR _usRealWordCount$[ebp], ax
; Line 53
	movzx	eax, WORD PTR _usRealWordCount$[ebp]
	test	eax, eax
	je	$LN89@refresh@2
; Line 55
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 59
	movzx	ecx, WORD PTR _usRealWordCount$[ebp]
	cmp	ecx, 2
	jle	$LN88@refresh@2
	push	OFFSET $SG-243
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN88@refresh@2
	push	OFFSET $SG-244
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN88@refresh@2
; Line 66
	mov	ecx, 10					; 0000000aH
	mov	WORD PTR _usPointer$153554[ebp], cx
; Line 68
	movzx	edx, WORD PTR _usPointer$153554[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+23384], al
; Line 69
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+23385], 0
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23386], 0
; Line 72
	mov	BYTE PTR _cPlayer$153555[ebp], 0
	jmp	SHORT $LN87@refresh@2
$LN86@refresh@2:
	mov	cl, BYTE PTR _cPlayer$153555[ebp]
	add	cl, 1
	mov	BYTE PTR _cPlayer$153555[ebp], cl
$LN87@refresh@2:
	movsx	edx, BYTE PTR _cPlayer$153555[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	edx, ecx
	jge	$LN85@refresh@2
; Line 76
	mov	dx, WORD PTR _usPointer$153554[ebp]
	add	dx, 1
	mov	WORD PTR _usPointer$153554[ebp], dx
	movzx	eax, WORD PTR _usPointer$153554[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR $T153570[ebp]
	push	ecx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv81[ebp], eax
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv2253[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv2253[ebp]
	push	eax
	movsx	ecx, BYTE PTR _cPlayer$153555[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+23392]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153570[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23304]
	test	ecx, ecx
	je	$LN81@refresh@2
; Line 80
	mov	DWORD PTR _i$153572[ebp], 0
	jmp	SHORT $LN83@refresh@2
$LN82@refresh@2:
	mov	edx, DWORD PTR _i$153572[ebp]
	add	edx, 1
	mov	DWORD PTR _i$153572[ebp], edx
$LN83@refresh@2:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	DWORD PTR _i$153572[ebp], ecx
	jae	SHORT $LN81@refresh@2
; Line 82
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 23276				; 00005aecH
	push	edx
	mov	eax, DWORD PTR _i$153572[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN80@refresh@2
; Line 84
	mov	ecx, DWORD PTR _i$153572[ebp]
	imul	ecx, 108				; 0000006cH
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+ecx+23496], dx
; Line 86
	jmp	SHORT $LN81@refresh@2
$LN80@refresh@2:
; Line 88
	jmp	SHORT $LN82@refresh@2
$LN81@refresh@2:
; Line 93
	mov	cx, WORD PTR _usPointer$153554[ebp]
	add	cx, 1
	mov	WORD PTR _usPointer$153554[ebp], cx
	movzx	edx, WORD PTR _usPointer$153554[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	movsx	eax, BYTE PTR _cPlayer$153555[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+23420]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 97
	mov	dx, WORD PTR _usPointer$153554[ebp]
	add	dx, 1
	mov	WORD PTR _usPointer$153554[ebp], dx
	movzx	eax, WORD PTR _usPointer$153554[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movsx	ecx, BYTE PTR _cPlayer$153555[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+23476], al
; Line 101
	mov	ax, WORD PTR _usPointer$153554[ebp]
	add	ax, 1
	mov	WORD PTR _usPointer$153554[ebp], ax
	movzx	ecx, WORD PTR _usPointer$153554[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movsx	edx, BYTE PTR _cPlayer$153555[ebp]
	imul	edx, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+edx+23477], al
; Line 105
	mov	dx, WORD PTR _usPointer$153554[ebp]
	add	dx, 1
	mov	WORD PTR _usPointer$153554[ebp], dx
	movzx	eax, WORD PTR _usPointer$153554[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movsx	ecx, BYTE PTR _cPlayer$153555[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+ecx+23478], ax
; Line 109
	mov	ax, WORD PTR _usPointer$153554[ebp]
	add	ax, 1
	mov	WORD PTR _usPointer$153554[ebp], ax
	movzx	ecx, WORD PTR _usPointer$153554[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movsx	edx, BYTE PTR _cPlayer$153555[ebp]
	imul	edx, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+edx+23480], ax
; Line 113
	mov	dx, WORD PTR _usPointer$153554[ebp]
	add	dx, 1
	mov	WORD PTR _usPointer$153554[ebp], dx
	movzx	eax, WORD PTR _usPointer$153554[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movsx	ecx, BYTE PTR _cPlayer$153555[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx+23484], eax
; Line 117
	mov	ax, WORD PTR _usPointer$153554[ebp]
	add	ax, 1
	mov	WORD PTR _usPointer$153554[ebp], ax
	movzx	ecx, WORD PTR _usPointer$153554[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$string_cast@IDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned int,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	movsx	edx, BYTE PTR _cPlayer$153555[ebp]
	imul	edx, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx+23488], eax
; Line 123
	movsx	edx, BYTE PTR _cPlayer$153555[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+23476]
	cmp	ecx, 1
	jne	SHORT $LN79@refresh@2
; Line 124
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+23385]
	add	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+23385], al
	jmp	SHORT $LN77@refresh@2
$LN79@refresh@2:
; Line 125
	movsx	edx, BYTE PTR _cPlayer$153555[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+23476]
	cmp	ecx, 2
	jne	SHORT $LN77@refresh@2
; Line 126
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+23386]
	add	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+23386], al
$LN77@refresh@2:
; Line 127
	jmp	$LN86@refresh@2
$LN85@refresh@2:
; Line 129
	jmp	$LN9@refresh@2
$LN88@refresh@2:
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	cmp	eax, 10					; 0000000aH
	jb	$LN9@refresh@2
	push	0
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 112				; 00000070H
	jne	$LN9@refresh@2
; Line 131
	push	9
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 67					; 00000043H
	jne	$LN74@refresh@2
	movzx	ecx, WORD PTR _usRealWordCount$[ebp]
	cmp	ecx, 5
	jl	$LN74@refresh@2
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	movzx	edx, al
	test	edx, edx
	jne	$LN74@refresh@2
; Line 133
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 47					; 0000002fH
	je	$LN73@refresh@2
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 33					; 00000021H
	je	$LN73@refresh@2
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	cmp	eax, 4
	jb	$LN72@refresh@2
	push	OFFSET $SG-245
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?9DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator!=<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN72@refresh@2
; Line 137
	push	OFFSET $SG-246
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN71@refresh@2
; Line 138
	push	0
	push	1
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373653[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2458[ebp], eax
	mov	ecx, DWORD PTR tv2458[ebp]
	mov	DWORD PTR tv2257[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373654[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2260[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
	jmp	$LN67@refresh@2
$LN71@refresh@2:
; Line 139
	push	OFFSET $SG-247
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN69@refresh@2
; Line 140
	push	OFFSET $SG-248
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	push	ecx
	push	1
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373655[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2460[ebp], eax
	mov	edx, DWORD PTR tv2460[ebp]
	mov	DWORD PTR tv2264[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373656[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2267[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
	jmp	$LN67@refresh@2
$LN69@refresh@2:
; Line 141
	push	OFFSET $SG-249
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN67@refresh@2
; Line 142
	push	2
	push	1
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373657[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2462[ebp], eax
	mov	edx, DWORD PTR tv2462[ebp]
	mov	DWORD PTR tv2271[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373658[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2274[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?log@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0II@Z ; Database::SQLite::log
$LN67@refresh@2:
; Line 144
	lea	ecx, DWORD PTR _chat$153653[ebp]
	call	??0struct_chat@Battlefield@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 145
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR $T153654[ebp]
	push	ecx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv661[ebp], eax
	mov	edx, DWORD PTR tv661[ebp]
	mov	DWORD PTR tv2277[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv2277[ebp]
	push	eax
	lea	ecx, DWORD PTR _chat$153653[ebp+32]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T153654[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 146
	mov	DWORD PTR _i$153655[ebp], 0
	jmp	SHORT $LN66@refresh@2
$LN65@refresh@2:
	mov	ecx, DWORD PTR _i$153655[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$153655[ebp], ecx
$LN66@refresh@2:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	cmp	DWORD PTR _i$153655[ebp], eax
	jae	$LN64@refresh@2
; Line 148
	lea	ecx, DWORD PTR _chat$153653[ebp+32]
	push	ecx
	mov	edx, DWORD PTR _i$153655[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN63@refresh@2
; Line 150
	push	OFFSET $SG-250
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN62@refresh@2
; Line 151
	mov	BYTE PTR _chat$153653[ebp], 1
; Line 152
	jmp	SHORT $LN61@refresh@2
$LN62@refresh@2:
; Line 153
	mov	BYTE PTR _chat$153653[ebp], 0
$LN61@refresh@2:
; Line 155
	mov	ecx, DWORD PTR _i$153655[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+ecx+23476]
	mov	BYTE PTR _chat$153653[ebp+1], al
; Line 156
	lea	ecx, DWORD PTR $T153663[ebp]
	push	ecx
	call	?getDateTimeAsString@helper@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; helper::getDateTimeAsString
	add	esp, 4
	mov	DWORD PTR tv2464[ebp], eax
	mov	edx, DWORD PTR tv2464[ebp]
	mov	DWORD PTR tv2279[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv2279[ebp]
	push	eax
	lea	ecx, DWORD PTR _chat$153653[ebp+4]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T153663[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 157
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR _chat$153653[ebp+60]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 159
	jmp	SHORT $LN64@refresh@2
$LN63@refresh@2:
; Line 161
	jmp	$LN65@refresh@2
$LN64@refresh@2:
; Line 163
	sub	esp, 88					; 00000058H
	mov	ecx, esp
	mov	DWORD PTR $T373659[ebp], esp
	lea	edx, DWORD PTR _chat$153653[ebp]
	push	edx
	call	??0struct_chat@Battlefield@@QAE@ABU01@@Z
	mov	DWORD PTR tv2281[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addChatMessage@game@Battlefield@@QAEXUstruct_chat@2@@Z ; Battlefield::game::addChatMessage
; Line 164
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _chat$153653[ebp]
	call	??1struct_chat@Battlefield@@QAE@XZ
$LN72@refresh@2:
; Line 166
	jmp	$LN58@refresh@2
$LN73@refresh@2:
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	cmp	eax, 3
	jb	$LN58@refresh@2
; Line 170
	push	0
	push	OFFSET $SG-251
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _iPosition$153667[ebp], eax
; Line 171
	cmp	DWORD PTR _iPosition$153667[ebp], 0
	je	$LN58@refresh@2
; Line 173
	mov	eax, DWORD PTR _iPosition$153667[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _asd$153670[ebp]
	push	ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 174
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373660[ebp], esp
	push	eax
	mov	eax, DWORD PTR _iPosition$153667[ebp]
	add	eax, 1
	push	eax
	push	edx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	ecx, eax
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	DWORD PTR tv775[ebp], eax
	mov	ecx, DWORD PTR tv775[ebp]
	mov	DWORD PTR tv2284[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373661[ebp], esp
	lea	edx, DWORD PTR _asd$153670[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2465[ebp], eax
	mov	eax, DWORD PTR tv2465[ebp]
	mov	DWORD PTR tv2287[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373662[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2290[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ingameCmd@game@Battlefield@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::ingameCmd
; Line 175
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _asd$153670[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN58@refresh@2:
; Line 177
	jmp	$LN9@refresh@2
$LN74@refresh@2:
; Line 179
	push	9
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 83					; 00000053H
	jne	$LN56@refresh@2
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 112				; 00000070H
	jne	$LN56@refresh@2
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23304]
	test	ecx, ecx
	je	$LN54@refresh@2
; Line 183
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	edx, DWORD PTR $T153679[ebp]
	push	edx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv2467[ebp], eax
	mov	eax, DWORD PTR tv2467[ebp]
	mov	DWORD PTR tv2292[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	push	ecx
	mov	edx, DWORD PTR tv2292[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T373663[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153679[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, BYTE PTR $T373663[ebp]
	test	eax, eax
	je	$LN54@refresh@2
; Line 185
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373664[ebp], esp
	push	ecx
	mov	ecx, edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2468[ebp], eax
	mov	eax, DWORD PTR tv2468[ebp]
	mov	DWORD PTR tv2294[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373665[ebp], esp
	push	OFFSET $SG-252
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2469[ebp], eax
	mov	ecx, DWORD PTR tv2469[ebp]
	mov	DWORD PTR tv2297[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373666[ebp], esp
	push	OFFSET $SG-253
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2300[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 186
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+23304], 0
$LN54@refresh@2:
; Line 190
	mov	DWORD PTR _i$153687[ebp], 0
	jmp	SHORT $LN53@refresh@2
$LN52@refresh@2:
	mov	eax, DWORD PTR _i$153687[ebp]
	add	eax, 1
	mov	DWORD PTR _i$153687[ebp], eax
$LN53@refresh@2:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$153687[ebp], edx
	jae	$LN51@refresh@2
; Line 192
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	eax, DWORD PTR $T153691[ebp]
	push	eax
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv2471[ebp], eax
	mov	ecx, DWORD PTR tv2471[ebp]
	mov	DWORD PTR tv2302[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	edx, DWORD PTR tv2302[ebp]
	push	edx
	mov	eax, DWORD PTR _i$153687[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR $T373667[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153691[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, BYTE PTR $T373667[ebp]
	test	eax, eax
	je	SHORT $LN50@refresh@2
; Line 194
	mov	ecx, DWORD PTR _i$153687[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+ecx+23498], 1
$LN50@refresh@2:
; Line 196
	jmp	$LN52@refresh@2
$LN51@refresh@2:
; Line 198
	jmp	$LN9@refresh@2
$LN56@refresh@2:
	push	9
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 74					; 0000004aH
	jne	$LN48@refresh@2
	movzx	ecx, WORD PTR _usRealWordCount$[ebp]
	cmp	ecx, 3
	jl	$LN48@refresh@2
; Line 203
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	edx, DWORD PTR $T153696[ebp]
	push	edx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv2472[ebp], eax
	mov	eax, DWORD PTR tv2472[ebp]
	mov	DWORD PTR tv2304[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv2304[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153696[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 204
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+23304], 1
; Line 206
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373668[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2306[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?getAdminLevel@SQLite@Database@@QAEIV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::getAdminLevel
	mov	DWORD PTR tv2307[ebp], eax
	cmp	DWORD PTR tv2307[ebp], 0
	je	$LN47@refresh@2
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+23388]
	movzx	eax, BYTE PTR [edx+152]
	test	eax, eax
	je	$LN46@refresh@2
; Line 209
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373669[ebp], esp
	push	OFFSET $SG-254
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2473[ebp], eax
	mov	ecx, DWORD PTR tv2473[ebp]
	mov	DWORD PTR tv2309[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373670[ebp], esp
	push	OFFSET $SG-255
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2474[ebp], eax
	mov	edx, DWORD PTR tv2474[ebp]
	mov	DWORD PTR tv2312[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23276				; 00005aecH
	push	eax
	push	OFFSET $SG-257
	lea	ecx, DWORD PTR $T153700[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2475[ebp], eax
	mov	edx, DWORD PTR tv2475[ebp]
	mov	DWORD PTR tv2314[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373671[ebp], esp
	push	OFFSET $SG-256
	mov	ecx, DWORD PTR tv2314[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2317[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153700[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN46@refresh@2:
; Line 211
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373672[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2477[ebp], eax
	mov	edx, DWORD PTR tv2477[ebp]
	mov	DWORD PTR tv2319[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373673[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2322[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?updateAdminName@SQLite@Database@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Database::SQLite::updateAdminName
; Line 212
	mov	ecx, DWORD PTR _this$[ebp]
	call	?updateWhitelist@game@Battlefield@@QAEXXZ ; Battlefield::game::updateWhitelist
$LN47@refresh@2:
; Line 214
	jmp	$LN9@refresh@2
$LN48@refresh@2:
; Line 215
	push	9
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 75					; 0000004bH
	jne	$LN44@refresh@2
; Line 217
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	edx, DWORD PTR _sAttacker$153713[ebp]
	push	edx
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
; Line 218
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	eax, DWORD PTR _sVictim$153715[ebp]
	push	eax
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
; Line 219
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR _sWeapon$153717[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
; Line 220
	push	OFFSET $SG-258
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN43@refresh@2
; Line 222
	mov	DWORD PTR _i$153720[ebp], 0
	jmp	SHORT $LN42@refresh@2
$LN41@refresh@2:
	mov	edx, DWORD PTR _i$153720[ebp]
	add	edx, 1
	mov	DWORD PTR _i$153720[ebp], edx
$LN42@refresh@2:
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23384]
	cmp	DWORD PTR _i$153720[ebp], ecx
	jae	$LN40@refresh@2
; Line 224
	lea	edx, DWORD PTR _sAttacker$153713[ebp]
	push	edx
	mov	eax, DWORD PTR _i$153720[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN39@refresh@2
; Line 226
	mov	ecx, DWORD PTR _i$153720[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx+23496]
	add	ax, 1
	mov	ecx, DWORD PTR _i$153720[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+ecx+23496], ax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373674[ebp], esp
	lea	eax, DWORD PTR _sAttacker$153713[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv1177[ebp], eax
	mov	ecx, DWORD PTR tv1177[ebp]
	mov	DWORD PTR tv2327[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373675[ebp], esp
	push	OFFSET $SG-259
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv1163[ebp], eax
	mov	edx, DWORD PTR tv1163[ebp]
	mov	DWORD PTR tv2330[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	eax, DWORD PTR _i$153720[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23496]
	push	edx
	lea	eax, DWORD PTR $T153725[ebp]
	push	eax
	call	??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ; dlib::cast_to_string<unsigned short>
	add	esp, 8
	mov	DWORD PTR tv1150[ebp], eax
	mov	ecx, DWORD PTR tv1150[ebp]
	mov	DWORD PTR tv2332[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373676[ebp], esp
	mov	eax, DWORD PTR tv2332[ebp]
	push	eax
	push	OFFSET $SG-260
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2335[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T153725[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	SHORT $LN37@refresh@2
$LN39@refresh@2:
; Line 228
	lea	ecx, DWORD PTR _sVictim$153715[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$153720[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN37@refresh@2
; Line 230
	mov	eax, DWORD PTR _i$153720[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax+23498], 0
$LN37@refresh@2:
; Line 232
	jmp	$LN41@refresh@2
$LN40@refresh@2:
; Line 234
	jmp	$LN32@refresh@2
$LN43@refresh@2:
; Line 236
	push	OFFSET $SG-261
	lea	edx, DWORD PTR _sWeapon$153717[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN35@refresh@2
; Line 237
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373677[ebp], esp
	push	OFFSET $SG-262
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2480[ebp], eax
	mov	ecx, DWORD PTR tv2480[ebp]
	mov	DWORD PTR tv2337[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373678[ebp], esp
	push	OFFSET $SG-263
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2481[ebp], eax
	mov	edx, DWORD PTR tv2481[ebp]
	mov	DWORD PTR tv2340[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	push	OFFSET $SG-264
	lea	eax, DWORD PTR _sAttacker$153713[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153737[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2482[ebp], eax
	mov	edx, DWORD PTR tv2482[ebp]
	mov	DWORD PTR tv2342[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373679[ebp], esp
	lea	ecx, DWORD PTR _sVictim$153715[ebp]
	push	ecx
	mov	edx, DWORD PTR tv2342[ebp]
	push	edx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2345[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T153737[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN35@refresh@2:
; Line 239
	mov	DWORD PTR _i$153745[ebp], 0
	jmp	SHORT $LN34@refresh@2
$LN33@refresh@2:
	mov	eax, DWORD PTR _i$153745[ebp]
	add	eax, 1
	mov	DWORD PTR _i$153745[ebp], eax
$LN34@refresh@2:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$153745[ebp], edx
	jae	SHORT $LN32@refresh@2
; Line 241
	lea	eax, DWORD PTR _sVictim$153715[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$153745[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN31@refresh@2
; Line 243
	mov	edx, DWORD PTR _i$153745[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+edx+23498], 0
$LN31@refresh@2:
; Line 245
	jmp	SHORT $LN33@refresh@2
$LN32@refresh@2:
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+23388]
	movzx	eax, BYTE PTR [edx+158]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	eax, edx
	jg	$LN30@refresh@2
	lea	eax, DWORD PTR $T373683[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _sWeapon$153717[ebp]
	push	ecx
	lea	edx, DWORD PTR $T373680[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T373681[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T373682[ebp]
	push	eax
	call	??$find@V?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@0@V10@0ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::find<std::_Vector_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 16					; 00000010H
	mov	ecx, eax
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN30@refresh@2
; Line 250
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373684[ebp], esp
	lea	edx, DWORD PTR _sAttacker$153713[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2484[ebp], eax
	mov	eax, DWORD PTR tv2484[ebp]
	mov	DWORD PTR tv2347[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373685[ebp], esp
	push	OFFSET $SG-265
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2485[ebp], eax
	mov	ecx, DWORD PTR tv2485[ebp]
	mov	DWORD PTR tv2350[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373686[ebp], esp
	push	OFFSET $SG-266
	lea	eax, DWORD PTR _sWeapon$153717[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2353[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 251
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373687[ebp], esp
	lea	edx, DWORD PTR _sAttacker$153713[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2487[ebp], eax
	mov	eax, DWORD PTR tv2487[ebp]
	mov	DWORD PTR tv2355[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373688[ebp], esp
	push	OFFSET $SG-267
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2488[ebp], eax
	mov	ecx, DWORD PTR tv2488[ebp]
	mov	DWORD PTR tv2358[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373689[ebp], esp
	push	OFFSET $SG-268
	lea	eax, DWORD PTR _sWeapon$153717[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2361[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 252
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373690[ebp], esp
	lea	edx, DWORD PTR _sAttacker$153713[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2363[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_kill@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::player_kill
$LN30@refresh@2:
; Line 255
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	movzx	edx, BYTE PTR [ecx+153]
	test	edx, edx
	je	$LN11@refresh@2
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+23385]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23386]
	sub	eax, edx
	cdq
	xor	eax, edx
	sub	eax, edx
	mov	BYTE PTR _ucDifference$153920[ebp], al
; Line 260
	movzx	eax, BYTE PTR _ucDifference$153920[ebp]
	cmp	eax, 1
	jle	$LN28@refresh@2
; Line 263
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23385]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+23386]
	cmp	edx, ecx
	jle	SHORT $LN27@refresh@2
; Line 264
	mov	edx, 1
	mov	WORD PTR _usTeam$153922[ebp], dx
; Line 265
	jmp	SHORT $LN26@refresh@2
$LN27@refresh@2:
; Line 266
	mov	eax, 2
	mov	WORD PTR _usTeam$153922[ebp], ax
$LN26@refresh@2:
; Line 268
	mov	cl, BYTE PTR ?whitelistIncrement@?HD@??refresh@game@Battlefield@@QAEXXZ@4EA
	add	cl, 1
	mov	BYTE PTR ?whitelistIncrement@?HD@??refresh@game@Battlefield@@QAEXXZ@4EA, cl
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	mov	DWORD PTR tv2994[ebp], eax
	fild	DWORD PTR tv2994[ebp]
	fmul	QWORD PTR __real@3fd3333333333333
	call	__ftol2_sse
	movzx	ecx, BYTE PTR ?whitelistIncrement@?HD@??refresh@game@Battlefield@@QAEXXZ@4EA
	mov	edx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [edx+23384]
	sub	edx, ecx
	sub	edx, eax
	mov	BYTE PTR _cMoveList$153925[ebp], dl
; Line 270
	movsx	eax, BYTE PTR _cMoveList$153925[ebp]
	test	eax, eax
	jge	$LN25@refresh@2
; Line 272
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373691[ebp], esp
	push	OFFSET $SG-269
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2490[ebp], eax
	mov	ecx, DWORD PTR tv2490[ebp]
	mov	DWORD PTR tv2365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373692[ebp], esp
	push	OFFSET $SG-270
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2491[ebp], eax
	mov	edx, DWORD PTR tv2491[ebp]
	mov	DWORD PTR tv2368[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373693[ebp], esp
	push	OFFSET $SG-271
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2371[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 273
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373694[ebp], esp
	push	OFFSET $SG-272
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2493[ebp], eax
	mov	eax, DWORD PTR tv2493[ebp]
	mov	DWORD PTR tv2373[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373695[ebp], esp
	push	OFFSET $SG-273
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2494[ebp], eax
	mov	ecx, DWORD PTR tv2494[ebp]
	mov	DWORD PTR tv2376[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373696[ebp], esp
	push	OFFSET $SG-274
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2379[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 275
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+23384]
	mov	BYTE PTR _playercount$153940[ebp], al
$LN24@refresh@2:
; Line 276
	mov	cl, BYTE PTR _playercount$153940[ebp]
	sub	cl, 1
	mov	BYTE PTR _playercount$153940[ebp], cl
	movzx	edx, BYTE PTR _playercount$153940[ebp]
	test	edx, edx
	je	$LN23@refresh@2
; Line 278
	movzx	eax, BYTE PTR _playercount$153940[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+23476]
	movzx	eax, WORD PTR _usTeam$153922[ebp]
	cmp	edx, eax
	jne	$LN22@refresh@2
; Line 280
	push	1
	push	0
	movzx	ecx, BYTE PTR _playercount$153940[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+23476]
	push	eax
	movzx	ecx, BYTE PTR _playercount$153940[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373697[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2384[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z ; Battlefield::game::player_move
; Line 281
	movzx	ecx, BYTE PTR _playercount$153940[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373698[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2496[ebp], eax
	mov	ecx, DWORD PTR tv2496[ebp]
	mov	DWORD PTR tv2386[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373699[ebp], esp
	push	OFFSET $SG-275
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2497[ebp], eax
	mov	edx, DWORD PTR tv2497[ebp]
	mov	DWORD PTR tv2389[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373700[ebp], esp
	push	OFFSET $SG-276
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2392[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 282
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373701[ebp], esp
	push	OFFSET $SG-277
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2499[ebp], eax
	mov	eax, DWORD PTR tv2499[ebp]
	mov	DWORD PTR tv2394[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373702[ebp], esp
	push	OFFSET $SG-278
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2500[ebp], eax
	mov	ecx, DWORD PTR tv2500[ebp]
	mov	DWORD PTR tv2397[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	movzx	edx, BYTE PTR _playercount$153940[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	push	OFFSET $SG-280
	lea	edx, DWORD PTR $T153951[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2501[ebp], eax
	mov	eax, DWORD PTR tv2501[ebp]
	mov	DWORD PTR tv2399[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 44		; 0000002cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373703[ebp], esp
	push	OFFSET $SG-279
	mov	edx, DWORD PTR tv2399[ebp]
	push	edx
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2402[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 45		; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T153951[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN22@refresh@2:
; Line 284
	jmp	$LN24@refresh@2
$LN23@refresh@2:
; Line 286
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR _sWeapon$153717[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR _sVictim$153715[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sAttacker$153713[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN90@refresh@2
$LN25@refresh@2:
; Line 289
	mov	BYTE PTR _bOnWhitelist$153960[ebp], 0
; Line 290
	movsx	eax, BYTE PTR _cMoveList$153925[ebp]
	cmp	eax, 1
	jle	SHORT $LN92@refresh@2
	movsx	ecx, BYTE PTR _cMoveList$153925[ebp]
	mov	DWORD PTR tv1823[ebp], ecx
	jmp	SHORT $LN93@refresh@2
$LN92@refresh@2:
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+23384]
	sub	eax, 1
	mov	DWORD PTR tv1823[ebp], eax
$LN93@refresh@2:
	mov	cl, BYTE PTR tv1823[ebp]
	mov	BYTE PTR _i$153961[ebp], cl
	jmp	SHORT $LN21@refresh@2
$LN20@refresh@2:
	mov	dl, BYTE PTR _i$153961[ebp]
	add	dl, 1
	mov	BYTE PTR _i$153961[ebp], dl
$LN21@refresh@2:
	movzx	eax, BYTE PTR _i$153961[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	eax, edx
	jge	$LN19@refresh@2
; Line 292
	movzx	eax, BYTE PTR _i$153961[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+23476]
	movzx	eax, WORD PTR _usTeam$153922[ebp]
	cmp	edx, eax
	jne	$LN12@refresh@2
	lea	ecx, DWORD PTR _sVictim$153715[ebp]
	push	ecx
	movzx	edx, BYTE PTR _i$153961[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	push	ecx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN12@refresh@2
; Line 294
	lea	eax, DWORD PTR $T373706[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _it$153970[ebp], ecx
	jmp	SHORT $LN17@refresh@2
$LN16@refresh@2:
	lea	ecx, DWORD PTR _it$153970[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN17@refresh@2:
	lea	edx, DWORD PTR $T373707[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$153970[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@refresh@2
; Line 296
	movzx	ecx, BYTE PTR _i$153961[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	lea	ecx, DWORD PTR _it$153970[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@refresh@2
; Line 298
	mov	BYTE PTR _bOnWhitelist$153960[ebp], 1
; Line 299
	jmp	SHORT $LN15@refresh@2
$LN14@refresh@2:
; Line 301
	jmp	SHORT $LN16@refresh@2
$LN15@refresh@2:
; Line 303
	movzx	edx, BYTE PTR _bOnWhitelist$153960[ebp]
	test	edx, edx
	je	$LN13@refresh@2
; Line 305
	movzx	eax, BYTE PTR _i$153961[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373708[ebp], esp
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2503[ebp], eax
	mov	eax, DWORD PTR tv2503[ebp]
	mov	DWORD PTR tv2408[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 46		; 0000002eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373709[ebp], esp
	push	OFFSET $SG-281
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2504[ebp], eax
	mov	ecx, DWORD PTR tv2504[ebp]
	mov	DWORD PTR tv2411[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 47		; 0000002fH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373710[ebp], esp
	push	OFFSET $SG-282
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2414[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 306
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373711[ebp], esp
	push	OFFSET $SG-283
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2506[ebp], eax
	mov	edx, DWORD PTR tv2506[ebp]
	mov	DWORD PTR tv2416[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 48		; 00000030H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373712[ebp], esp
	push	OFFSET $SG-284
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2507[ebp], eax
	mov	eax, DWORD PTR tv2507[ebp]
	mov	DWORD PTR tv2419[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 49		; 00000031H
	movzx	ecx, BYTE PTR _i$153961[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-286
	lea	ecx, DWORD PTR $T153999[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2508[ebp], eax
	mov	edx, DWORD PTR tv2508[ebp]
	mov	DWORD PTR tv2421[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 50		; 00000032H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373713[ebp], esp
	push	OFFSET $SG-285
	mov	ecx, DWORD PTR tv2421[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2424[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 51		; 00000033H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T153999[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 308
	jmp	$LN12@refresh@2
$LN13@refresh@2:
; Line 310
	push	1
	push	0
	movzx	edx, BYTE PTR _i$153961[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+23476]
	push	ecx
	movzx	edx, BYTE PTR _i$153961[ebp]
	imul	edx, 108				; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+23392]
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373714[ebp], esp
	push	ecx
	mov	ecx, edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2429[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_move@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@EE_N@Z ; Battlefield::game::player_move
; Line 311
	movzx	eax, BYTE PTR _i$153961[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+23392]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373715[ebp], esp
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2510[ebp], eax
	mov	eax, DWORD PTR tv2510[ebp]
	mov	DWORD PTR tv2431[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 52		; 00000034H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373716[ebp], esp
	push	OFFSET $SG-287
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2511[ebp], eax
	mov	ecx, DWORD PTR tv2511[ebp]
	mov	DWORD PTR tv2434[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 53		; 00000035H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373717[ebp], esp
	push	OFFSET $SG-288
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2437[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?yell@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::yell
; Line 312
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373718[ebp], esp
	push	OFFSET $SG-289
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2513[ebp], eax
	mov	edx, DWORD PTR tv2513[ebp]
	mov	DWORD PTR tv2439[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 54		; 00000036H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373719[ebp], esp
	push	OFFSET $SG-290
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv2514[ebp], eax
	mov	eax, DWORD PTR tv2514[ebp]
	mov	DWORD PTR tv2442[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 55		; 00000037H
	movzx	ecx, BYTE PTR _i$153961[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	push	OFFSET $SG-292
	lea	ecx, DWORD PTR $T154015[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2515[ebp], eax
	mov	edx, DWORD PTR tv2515[ebp]
	mov	DWORD PTR tv2444[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 56		; 00000038H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373720[ebp], esp
	push	OFFSET $SG-291
	mov	ecx, DWORD PTR tv2444[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv2447[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 57		; 00000039H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T154015[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 313
	jmp	SHORT $LN19@refresh@2
$LN12@refresh@2:
; Line 316
	jmp	$LN20@refresh@2
$LN19@refresh@2:
; Line 318
	jmp	SHORT $LN11@refresh@2
$LN28@refresh@2:
; Line 321
	mov	BYTE PTR ?whitelistIncrement@?HD@??refresh@game@Battlefield@@QAEXXZ@4EA, 0
$LN11@refresh@2:
; Line 324
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR _sWeapon$153717[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR _sVictim$153715[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sAttacker$153713[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN9@refresh@2
$LN44@refresh@2:
; Line 325
	push	OFFSET $SG-293
	lea	edx, DWORD PTR _function$153540[ebp]
	push	edx
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN9@refresh@2
; Line 327
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@I@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	push	eax
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
; Line 329
	push	0
	push	OFFSET $SG-294
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _slotPos$154029[ebp], eax
; Line 330
	mov	ecx, DWORD PTR _slotPos$154029[ebp]
	cmp	ecx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN7@refresh@2
; Line 332
	mov	edx, DWORD PTR _slotPos$154029[ebp]
	add	edx, 6
	push	edx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 333
	push	0
	push	41					; 00000029H
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _slashPos$154032[ebp], eax
; Line 334
	mov	eax, DWORD PTR _slashPos$154032[ebp]
	cmp	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN7@refresh@2
; Line 336
	mov	ecx, DWORD PTR _slashPos$154032[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR $T154036[ebp]
	push	edx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	DWORD PTR tv2143[ebp], eax
	mov	eax, DWORD PTR tv2143[ebp]
	mov	DWORD PTR tv2450[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 59		; 0000003bH
	mov	ecx, DWORD PTR tv2450[ebp]
	push	ecx
	call	??$string_cast@GDU?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BGABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; dlib::string_cast<unsigned short,char,std::char_traits<char>,std::allocator<char> >
	add	esp, 4
	mov	BYTE PTR _slot$154034[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR $T154036[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 338
	mov	edx, DWORD PTR _slashPos$154032[ebp]
	add	edx, 2
	push	edx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	push	eax
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 339
	push	0
	push	58					; 0000003aH
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _slotPos$154029[ebp], eax
; Line 340
	mov	eax, DWORD PTR _slotPos$154029[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _ip$154037[ebp]
	push	ecx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
; Line 342
	push	0
	push	OFFSET $SG-295
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	mov	DWORD PTR _slotPos$154029[ebp], eax
; Line 343
	mov	edx, DWORD PTR _slotPos$154029[ebp]
	cmp	edx, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	je	$LN3@refresh@2
; Line 345
	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR _slotPos$154029[ebp]
	add	ecx, 5
	push	ecx
	lea	edx, DWORD PTR $T154041[ebp]
	push	edx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	DWORD PTR tv2192[ebp], eax
	mov	eax, DWORD PTR tv2192[ebp]
	mov	DWORD PTR tv2453[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 61		; 0000003dH
	mov	ecx, DWORD PTR tv2453[ebp]
	push	ecx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T154041[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 347
	push	0
	push	34					; 00000022H
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::find
	push	eax
	push	0
	lea	edx, DWORD PTR $T154042[ebp]
	push	edx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
	mov	DWORD PTR tv2517[ebp], eax
	mov	eax, DWORD PTR tv2517[ebp]
	mov	DWORD PTR tv2455[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 62		; 0000003eH
	mov	ecx, DWORD PTR tv2455[ebp]
	push	ecx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T154042[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 348
	lea	edx, DWORD PTR _message$154028[ebp]
	push	edx
	lea	eax, DWORD PTR $T154043[ebp]
	push	eax
	call	??$tolower@U?$char_traits@D@std@@V?$allocator@D@2@@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@@Z ; dlib::tolower<std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv2518[ebp], eax
	mov	ecx, DWORD PTR tv2518[ebp]
	mov	DWORD PTR tv2457[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 63		; 0000003fH
	mov	edx, DWORD PTR tv2457[ebp]
	push	edx
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 60		; 0000003cH
	lea	ecx, DWORD PTR $T154043[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 350
	mov	DWORD PTR _i$154044[ebp], 0
	jmp	SHORT $LN5@refresh@2
$LN4@refresh@2:
	mov	eax, DWORD PTR _i$154044[ebp]
	add	eax, 1
	mov	DWORD PTR _i$154044[ebp], eax
$LN5@refresh@2:
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+23384]
	cmp	DWORD PTR _i$154044[ebp], edx
	jae	SHORT $LN3@refresh@2
; Line 352
	lea	eax, DWORD PTR _message$154028[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$154044[ebp]
	imul	ecx, 108				; 0000006cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+23392]
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@refresh@2
; Line 354
	lea	edx, DWORD PTR _ip$154037[ebp]
	push	edx
	mov	eax, DWORD PTR _i$154044[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax+23448]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN2@refresh@2:
; Line 356
	jmp	SHORT $LN4@refresh@2
$LN3@refresh@2:
; Line 358
	mov	BYTE PTR __$EHRec$[ebp+8], 58		; 0000003aH
	lea	ecx, DWORD PTR _ip$154037[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@refresh@2:
; Line 360
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _message$154028[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@refresh@2:
; Line 366
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _function$153540[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN89@refresh@2:
$LN90@refresh@2:
; Line 367
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$0:
	lea	ecx, DWORD PTR _function$153540[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T153570[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$2:
	mov	ecx, DWORD PTR $T373653[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$4:
	mov	ecx, DWORD PTR $T373655[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$6:
	mov	ecx, DWORD PTR $T373657[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$8:
	lea	ecx, DWORD PTR _chat$153653[ebp]
	jmp	??1struct_chat@Battlefield@@QAE@XZ
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$9:
	lea	ecx, DWORD PTR $T153654[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$10:
	lea	ecx, DWORD PTR $T153663[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$12:
	lea	ecx, DWORD PTR _asd$153670[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$13:
	mov	ecx, DWORD PTR $T373660[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$14:
	mov	ecx, DWORD PTR $T373661[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$16:
	lea	ecx, DWORD PTR $T153679[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$17:
	mov	ecx, DWORD PTR $T373664[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$18:
	mov	ecx, DWORD PTR $T373665[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$20:
	lea	ecx, DWORD PTR $T153691[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$21:
	lea	ecx, DWORD PTR $T153696[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$23:
	mov	ecx, DWORD PTR $T373669[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$24:
	mov	ecx, DWORD PTR $T373670[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$25:
	lea	ecx, DWORD PTR $T153700[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$27:
	mov	ecx, DWORD PTR $T373672[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$29:
	lea	ecx, DWORD PTR _sAttacker$153713[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$30:
	lea	ecx, DWORD PTR _sVictim$153715[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$31:
	lea	ecx, DWORD PTR _sWeapon$153717[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$32:
	mov	ecx, DWORD PTR $T373674[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$33:
	mov	ecx, DWORD PTR $T373675[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$34:
	lea	ecx, DWORD PTR $T153725[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$36:
	mov	ecx, DWORD PTR $T373677[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$37:
	mov	ecx, DWORD PTR $T373678[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$38:
	lea	ecx, DWORD PTR $T153737[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$40:
	mov	ecx, DWORD PTR $T373684[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$41:
	mov	ecx, DWORD PTR $T373685[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$43:
	mov	ecx, DWORD PTR $T373687[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$44:
	mov	ecx, DWORD PTR $T373688[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$47:
	mov	ecx, DWORD PTR $T373691[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$48:
	mov	ecx, DWORD PTR $T373692[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$50:
	mov	ecx, DWORD PTR $T373694[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$51:
	mov	ecx, DWORD PTR $T373695[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$54:
	mov	ecx, DWORD PTR $T373698[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$55:
	mov	ecx, DWORD PTR $T373699[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$57:
	mov	ecx, DWORD PTR $T373701[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$58:
	mov	ecx, DWORD PTR $T373702[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$59:
	lea	ecx, DWORD PTR $T153951[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$61:
	mov	ecx, DWORD PTR $T373708[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$62:
	mov	ecx, DWORD PTR $T373709[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$64:
	mov	ecx, DWORD PTR $T373711[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$65:
	mov	ecx, DWORD PTR $T373712[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$66:
	lea	ecx, DWORD PTR $T153999[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$69:
	mov	ecx, DWORD PTR $T373715[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$70:
	mov	ecx, DWORD PTR $T373716[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$72:
	mov	ecx, DWORD PTR $T373718[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$73:
	mov	ecx, DWORD PTR $T373719[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$74:
	lea	ecx, DWORD PTR $T154015[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$76:
	lea	ecx, DWORD PTR _message$154028[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$77:
	lea	ecx, DWORD PTR $T154036[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$78:
	lea	ecx, DWORD PTR _ip$154037[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$79:
	lea	ecx, DWORD PTR $T154041[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$80:
	lea	ecx, DWORD PTR $T154042[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?refresh@game@Battlefield@@QAEXXZ$81:
	lea	ecx, DWORD PTR $T154043[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?refresh@game@Battlefield@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1584]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?refresh@game@Battlefield@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?refresh@game@Battlefield@@QAEXXZ ENDP			; Battlefield::game::refresh
PUBLIC	__$ArrayPad$
PUBLIC	??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::game::game
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13
	DD	09H
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14
	DD	0cH
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15
	DD	0dH
	DD	FLAT:__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16
__ehfuncinfo$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	0fH
	DD	FLAT:__unwindtable$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv297 = -264						; size = 4
tv294 = -260						; size = 4
tv303 = -256						; size = 4
tv292 = -252						; size = 4
tv302 = -248						; size = 4
tv290 = -244						; size = 4
tv301 = -240						; size = 4
tv288 = -236						; size = 4
tv300 = -232						; size = 4
tv286 = -225						; size = 1
tv285 = -224						; size = 4
tv283 = -220						; size = 4
tv299 = -216						; size = 4
tv168 = -212						; size = 4
_this$ = -208						; size = 4
$T373820 = -204						; size = 4
$T373819 = -200						; size = 4
$T373818 = -193						; size = 1
$T373815 = -192						; size = 4
$T373814 = -188						; size = 4
$T153492 = -184						; size = 28
$T153422 = -156						; size = 28
$T153427 = -128						; size = 28
$T153411 = -100						; size = 28
$T153420 = -72						; size = 28
$T153403 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 28
??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::game::game, COMDAT
; _this$ = ecx
; Line 12
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 252				; 000000fcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bf3_socket@@IAE@XZ			; bf3_socket::bf3_socket
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	call	??0?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21468				; 000053dcH
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	64					; 00000040H
	push	28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21484				; 000053ecH
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	call	??0Vote@Battlefield@@QAE@XZ		; Battlefield::Vote::Vote
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	OFFSET ??1struct_player@Battlefield@@QAE@XZ
	push	OFFSET ??0struct_player@Battlefield@@QAE@XZ
	push	64					; 00000040H
	push	108					; 0000006cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23392				; 00005b60H
	push	ecx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 13
	push	24					; 00000018H
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR $T373815[ebp], eax
	cmp	DWORD PTR $T373815[ebp], 0
	je	SHORT $LN4@game@2
	mov	ecx, DWORD PTR $T373815[ebp]
	call	??0SQLite@Database@@QAE@XZ		; Database::SQLite::SQLite
	mov	DWORD PTR tv168[ebp], eax
	jmp	SHORT $LN5@game@2
$LN4@game@2:
	mov	DWORD PTR tv168[ebp], 0
$LN5@game@2:
	mov	edx, DWORD PTR tv168[ebp]
	mov	DWORD PTR $T373814[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T373814[ebp]
	mov	DWORD PTR [eax+21432], ecx
; Line 14
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	push	OFFSET $SG-238
	lea	eax, DWORD PTR $T153403[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv299[ebp], eax
	mov	ecx, DWORD PTR tv299[ebp]
	mov	DWORD PTR tv283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T373819[ebp], esp
	push	OFFSET $SG-237
	mov	eax, DWORD PTR tv283[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?open@SQLite@Database@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Database::SQLite::open
	mov	BYTE PTR tv286[ebp], al
	movzx	edx, BYTE PTR tv286[ebp]
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T373818[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T153403[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, BYTE PTR $T373818[ebp]
	test	eax, eax
	je	SHORT $LN1@game@2
; Line 15
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET $SG-239
	lea	edx, DWORD PTR $T153411[ebp]
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv300[ebp], eax
	mov	eax, DWORD PTR tv300[ebp]
	mov	DWORD PTR tv288[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv288[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T153420[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET __TI3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
	lea	edx, DWORD PTR $T153420[ebp]
	push	edx
	call	__CxxThrowException@8
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T153411[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@game@2:
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+21432]
	call	?getServerSettings@SQLite@Database@@QAEPAUstruct_settings@2@XZ ; Database::SQLite::getServerSettings
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+23388], eax
; Line 19
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+23384], 0
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+23386], 0
; Line 21
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+23385], 0
; Line 22
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+21464], 1
; Line 24
	push	OFFSET $SG-240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+23388]
	add	ecx, 28					; 0000001cH
	push	ecx
	lea	edx, DWORD PTR $T153427[ebp]
	push	edx
	call	??$cast_to_string@G@dlib@@YA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABG@Z ; dlib::cast_to_string<unsigned short>
	add	esp, 8
	mov	DWORD PTR tv301[ebp], eax
	mov	eax, DWORD PTR tv301[ebp]
	mov	DWORD PTR tv290[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	OFFSET $SG-242
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+23388]
	push	edx
	lea	eax, DWORD PTR $T153422[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv302[ebp], eax
	mov	ecx, DWORD PTR tv302[ebp]
	mov	DWORD PTR tv292[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv290[ebp]
	push	edx
	mov	eax, DWORD PTR tv292[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153492[ebp]
	push	ecx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@ABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv303[ebp], eax
	mov	edx, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv294[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T373820[ebp], esp
	push	OFFSET $SG-241
	mov	ecx, DWORD PTR tv294[ebp]
	push	ecx
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv297[ebp], eax
	call	?message@log@helper@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; helper::log::message
	add	esp, 32					; 00000020H
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T153492[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T153422[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T153427[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 26
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+23364], eax
; Line 27
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
$LN3@game@2:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1bf3_socket@@IAE@XZ			; bf3_socket::~bf3_socket
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21436				; 000053bcH
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21452				; 000053ccH
	jmp	??1?$list@Ustruct_chat@Battlefield@@V?$allocator@Ustruct_chat@Battlefield@@@std@@@std@@QAE@XZ ; std::list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >::~list<Battlefield::struct_chat,std::allocator<Battlefield::struct_chat> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21468				; 000053dcH
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	push	OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	64					; 00000040H
	push	28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 21484				; 000053ecH
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23276				; 00005aecH
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23308				; 00005b0cH
	jmp	??1Vote@Battlefield@@QAE@XZ
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 23368				; 00005b48H
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	push	OFFSET ??1struct_player@Battlefield@@QAE@XZ
	push	64					; 00000040H
	push	108					; 0000006cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 23392				; 00005b60H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T153403[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T153411[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T153427[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T153422[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T153492[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0game@Battlefield@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::game::game
PUBLIC	__$ArrayPad$
PUBLIC	?updateBanlist@game@Battlefield@@QAEXXZ		; Battlefield::game::updateBanlist
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?updateBanlist@game@Battlefield@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$4
	DD	03H
	DD	FLAT:__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$5
	DD	04H
	DD	FLAT:__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$6
__ehfuncinfo$?updateBanlist@game@Battlefield@@QAEXXZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?updateBanlist@game@Battlefield@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?updateBanlist@game@Battlefield@@QAEXXZ
_TEXT	SEGMENT
tv231 = -144						; size = 4
tv228 = -140						; size = 4
tv65 = -136						; size = 4
tv225 = -132						; size = 4
tv69 = -128						; size = 4
tv222 = -124						; size = 4
tv95 = -120						; size = 4
tv218 = -116						; size = 4
_this$ = -112						; size = 4
$T373889 = -108						; size = 4
$T373888 = -104						; size = 4
$T373887 = -100						; size = 4
$T373886 = -96						; size = 4
$T373885 = -92						; size = 4
$T373884 = -88						; size = 4
$T373883 = -84						; size = 4
_it$156314 = -80					; size = 4
_banlist$ = -76						; size = 16
_cmd$ = -60						; size = 16
$T155901 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?updateBanlist@game@Battlefield@@QAEXXZ PROC		; Battlefield::game::updateBanlist, COMDAT
; _this$ = ecx
; Line 1201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?updateBanlist@game@Battlefield@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1207
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1208
	push	OFFSET $SG-641
	lea	ecx, DWORD PTR $T155901[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T155901[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T155901[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 1209
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	DWORD PTR $T373883[ebp], esp
	lea	edx, DWORD PTR _cmd$[ebp]
	push	edx
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	DWORD PTR tv218[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
; Line 1210
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 1212
	lea	eax, DWORD PTR _banlist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+21432]
	call	?banlist@SQLite@Database@@QAE?AV?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@XZ ; Database::SQLite::banlist
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1213
	lea	edx, DWORD PTR $T373884[ebp]
	push	edx
	lea	ecx, DWORD PTR _banlist$[ebp]
	call	?begin@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _it$156314[ebp], eax
	jmp	SHORT $LN3@updateBanl
$LN2@updateBanl:
	lea	ecx, DWORD PTR _it$156314[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator++
$LN3@updateBanl:
	lea	ecx, DWORD PTR $T373885[ebp]
	push	ecx
	lea	ecx, DWORD PTR _banlist$[ebp]
	call	?end@?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@2@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::end
	push	eax
	lea	ecx, DWORD PTR _it$156314[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN1@updateBanl
; Line 1214
	push	0
	lea	ecx, DWORD PTR _it$156314[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
	add	eax, 60					; 0000003cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373886[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv95[ebp], eax
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR tv222[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373887[ebp], esp
	push	OFFSET $SG-642
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv225[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _it$156314[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
	add	eax, 32					; 00000020H
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373888[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv228[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _it$156314[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@@std@@QBEABUban@Database@@XZ ; std::_Vector_const_iterator<std::_Vector_val<Database::ban,std::allocator<Database::ban> > >::operator*
	add	eax, 4
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T373889[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv231[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?player_ban@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@000_N@Z ; Battlefield::game::player_ban
	jmp	$LN2@updateBanl
$LN1@updateBanl:
; Line 1219
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _banlist$[ebp]
	call	??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$0:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T155901[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$3:
	lea	ecx, DWORD PTR _banlist$[ebp]
	jmp	??1?$vector@Uban@Database@@V?$allocator@Uban@Database@@@std@@@std@@QAE@XZ ; std::vector<Database::ban,std::allocator<Database::ban> >::~vector<Database::ban,std::allocator<Database::ban> >
__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$4:
	mov	ecx, DWORD PTR $T373886[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$5:
	mov	ecx, DWORD PTR $T373887[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?updateBanlist@game@Battlefield@@QAEXXZ$6:
	mov	ecx, DWORD PTR $T373888[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?updateBanlist@game@Battlefield@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?updateBanlist@game@Battlefield@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?updateBanlist@game@Battlefield@@QAEXXZ ENDP		; Battlefield::game::updateBanlist
; Function compile flags: /Odtp
;	COMDAT ??__Esa@dlib@@YAXXZ
text$yc	SEGMENT
$T374754 = -1						; size = 1
??__Esa@dlib@@YAXXZ PROC				; dlib::`dynamic initializer for 'sa'', COMDAT
; File e:\library\dlib\dlib\string\string.h
; Line 488
	push	ebp
	mov	ebp, esp
	push	ecx
	xor	eax, eax
	mov	BYTE PTR $T374754[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Esa@dlib@@YAXXZ ENDP				; dlib::`dynamic initializer for 'sa''
_sa	DB	01H DUP (?)
CRT$XCU	SEGMENT
_sa$initializer$ DD FLAT:??__Esa@dlib@@YAXXZ
CRT$XCU	ENDS
END
