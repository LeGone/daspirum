; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Work\daspirum\Source\src\vote.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@XZ ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>
PUBLIC	??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@ABV01@@Z ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>
PUBLIC	??0?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_Vote@Battlefield@@@1@@Z ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
PUBLIC	??0?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
PUBLIC	?begin@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::begin
PUBLIC	?end@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::end
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
PUBLIC	?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Make_iter
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Compat
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator!=
PUBLIC	??4struct_Vote@Battlefield@@QAEAAU01@ABU01@@Z	; Battlefield::struct_Vote::operator=
PUBLIC	??$move@AAUstruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ; std::move<Battlefield::struct_Vote &>
PUBLIC	??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>
PUBLIC	??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00@Z ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>
PUBLIC	?erase@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::erase
PUBLIC	?clear@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::clear
PUBLIC	??0struct_Vote@Battlefield@@QAE@XZ		; Battlefield::struct_Vote::struct_Vote
PUBLIC	?_Xran@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xran
PUBLIC	?at@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEAAUstruct_Vote@Battlefield@@I@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::at
PUBLIC	?_Inside@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBE_NPBUstruct_Vote@Battlefield@@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Inside
PUBLIC	??$_Allocate@Ustruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@IPAU12@@Z ; std::_Allocate<Battlefield::struct_Vote>
PUBLIC	?allocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEPAUstruct_Vote@Battlefield@@I@Z ; std::allocator<Battlefield::struct_Vote>::allocate
PUBLIC	??$_Val_type@PAUstruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@@Z ; std::_Val_type<Battlefield::struct_Vote *>
PUBLIC	?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z ; std::allocator<Battlefield::struct_Vote>::construct
PUBLIC	??$forward@Ustruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ; std::forward<Battlefield::struct_Vote>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@U34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote>
PUBLIC	??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
PUBLIC	??$_Uninitialized_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z ; std::_Uninitialized_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote> >
PUBLIC	??$_Umove@PAUstruct_Vote@Battlefield@@@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEPAUstruct_Vote@Battlefield@@PAU23@00@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Umove<Battlefield::struct_Vote *>
PUBLIC	?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::reserve
PUBLIC	?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
PUBLIC	?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::capacity
PUBLIC	?max_size@?$allocator@Ustruct_Vote@Battlefield@@@std@@QBEIXZ ; std::allocator<Battlefield::struct_Vote>::max_size
PUBLIC	?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::max_size
PUBLIC	?_Grow_to@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEII@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Grow_to
PUBLIC	?_Xlen@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xlen
PUBLIC	?_Reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXI@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Reserve
PUBLIC	?_Orphan_range@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Orphan_range
PUBLIC	??$addressof@$$CBUstruct_Vote@Battlefield@@@std@@YAPBUstruct_Vote@Battlefield@@ABU12@@Z ; std::addressof<Battlefield::struct_Vote const >
PUBLIC	??$forward@AAUstruct_Vote@Battlefield@@@std@@YAAAUstruct_Vote@Battlefield@@AAU12@@Z ; std::forward<Battlefield::struct_Vote &>
PUBLIC	??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z ; std::allocator<Battlefield::struct_Vote>::construct<Battlefield::struct_Vote &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@AAU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@AAU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote &>
PUBLIC	??0struct_Vote@Battlefield@@QAE@ABU01@@Z	; Battlefield::struct_Vote::struct_Vote
PUBLIC	??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z ; std::_Construct<Battlefield::struct_Vote,Battlefield::struct_Vote const &>
PUBLIC	?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@ABU34@@Z ; std::allocator<Battlefield::struct_Vote>::construct
PUBLIC	??$forward@ABUstruct_Vote@Battlefield@@@std@@YAABUstruct_Vote@Battlefield@@ABU12@@Z ; std::forward<Battlefield::struct_Vote const &>
PUBLIC	??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@ABU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote const &>
PUBLIC	?push_back@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXABUstruct_Vote@Battlefield@@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::push_back
$SG-89000 DB	00H
$SG-89003 DB	00H
$SG-89008 DB	00H
$SG-89011 DB	00H
$SG-89001 DB	'all', 00H
$SG-89002 DB	'Unable to start a vote! Already active.', 00H
$SG-89004 DB	'all', 00H
$SG-89005 DB	' has been started', 00H
$SG-89006 DB	'A vote to kick ', 00H
$SG-89007 DB	'Vote-kicked!', 00H
$SG-89009 DB	'all', 00H
$SG-89010 DB	'Vote canceled! To less yes-votes.', 00H
$SG-89012 DB	'all', 00H
$SG-89013 DB	'Vote canceled! To less voters.', 00H
$SG-89014 DB	'player', 00H
$SG-89015 DB	'No active votes!', 00H
$SG-89016 DB	'player', 00H
$SG-89017 DB	'Already voted!', 00H
$SG-89018 DB	'player', 00H
$SG-89019 DB	'Successfully voted!', 00H
$SG-89064 DB	'.', 0aH, 00H
$SG-89065 DB	0aH, 0aH, 'Error detected at line ', 00H
$SG-89066 DB	'.', 0aH, 00H
$SG-89067 DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-89068 DB	'Error detected in file ', 00H
$SG-89069 DB	'.', 0aH, 0aH, 00H
$SG-89071 DB	'Error detected in function ', 00H
$SG-89070 DB	'void __thiscall dlib::set_kernel_c<class dlib::set_kerne'
	DB	'l_1<unsigned long,class dlib::binary_search_tree_kernel_2<uns'
	DB	'igned long,char,class dlib::memory_manager_kernel_2<char,100>'
	DB	',struct std::less<unsigned long> >,class dlib::memory_manager'
	DB	'_kernel_2<char,100> > >::remove_any(unsigned long &)', 00H
$SG-89072 DB	'.', 0aH, 00H
$SG-89073 DB	'this->size() != 0', 00H
$SG-89074 DB	'Failing expression was ', 00H
$SG-89075 DB	0aH, 00H
$SG-89076 DB	0aH, 09H, 'this: ', 00H
$SG-89077 DB	0aH, 09H, 'size must be greater than zero if an item is t'
	DB	'o be removed', 00H
$SG-89078 DB	09H, 'void set::remove_any', 00H
$SG-89079 DB	'.', 0aH, 00H
$SG-89080 DB	0aH, 0aH, 'Error detected at line ', 00H
$SG-89081 DB	'.', 0aH, 00H
$SG-89082 DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-89083 DB	'Error detected in file ', 00H
$SG-89084 DB	'.', 0aH, 0aH, 00H
$SG-89086 DB	'Error detected in function ', 00H
$SG-89085 DB	'const unsigned long &__thiscall dlib::set_kernel_c<class'
	DB	' dlib::set_kernel_1<unsigned long,class dlib::binary_search_t'
	DB	'ree_kernel_2<unsigned long,char,class dlib::memory_manager_ke'
	DB	'rnel_2<char,100>,struct std::less<unsigned long> >,class dlib'
	DB	'::memory_manager_kernel_2<char,100> > >::element(void) const', 00H
$SG-89087 DB	'.', 0aH, 00H
$SG-89088 DB	'this->current_element_valid() == true', 00H
$SG-89089 DB	'Failing expression was ', 00H
$SG-89090 DB	0aH, 00H
$SG-89091 DB	0aH, 09H, 'this: ', 00H
$SG-89092 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
$SG-89093 DB	09H, 'const T& set::element() const', 00H
$SG-89094 DB	'.', 0aH, 00H
$SG-89095 DB	0aH, 0aH, 'Error detected at line ', 00H
$SG-89096 DB	'.', 0aH, 00H
$SG-89097 DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-89098 DB	'Error detected in file ', 00H
$SG-89099 DB	'.', 0aH, 0aH, 00H
$SG-89101 DB	'Error detected in function ', 00H
$SG-89100 DB	'const unsigned long &__thiscall dlib::set_kernel_c<class'
	DB	' dlib::set_kernel_1<unsigned long,class dlib::binary_search_t'
	DB	'ree_kernel_2<unsigned long,char,class dlib::memory_manager_ke'
	DB	'rnel_2<char,100>,struct std::less<unsigned long> >,class dlib'
	DB	'::memory_manager_kernel_2<char,100> > >::element(void)', 00H
$SG-89102 DB	'.', 0aH, 00H
$SG-89103 DB	'this->current_element_valid() == true', 00H
$SG-89104 DB	'Failing expression was ', 00H
$SG-89105 DB	0aH, 00H
$SG-89106 DB	0aH, 09H, 'this: ', 00H
$SG-89107 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
$SG-89108 DB	09H, 'const T& set::element', 00H
$SG-89109 DB	'.', 0aH, 00H
$SG-89110 DB	0aH, 0aH, 'Error detected at line ', 00H
$SG-89111 DB	'.', 0aH, 00H
$SG-89114 DB	'.', 0aH, 0aH, 00H
$SG-89112 DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
$SG-89113 DB	'Error detected in file ', 00H
$SG-89115 DB	'void __thiscall dlib::binary_search_tree_kernel_c<class '
	DB	'dlib::binary_search_tree_kernel_2<unsigned long,class dlib::m'
	DB	'ember_function_pointer<void,void,void,void>,class dlib::memor'
	DB	'y_manager_kernel_2<char,10>,struct std::less<unsigned long> >'
	DB	' >::remove_any(unsigned long &,class dlib::member_function_po'
	DB	'inter<void,void,void,void> &)', 00H
$SG-89116 DB	'Error detected in function ', 00H
$SG-89117 DB	'.', 0aH, 00H
$SG-89120 DB	0aH, 00H
$SG-89118 DB	'this->size() != 0 && (static_cast<const void*>(&d) != st'
	DB	'atic_cast<void*>(&r))', 00H
$SG-89119 DB	'Failing expression was ', 00H
$SG-89121 DB	0aH, 09H, '&r:   ', 00H
$SG-89122 DB	0aH, 09H, '&d:   ', 00H
$SG-89123 DB	0aH, 09H, 'this: ', 00H
$SG-89124 DB	0aH, 09H, 'tree must not be empty if something is going t'
	DB	'o be removed', 00H
$SG-89125 DB	09H, 'void binary_search_tree::remove_any', 00H
$SG-89126 DB	'.', 0aH, 00H
$SG-89127 DB	0aH, 0aH, 'Error detected at line ', 00H
$SG-89128 DB	'.', 0aH, 00H
$SG-89129 DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
$SG-89130 DB	'Error detected in file ', 00H
$SG-89131 DB	'.', 0aH, 0aH, 00H
$SG-89133 DB	'Error detected in function ', 00H
$SG-89132 DB	'class dlib::map_pair<unsigned long,class dlib::member_fu'
	DB	'nction_pointer<void,void,void,void> > &__thiscall dlib::binar'
	DB	'y_search_tree_kernel_c<class dlib::binary_search_tree_kernel_'
	DB	'2<unsigned long,class dlib::member_function_pointer<void,void'
	DB	',void,void>,class dlib::memory_manager_kernel_2<char,10>,stru'
	DB	'ct std::less<unsigned long> > >::element(void)', 00H
$SG-89134 DB	'.', 0aH, 00H
$SG-89135 DB	'this->current_element_valid() == true', 00H
$SG-89136 DB	'Failing expression was ', 00H
$SG-89137 DB	0aH, 00H
$SG-89138 DB	0aH, 09H, 'this: ', 00H
$SG-89139 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
$SG-89140 DB	09H, 'map_pair<domain,range>& binary_search_tree::element'
	DB	'()', 00H
$SG-89141 DB	'.', 0aH, 00H
$SG-89142 DB	0aH, 0aH, 'Error detected at line ', 00H
$SG-89143 DB	'.', 0aH, 00H
$SG-89144 DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
$SG-89145 DB	'Error detected in file ', 00H
$SG-89146 DB	'.', 0aH, 0aH, 00H
$SG-89148 DB	'Error detected in function ', 00H
$SG-89147 DB	'const class dlib::map_pair<unsigned long,class dlib::mem'
	DB	'ber_function_pointer<void,void,void,void> > &__thiscall dlib:'
	DB	':binary_search_tree_kernel_c<class dlib::binary_search_tree_k'
	DB	'ernel_2<unsigned long,class dlib::member_function_pointer<voi'
	DB	'd,void,void,void>,class dlib::memory_manager_kernel_2<char,10'
	DB	'>,struct std::less<unsigned long> > >::element(void) const', 00H
$SG-89149 DB	'.', 0aH, 00H
$SG-89150 DB	'this->current_element_valid() == true', 00H
$SG-89151 DB	'Failing expression was ', 00H
$SG-89152 DB	0aH, 00H
	ORG $+2
$SG-89153 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-89154 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-89155 DB	09H, 'const map_pair<domain,range>& binary_search_tree::e'
	DB	'lement() const', 00H
; Function compile flags: /Odtp
;	COMDAT ??$forward@Ustruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Ustruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z PROC ; std::forward<Battlefield::struct_Vote>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@Ustruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ENDP ; std::forward<Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Val_type@PAUstruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUstruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@@Z PROC ; std::_Val_type<Battlefield::struct_Vote *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	xor	eax, eax
; Line 803
	pop	ebp
	ret	0
??$_Val_type@PAUstruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@@Z ENDP ; std::_Val_type<Battlefield::struct_Vote *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$move@AAUstruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUstruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z PROC ; std::move<Battlefield::struct_Vote &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
; Line 86
	push	ebp
	mov	ebp, esp
; Line 87
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 88
	pop	ebp
	ret	0
??$move@AAUstruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ENDP ; std::move<Battlefield::struct_Vote &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@ABUstruct_Vote@Battlefield@@@std@@YAABUstruct_Vote@Battlefield@@ABU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUstruct_Vote@Battlefield@@@std@@YAABUstruct_Vote@Battlefield@@ABU12@@Z PROC ; std::forward<Battlefield::struct_Vote const &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@ABUstruct_Vote@Battlefield@@@std@@YAABUstruct_Vote@Battlefield@@ABU12@@Z ENDP ; std::forward<Battlefield::struct_Vote const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$forward@AAUstruct_Vote@Battlefield@@@std@@YAAAUstruct_Vote@Battlefield@@AAU12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUstruct_Vote@Battlefield@@@std@@YAAAUstruct_Vote@Battlefield@@AAU12@@Z PROC ; std::forward<Battlefield::struct_Vote &>, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
; Line 79
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 80
	pop	ebp
	ret	0
??$forward@AAUstruct_Vote@Battlefield@@@std@@YAAAUstruct_Vote@Battlefield@@AAU12@@Z ENDP ; std::forward<Battlefield::struct_Vote &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$addressof@$$CBUstruct_Vote@Battlefield@@@std@@YAPBUstruct_Vote@Battlefield@@ABU12@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUstruct_Vote@Battlefield@@@std@@YAPBUstruct_Vote@Battlefield@@ABU12@@Z PROC ; std::addressof<Battlefield::struct_Vote const >, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 110
	push	ebp
	mov	ebp, esp
; Line 111
	mov	eax, DWORD PTR __Val$[ebp]
; Line 112
	pop	ebp
	ret	0
??$addressof@$$CBUstruct_Vote@Battlefield@@@std@@YAPBUstruct_Vote@Battlefield@@ABU12@@Z ENDP ; std::addressof<Battlefield::struct_Vote const >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Compat, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 252
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Compat
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator==, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Compat
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	al, cl
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@Ustruct_Vote@Battlefield@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@Ustruct_Vote@Battlefield@@@std@@QBEIXZ PROC ; std::allocator<Battlefield::struct_Vote>::max_size, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	DWORD PTR __Count$[ebp], 134217727	; 07ffffffH
; Line 219
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]
; Line 220
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@Ustruct_Vote@Battlefield@@@std@@QBEIXZ ENDP ; std::allocator<Battlefield::struct_Vote>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator!=, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@ABV01@@Z PROC ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xlen, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1427
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
$LN2@Xlen:
; Line 1428
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xlen
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::max_size, COMDAT
; _this$ = ecx
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?max_size@?$allocator@Ustruct_Vote@Battlefield@@@std@@QBEIXZ ; std::allocator<Battlefield::struct_Vote>::max_size
; Line 885
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::capacity, COMDAT
; _this$ = ecx
; Line 776
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 5
; Line 778
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::capacity
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@XZ PROC ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@XZ ENDP ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_Vote@Battlefield@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 1
??0?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_Vote@Battlefield@@@1@@Z PROC ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 426
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@ABV01@@Z ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 428
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_Vote@Battlefield@@@1@@Z ENDP ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Orphan_range@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXPAUstruct_Vote@Battlefield@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXPAUstruct_Vote@Battlefield@@0@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Orphan_range, COMDAT
; _this$ = ecx
; Line 1453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1454
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXPAUstruct_Vote@Battlefield@@0@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Orphan_range
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xran, COMDAT
; _this$ = ecx
; Line 1431
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1432
	push	OFFSET ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
$LN2@Xran:
; Line 1433
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xran
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inside@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBE_NPBUstruct_Vote@Battlefield@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBE_NPBUstruct_Vote@Battlefield@@@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Inside, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1287
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBE_NPBUstruct_Vote@Battlefield@@@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Inside
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 5
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
; Function compile flags: /Odtp
;	COMDAT ??$_Allocate@Ustruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@IPAU12@@Z
_TEXT	SEGMENT
$T355751 = -16						; size = 12
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@Ustruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@IPAU12@@Z PROC ; std::_Allocate<Battlefield::struct_Vote>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 31
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 33
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN4@Allocate
; Line 34
	mov	DWORD PTR __Count$[ebp], 0
; Line 35
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 36
	cmp	DWORD PTR __Count$[ebp], 134217727	; 07ffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 5
	push	eax
	call	DWORD PTR __imp_??2@YAPAXI@Z
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 37
	push	0
	lea	ecx, DWORD PTR $T355751[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	ecx, DWORD PTR $T355751[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Allocate:
; Line 39
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@Ustruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@IPAU12@@Z ENDP ; std::_Allocate<Battlefield::struct_Vote>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 46
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEPAUstruct_Vote@Battlefield@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEPAUstruct_Vote@Battlefield@@I@Z PROC ; std::allocator<Battlefield::struct_Vote>::allocate, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 187
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@Ustruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@IPAU12@@Z ; std::_Allocate<Battlefield::struct_Vote>
	add	esp, 8
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEPAUstruct_Vote@Battlefield@@I@Z ENDP ; std::allocator<Battlefield::struct_Vote>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Grow_to@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
_this$ = -8						; size = 4
__Capacity$ = -4					; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEII@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Grow_to, COMDAT
; _this$ = ecx
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1279
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1280
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1281
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEII@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Grow_to
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Make_iter, COMDAT
; _this$ = ecx
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 803
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::end, COMDAT
; _this$ = ecx
; Line 791
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 793
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::begin, COMDAT
; _this$ = ecx
; Line 781
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QAE@PAUstruct_Vote@Battlefield@@PBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::_Vector_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 783
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?at@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEAAUstruct_Vote@Battlefield@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
?at@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEAAUstruct_Vote@Battlefield@@I@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::at, COMDAT
; _this$ = ecx
; Line 905
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 906
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	SHORT $LN1@at@2
; Line 907
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xran
$LN1@at@2:
; Line 908
	mov	eax, DWORD PTR __Pos$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
$LN3@at@2:
; Line 909
	mov	esp, ebp
	pop	ebp
	ret	4
?at@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEAAUstruct_Vote@Battlefield@@I@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::at
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T355772 = -4						; size = 4
??0?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >, COMDAT
; _this$ = ecx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T355772[ebp], esp
	call	??0?$allocator@Ustruct_Vote@Battlefield@@@std@@QAE@XZ ; std::allocator<Battlefield::struct_Vote>::allocator<Battlefield::struct_Vote>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@V?$allocator@Ustruct_Vote@Battlefield@@@1@@Z ; std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
;	COMDAT ??0struct_Vote@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_Vote@Battlefield@@QAE@XZ PROC			; Battlefield::struct_Vote::struct_Vote, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_Vote@Battlefield@@QAE@XZ ENDP			; Battlefield::struct_Vote::struct_Vote
; Function compile flags: /Odtp
;	COMDAT ??4struct_Vote@Battlefield@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4struct_Vote@Battlefield@@QAEAAU01@ABU01@@Z PROC	; Battlefield::struct_Vote::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+28]
	mov	BYTE PTR [ecx+28], al
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??4struct_Vote@Battlefield@@QAEAAU01@ABU01@@Z ENDP	; Battlefield::struct_Vote::operator=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0struct_Vote@Battlefield@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0struct_Vote@Battlefield@@QAE@ABU01@@Z PROC		; Battlefield::struct_Vote::struct_Vote, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+28]
	mov	BYTE PTR [ecx+28], al
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0struct_Vote@Battlefield@@QAE@ABU01@@Z ENDP		; Battlefield::struct_Vote::struct_Vote
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z$0
__ehfuncinfo$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
$T360933 = -24						; size = 4
$T360932 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z PROC ; std::_Construct<Battlefield::struct_Vote,Battlefield::struct_Vote const &>, COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 47
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 48
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T360933[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T360933[ebp], 0
	je	SHORT $LN3@Construct@2
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$forward@ABUstruct_Vote@Battlefield@@@std@@YAABUstruct_Vote@Battlefield@@ABU12@@Z ; std::forward<Battlefield::struct_Vote const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T360933[ebp]
	call	??0struct_Vote@Battlefield@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@Construct@2
$LN3@Construct@2:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Construct@2:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T360932[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T360933[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z ENDP ; std::_Construct<Battlefield::struct_Vote,Battlefield::struct_Vote const &>
; Function compile flags: /Odtp
;	COMDAT ??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2524
	push	ebp
	mov	ebp, esp
; Line 2525
	jmp	SHORT $LN3@Move
$LN2@Move:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Move:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Move
; Line 2526
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$move@AAUstruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ; std::move<Battlefield::struct_Vote &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4struct_Vote@Battlefield@@QAEAAU01@ABU01@@Z
	jmp	SHORT $LN2@Move
$LN1@Move:
; Line 2527
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2528
	pop	ebp
	ret	0
??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z$0
__ehfuncinfo$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T360948 = -20						; size = 4
$T360947 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z PROC ; std::allocator<Battlefield::struct_Vote>::construct<Battlefield::struct_Vote &>, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T360948[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T360948[ebp], 0
	je	SHORT $LN3@construct@5
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@AAUstruct_Vote@Battlefield@@@std@@YAAAUstruct_Vote@Battlefield@@AAU12@@Z ; std::forward<Battlefield::struct_Vote &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T360948[ebp]
	call	??0struct_Vote@Battlefield@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@5
$LN3@construct@5:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@5:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T360947[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 209
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T360948[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z ENDP ; std::allocator<Battlefield::struct_Vote>::construct<Battlefield::struct_Vote &>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@ABU34@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@ABU34@@Z PROC ; std::allocator<Battlefield::struct_Vote>::construct, COMDAT
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 197
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@Ustruct_Vote@Battlefield@@ABU12@@std@@YAXPAUstruct_Vote@Battlefield@@ABU12@@Z ; std::_Construct<Battlefield::struct_Vote,Battlefield::struct_Vote const &>
	add	esp, 8
; Line 198
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@ABU34@@Z ENDP ; std::allocator<Battlefield::struct_Vote>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00@Z
_TEXT	SEGMENT
$T360962 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00@Z PROC ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
; Line 2545
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2547
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z ; std::_Ptr_cat<Battlefield::struct_Vote,Battlefield::struct_Vote>
	add	esp, 8
	mov	BYTE PTR $T360962[ebp], al
	movzx	edx, BYTE PTR $T360962[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>
	add	esp, 16					; 00000010H
; Line 2548
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00@Z ENDP ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@ABU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@ABU23@@Z PROC ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote const &>, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@ABUstruct_Vote@Battlefield@@@std@@YAABUstruct_Vote@Battlefield@@ABU12@@Z ; std::forward<Battlefield::struct_Vote const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@ABU34@@Z ; std::allocator<Battlefield::struct_Vote>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@ABU23@@Z ENDP ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@AAU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@AAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@AAU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@AAU23@@Z PROC ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote &>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@AAUstruct_Vote@Battlefield@@@std@@YAAAUstruct_Vote@Battlefield@@AAU12@@Z ; std::forward<Battlefield::struct_Vote &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	??$construct@AAUstruct_Vote@Battlefield@@@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@AAU23@@Z ; std::allocator<Battlefield::struct_Vote>::construct<Battlefield::struct_Vote &>
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@AAU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@AAU23@@Z ENDP ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T360969 = -16						; size = 4
__Ptr$158262 = -12					; size = 4
__Last$ = -8						; size = 4
__First$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 4
__Last_arg$ = 16					; size = 4
?erase@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@0@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::erase, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR __First_arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Make_iter
; Line 1192
	mov	edx, DWORD PTR __Last_arg$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Make_iter
; Line 1194
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase@5
; Line 1207
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Move@PAUstruct_Vote@Battlefield@@PAU12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00@Z ; std::_Move<Battlefield::struct_Vote *,Battlefield::struct_Vote *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$158262[ebp], eax
; Line 1210
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Ptr$158262[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Destroy
; Line 1211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$158262[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@erase@5:
; Line 1213
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR $T360969[ebp], eax
	mov	ecx, DWORD PTR $T360969[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1214
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@0@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?clear@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T360976 = -20						; size = 4
$T360975 = -16						; size = 4
$T360974 = -12						; size = 4
$T360973 = -8						; size = 4
$T360972 = -4						; size = 4
?clear@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXXZ PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::clear, COMDAT
; _this$ = ecx
; Line 1217
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1218
	lea	eax, DWORD PTR $T360973[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::end
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T360972[ebp], ecx
	lea	edx, DWORD PTR $T360975[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::begin
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T360974[ebp], eax
	mov	ecx, DWORD PTR $T360972[ebp]
	push	ecx
	mov	edx, DWORD PTR $T360974[ebp]
	push	edx
	lea	eax, DWORD PTR $T360976[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@@2@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::erase
; Line 1219
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXXZ ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::clear
_TEXT	ENDS
PUBLIC	??0Vote@Battlefield@@QAE@XZ			; Battlefield::Vote::Vote
; Function compile flags: /Odtp
;	COMDAT ??0Vote@Battlefield@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vote@Battlefield@@QAE@XZ PROC			; Battlefield::Vote::Vote, COMDAT
; _this$ = ecx
; File c:\work\daspirum\source\src\vote.cpp
; Line 10
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAE@XZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 12
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vote@Battlefield@@QAE@XZ ENDP			; Battlefield::Vote::Vote
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z$0
__ehfuncinfo$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z
_TEXT	SEGMENT
tv76 = -28						; size = 4
_this$ = -24						; size = 4
$T362633 = -20						; size = 4
$T362632 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z PROC ; std::allocator<Battlefield::struct_Vote>::construct, COMDAT
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	32					; 00000020H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T362633[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T362633[ebp], 0
	je	SHORT $LN3@construct@15
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$forward@Ustruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ; std::forward<Battlefield::struct_Vote>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T362633[ebp]
	call	??0struct_Vote@Battlefield@@QAE@ABU01@@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@construct@15
$LN3@construct@15:
	mov	DWORD PTR tv76[ebp], 0
$LN4@construct@15:
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T362632[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 203
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T362633[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z ENDP ; std::allocator<Battlefield::struct_Vote>::construct
; Function compile flags: /Odtp
;	COMDAT ??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@U34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@$$QAU23@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@U34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@$$QAU23@@Z PROC ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote>, COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
; Line 280
	mov	eax, DWORD PTR __Src$[ebp]
	push	eax
	call	??$forward@Ustruct_Vote@Battlefield@@@std@@YA$$QAUstruct_Vote@Battlefield@@AAU12@@Z ; std::forward<Battlefield::struct_Vote>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Pdest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Alval$[ebp]
	call	?construct@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@$$QAU34@@Z ; std::allocator<Battlefield::struct_Vote>::construct
; Line 281
	pop	ebp
	ret	0
??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@U34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@$$QAU23@@Z ENDP ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote>
_TEXT	ENDS
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
xdata$x	SEGMENT
__unwindtable$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>, COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 427
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 429
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 430
	jmp	SHORT $LN6@Uninit_mov@2
$LN5@Uninit_mov@2:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov@2:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov@2
; Line 431
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@U34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@$$QAU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@Uninit_mov@2
$LN4@Uninit_mov@2:
	jmp	SHORT $LN10@Uninit_mov@2
__catch$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 433
	jmp	SHORT $LN3@Uninit_mov@2
$LN2@Uninit_mov@2:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_mov@2:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov@2
; Line 434
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Dest_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@@Z ; std::_Dest_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
	add	esp, 8
	jmp	SHORT $LN2@Uninit_mov@2
$LN1@Uninit_mov@2:
; Line 435
	push	0
	push	0
	call	__CxxThrowException@8
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 437
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov@2:
; Line 438
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninitialized_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z
_TEXT	SEGMENT
$T362662 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z PROC ; std::_Uninitialized_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote> >, COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 471
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@Ustruct_Vote@Battlefield@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstruct_Vote@Battlefield@@0@Z ; std::_Ptr_cat<Battlefield::struct_Vote,Battlefield::struct_Vote>
	add	esp, 8
	mov	BYTE PTR $T362662[ebp], al
	movzx	edx, BYTE PTR $T362662[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUstruct_Vote@Battlefield@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@@Z ; std::_Val_type<Battlefield::struct_Vote *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@U12@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote>
	add	esp, 24					; 00000018H
; Line 472
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z ENDP ; std::_Uninitialized_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Umove@PAUstruct_Vote@Battlefield@@@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEPAUstruct_Vote@Battlefield@@PAU23@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUstruct_Vote@Battlefield@@@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEPAUstruct_Vote@Battlefield@@PAU23@00@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Umove<Battlefield::struct_Vote *>, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 1322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUstruct_Vote@Battlefield@@PAU12@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@YAPAUstruct_Vote@Battlefield@@PAU12@00AAV?$allocator@Ustruct_Vote@Battlefield@@@0@@Z ; std::_Uninitialized_move<Battlefield::struct_Vote *,Battlefield::struct_Vote *,std::allocator<Battlefield::struct_Vote> >
	add	esp, 16					; 00000010H
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAUstruct_Vote@Battlefield@@@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEPAUstruct_Vote@Battlefield@@PAU23@00@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Umove<Battlefield::struct_Vote *>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__catchsym$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z$0
__tryblocktable$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Size$159082 = -24					; size = 4
__Ptr$159075 = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::reserve, COMDAT
; _this$ = ecx
; Line 746
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::max_size
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN5@reserve@6
; Line 748
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xlen
	jmp	$LN7@reserve@6
$LN5@reserve@6:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN7@reserve@6
; Line 751
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEPAUstruct_Vote@Battlefield@@I@Z ; std::allocator<Battlefield::struct_Vote>::allocate
	mov	DWORD PTR __Ptr$159075[ebp], eax
; Line 753
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 754
	mov	ecx, DWORD PTR __Ptr$159075[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUstruct_Vote@Battlefield@@@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEPAUstruct_Vote@Battlefield@@PAU23@00@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Umove<Battlefield::struct_Vote *>
	jmp	SHORT $LN8@reserve@6
__catch$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z$0:
; Line 756
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$159075[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z ; std::allocator<Battlefield::struct_Vote>::deallocate
; Line 757
	push	0
	push	0
	call	__CxxThrowException@8
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z$1
	ret	0
$LN8@reserve@6:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z$1:
; Line 760
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
	mov	DWORD PTR __Size$159082[ebp], eax
; Line 761
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@reserve@6
; Line 763
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Destroy
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx]
	sar	eax, 5
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@Ustruct_Vote@Battlefield@@@std@@QAEXPAUstruct_Vote@Battlefield@@I@Z ; std::allocator<Battlefield::struct_Vote>::deallocate
$LN1@reserve@6:
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base0@std@@QAEXXZ
; Line 769
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 5
	add	eax, DWORD PTR __Ptr$159075[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 770
	mov	edx, DWORD PTR __Size$159082[ebp]
	shl	edx, 5
	add	edx, DWORD PTR __Ptr$159075[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 771
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$159075[ebp]
	mov	DWORD PTR [ecx], edx
$LN7@reserve@6:
; Line 773
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::reserve
; Function compile flags: /Odtp
;	COMDAT ?_Reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Size$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXI@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Reserve, COMDAT
; _this$ = ecx
; Line 1290
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1291
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1292
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::max_size
	sub	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Size$[ebp]
	jae	SHORT $LN4@Reserve@5
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Xlen
	jmp	SHORT $LN6@Reserve@5
$LN4@Reserve@5:
; Line 1294
	mov	eax, DWORD PTR __Size$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Size$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::capacity
	cmp	DWORD PTR __Size$[ebp], eax
	ja	SHORT $LN2@Reserve@5
; Line 1296
	jmp	SHORT $LN6@Reserve@5
$LN2@Reserve@5:
; Line 1297
	mov	ecx, DWORD PTR __Size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEII@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXI@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::reserve
$LN6@Reserve@5:
; Line 1298
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXI@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Reserve
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXABUstruct_Vote@Battlefield@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Idx$155657 = -4					; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXABUstruct_Vote@Battlefield@@@Z PROC ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::push_back, COMDAT
; _this$ = ecx
; Line 976
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 977
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUstruct_Vote@Battlefield@@@std@@YAPBUstruct_Vote@Battlefield@@ABU12@@Z ; std::addressof<Battlefield::struct_Vote const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBE_NPBUstruct_Vote@Battlefield@@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@push_back@6
; Line 979
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUstruct_Vote@Battlefield@@@std@@YAPBUstruct_Vote@Battlefield@@ABU12@@Z ; std::addressof<Battlefield::struct_Vote const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 5
	mov	DWORD PTR __Idx$155657[ebp], eax
; Line 980
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN3@push_back@6
; Line 981
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXI@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Reserve
$LN3@push_back@6:
; Line 982
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Orphan_range
; Line 985
	mov	eax, DWORD PTR __Idx$155657[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@AAU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@AAU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote &>
	add	esp, 12					; 0000000cH
; Line 986
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 988
	jmp	SHORT $LN5@push_back@6
$LN4@push_back@6:
; Line 990
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@push_back@6
; Line 991
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IAEXI@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Reserve
$LN1@push_back@6:
; Line 992
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@IBEXPAUstruct_Vote@Battlefield@@0@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::_Orphan_range
; Line 995
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	??$_Cons_val@V?$allocator@Ustruct_Vote@Battlefield@@@std@@Ustruct_Vote@Battlefield@@ABU34@@std@@YAXAAV?$allocator@Ustruct_Vote@Battlefield@@@0@PAUstruct_Vote@Battlefield@@ABU23@@Z ; std::_Cons_val<std::allocator<Battlefield::struct_Vote>,Battlefield::struct_Vote,Battlefield::struct_Vote const &>
	add	esp, 12					; 0000000cH
; Line 996
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 32					; 00000020H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@push_back@6:
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXABUstruct_Vote@Battlefield@@@Z ENDP ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::push_back
PUBLIC	__$ArrayPad$
PUBLIC	?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ; Battlefield::Vote::addVoter
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\vote.cpp
xdata$x	SEGMENT
__unwindtable$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$9
__ehfuncinfo$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
_TEXT	SEGMENT
tv275 = -156						; size = 4
tv272 = -152						; size = 4
tv283 = -148						; size = 4
tv269 = -144						; size = 4
tv199 = -140						; size = 4
tv265 = -136						; size = 4
tv262 = -132						; size = 4
tv281 = -128						; size = 4
tv259 = -124						; size = 4
tv280 = -120						; size = 4
tv256 = -116						; size = 4
tv253 = -112						; size = 4
tv278 = -108						; size = 4
tv250 = -104						; size = 4
tv277 = -100						; size = 4
_this$ = -96						; size = 4
$T367785 = -92						; size = 4
$T367784 = -88						; size = 4
$T367783 = -84						; size = 4
$T367782 = -80						; size = 4
$T367781 = -76						; size = 4
$T367780 = -72						; size = 4
$T367779 = -68						; size = 4
$T367778 = -64						; size = 4
$T367777 = -60						; size = 4
_i$152396 = -56						; size = 4
_voterCount$ = -52					; size = 4
_vote$ = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_voter$ = 8						; size = 28
_choice$ = 36						; size = 1
?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z PROC ; Battlefield::Vote::addVoter, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 144				; 00000090H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN5@addVoter
; Line 84
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367777[ebp], esp
	lea	edx, DWORD PTR _voter$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv277[ebp], eax
	mov	eax, DWORD PTR tv277[ebp]
	mov	DWORD PTR tv250[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367778[ebp], esp
	push	OFFSET $SG-89014
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv278[ebp], eax
	mov	ecx, DWORD PTR tv278[ebp]
	mov	DWORD PTR tv253[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367779[ebp], esp
	push	OFFSET $SG-89015
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv256[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 85
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _voter$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN6@addVoter
$LN5@addVoter:
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
	mov	DWORD PTR _voterCount$[ebp], eax
; Line 89
	mov	DWORD PTR _i$152396[ebp], 0
	jmp	SHORT $LN4@addVoter
$LN3@addVoter:
	mov	eax, DWORD PTR _i$152396[ebp]
	add	eax, 1
	mov	DWORD PTR _i$152396[ebp], eax
$LN4@addVoter:
	mov	ecx, DWORD PTR _i$152396[ebp]
	cmp	ecx, DWORD PTR _voterCount$[ebp]
	jae	$LN2@addVoter
; Line 91
	lea	edx, DWORD PTR _voter$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$152396[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?at@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEAAUstruct_Vote@Battlefield@@I@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::at
	push	eax
	call	??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator==<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@addVoter
; Line 93
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367780[ebp], esp
	lea	edx, DWORD PTR _voter$[ebp]
	push	edx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv280[ebp], eax
	mov	eax, DWORD PTR tv280[ebp]
	mov	DWORD PTR tv259[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367781[ebp], esp
	push	OFFSET $SG-89016
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv281[ebp], eax
	mov	ecx, DWORD PTR tv281[ebp]
	mov	DWORD PTR tv262[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367782[ebp], esp
	push	OFFSET $SG-89017
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv265[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 94
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _voter$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	jmp	$LN6@addVoter
$LN1@addVoter:
; Line 96
	jmp	$LN3@addVoter
$LN2@addVoter:
; Line 98
	lea	ecx, DWORD PTR _vote$[ebp]
	call	??0struct_Vote@Battlefield@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 99
	lea	eax, DWORD PTR _voter$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vote$[ebp]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 100
	mov	cl, BYTE PTR _choice$[ebp]
	mov	BYTE PTR _vote$[ebp+28], cl
; Line 102
	lea	edx, DWORD PTR _vote$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?push_back@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXABUstruct_Vote@Battlefield@@@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::push_back
; Line 103
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367783[ebp], esp
	lea	eax, DWORD PTR _voter$[ebp]
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv199[ebp], eax
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv269[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367784[ebp], esp
	push	OFFSET $SG-89018
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv283[ebp], eax
	mov	edx, DWORD PTR tv283[ebp]
	mov	DWORD PTR tv272[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367785[ebp], esp
	push	OFFSET $SG-89019
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv275[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 104
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _vote$[ebp]
	call	??1struct_Vote@Battlefield@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _voter$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@addVoter:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$0:
	lea	ecx, DWORD PTR _voter$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$1:
	mov	ecx, DWORD PTR $T367777[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$2:
	mov	ecx, DWORD PTR $T367778[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$4:
	mov	ecx, DWORD PTR $T367780[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$5:
	mov	ecx, DWORD PTR $T367781[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$7:
	lea	ecx, DWORD PTR _vote$[ebp]
	jmp	??1struct_Vote@Battlefield@@QAE@XZ
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$8:
	mov	ecx, DWORD PTR $T367783[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z$9:
	mov	ecx, DWORD PTR $T367784[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addVoter@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@E@Z ENDP ; Battlefield::Vote::addVoter
PUBLIC	?finish@Vote@Battlefield@@QAEXXZ		; Battlefield::Vote::finish
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?finish@Vote@Battlefield@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$5
	DD	03H
	DD	FLAT:__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$6
__ehfuncinfo$?finish@Vote@Battlefield@@QAEXXZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?finish@Vote@Battlefield@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?finish@Vote@Battlefield@@QAEXXZ
_TEXT	SEGMENT
tv257 = -112						; size = 4
tv254 = -108						; size = 4
tv262 = -104						; size = 4
tv251 = -100						; size = 4
tv261 = -96						; size = 4
tv249 = -92						; size = 4
tv246 = -88						; size = 4
tv260 = -84						; size = 4
tv243 = -80						; size = 4
tv259 = -76						; size = 4
tv241 = -72						; size = 4
tv238 = -68						; size = 4
tv258 = -64						; size = 4
_this$ = -60						; size = 4
$T367812 = -56						; size = 4
$T367811 = -52						; size = 4
$T367810 = -48						; size = 4
$T367809 = -44						; size = 4
$T367808 = -40						; size = 4
$T367807 = -36						; size = 4
$T367806 = -32						; size = 4
$T367805 = -28						; size = 4
_i$152355 = -24						; size = 4
_yes$152351 = -18					; size = 1
_no$152352 = -17					; size = 1
_voterCount$152353 = -16				; size = 4
__$EHRec$ = -12						; size = 12
?finish@Vote@Battlefield@@QAEXXZ PROC			; Battlefield::Vote::finish, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?finish@Vote@Battlefield@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN10@finish
; Line 44
	mov	BYTE PTR _yes$152351[ebp], 0
	mov	BYTE PTR _no$152352[ebp], 0
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?size@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QBEIXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::size
	mov	DWORD PTR _voterCount$152353[ebp], eax
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	movzx	eax, BYTE PTR [edx+23384]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR _voterCount$152353[ebp], eax
	jle	$LN9@finish
; Line 49
	mov	DWORD PTR _i$152355[ebp], 0
	jmp	SHORT $LN8@finish
$LN7@finish:
	mov	eax, DWORD PTR _i$152355[ebp]
	add	eax, 1
	mov	DWORD PTR _i$152355[ebp], eax
$LN8@finish:
	mov	ecx, DWORD PTR _i$152355[ebp]
	cmp	ecx, DWORD PTR _voterCount$152353[ebp]
	jge	SHORT $LN6@finish
; Line 51
	mov	edx, DWORD PTR _i$152355[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?at@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEAAUstruct_Vote@Battlefield@@I@Z ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::at
	movzx	eax, BYTE PTR [eax+28]
	cmp	eax, 1
	jne	SHORT $LN5@finish
; Line 52
	mov	cl, BYTE PTR _yes$152351[ebp]
	add	cl, 1
	mov	BYTE PTR _yes$152351[ebp], cl
; Line 53
	jmp	SHORT $LN4@finish
$LN5@finish:
; Line 54
	mov	dl, BYTE PTR _no$152352[ebp]
	add	dl, 1
	mov	BYTE PTR _no$152352[ebp], dl
$LN4@finish:
; Line 55
	jmp	SHORT $LN7@finish
$LN6@finish:
; Line 57
	movzx	eax, BYTE PTR _yes$152351[ebp]
	movzx	ecx, BYTE PTR _no$152352[ebp]
	cmp	eax, ecx
	jle	SHORT $LN3@finish
; Line 58
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367805[ebp], esp
	push	OFFSET $SG-89007
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv258[ebp], eax
	mov	edx, DWORD PTR tv258[ebp]
	mov	DWORD PTR tv238[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367806[ebp], esp
	push	eax
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv241[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?player_kick@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Battlefield::game::player_kick
; Line 59
	jmp	SHORT $LN2@finish
$LN3@finish:
; Line 60
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367807[ebp], esp
	push	OFFSET $SG-89008
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv259[ebp], eax
	mov	edx, DWORD PTR tv259[ebp]
	mov	DWORD PTR tv243[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367808[ebp], esp
	push	OFFSET $SG-89009
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv260[ebp], eax
	mov	eax, DWORD PTR tv260[ebp]
	mov	DWORD PTR tv246[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367809[ebp], esp
	push	OFFSET $SG-89010
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv249[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN2@finish:
; Line 62
	jmp	SHORT $LN10@finish
$LN9@finish:
; Line 63
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367810[ebp], esp
	push	OFFSET $SG-89011
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv261[ebp], eax
	mov	edx, DWORD PTR tv261[ebp]
	mov	DWORD PTR tv251[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367811[ebp], esp
	push	OFFSET $SG-89012
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv262[ebp], eax
	mov	eax, DWORD PTR tv262[ebp]
	mov	DWORD PTR tv254[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367812[ebp], esp
	push	OFFSET $SG-89013
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv257[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
$LN10@finish:
; Line 66
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 0
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?clear@?$vector@Ustruct_Vote@Battlefield@@V?$allocator@Ustruct_Vote@Battlefield@@@std@@@std@@QAEXXZ ; std::vector<Battlefield::struct_Vote,std::allocator<Battlefield::struct_Vote> >::clear
; Line 68
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$0:
	mov	ecx, DWORD PTR $T367805[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$2:
	mov	ecx, DWORD PTR $T367807[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$3:
	mov	ecx, DWORD PTR $T367808[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$5:
	mov	ecx, DWORD PTR $T367810[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?finish@Vote@Battlefield@@QAEXXZ$6:
	mov	ecx, DWORD PTR $T367811[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?finish@Vote@Battlefield@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?finish@Vote@Battlefield@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?finish@Vote@Battlefield@@QAEXXZ ENDP			; Battlefield::Vote::finish
PUBLIC	?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z ; Battlefield::Vote::start
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z$1
__ehfuncinfo$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z
_TEXT	SEGMENT
tv150 = -48						; size = 4
tv147 = -44						; size = 4
tv152 = -40						; size = 4
tv144 = -36						; size = 4
tv151 = -32						; size = 4
_this$ = -28						; size = 4
$T367831 = -24						; size = 4
$T367830 = -20						; size = 4
$T367829 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_typeOfVote$ = 8					; size = 4
?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z PROC ; Battlefield::Vote::start, COMDAT
; _this$ = ecx
; Line 15
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN1@start
; Line 18
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367829[ebp], esp
	push	OFFSET $SG-89000
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv151[ebp], eax
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv144[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367830[ebp], esp
	push	OFFSET $SG-89001
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv152[ebp], eax
	mov	eax, DWORD PTR tv152[ebp]
	mov	DWORD PTR tv147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T367831[ebp], esp
	push	OFFSET $SG-89002
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv150[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
; Line 19
	xor	al, al
	jmp	SHORT $LN2@start
$LN1@start:
; Line 22
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _typeOfVote$[ebp]
	mov	DWORD PTR [edx], eax
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 30			; 0000001eH
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 1
; Line 27
	mov	al, 1
$LN2@start:
; Line 28
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z$0:
	mov	ecx, DWORD PTR $T367829[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z$1:
	mov	ecx, DWORD PTR $T367830[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z ENDP ; Battlefield::Vote::start
PUBLIC	?think@Vote@Battlefield@@QAEXXZ			; Battlefield::Vote::think
; Function compile flags: /Odtp
;	COMDAT ?think@Vote@Battlefield@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?think@Vote@Battlefield@@QAEXXZ PROC			; Battlefield::Vote::think, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN2@think
; Line 73
	jmp	SHORT $LN3@think
$LN2@think:
; Line 75
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 76
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN3@think
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	call	?finish@Vote@Battlefield@@QAEXXZ	; Battlefield::Vote::finish
$LN3@think:
; Line 78
	mov	esp, ebp
	pop	ebp
	ret	0
?think@Vote@Battlefield@@QAEXXZ ENDP			; Battlefield::Vote::think
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Battlefield::Vote::startVoteKick
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
__ehfuncinfo$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
tv169 = -88						; size = 4
tv166 = -84						; size = 4
tv173 = -80						; size = 4
tv164 = -76						; size = 4
tv172 = -72						; size = 4
tv161 = -68						; size = 4
tv171 = -64						; size = 4
_this$ = -60						; size = 4
$T368512 = -56						; size = 4
$T368511 = -52						; size = 4
$T368510 = -48						; size = 4
$T152338 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_targetName$ = 8					; size = 28
?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Battlefield::Vote::startVoteKick, COMDAT
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR [ecx+23388]
	movzx	eax, BYTE PTR [edx+156]
	test	eax, eax
	je	$LN1@startVoteK
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?start@Vote@Battlefield@@QAE_NW4enum_TypeOfVote@2@@Z ; Battlefield::Vote::start
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@startVoteK
; Line 34
	lea	edx, DWORD PTR _targetName$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Line 36
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T368510[ebp], esp
	push	OFFSET $SG-89003
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv171[ebp], eax
	mov	eax, DWORD PTR tv171[ebp]
	mov	DWORD PTR tv161[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T368511[ebp], esp
	push	OFFSET $SG-89004
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv164[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	edx, DWORD PTR _targetName$[ebp]
	push	edx
	push	OFFSET $SG-89006
	lea	eax, DWORD PTR $T152338[ebp]
	push	eax
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR tv173[ebp]
	mov	DWORD PTR tv166[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T368512[ebp], esp
	push	OFFSET $SG-89005
	mov	eax, DWORD PTR tv166[ebp]
	push	eax
	push	edx
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@PBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+56]
	call	?say@game@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00@Z ; Battlefield::game::say
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T152338[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@startVoteK:
; Line 38
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _targetName$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _targetName$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	mov	ecx, DWORD PTR $T368510[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	mov	ecx, DWORD PTR $T368511[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T152338[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?startVoteKick@Vote@Battlefield@@QAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Battlefield::Vote::startVoteKick
END
