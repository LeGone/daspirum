; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Work\daspirum\Source\src\bf3_socket.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0noncopyable@noncopyable_@boost@@IAE@XZ	; boost::noncopyable_::noncopyable::noncopyable
PUBLIC	??0?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@PAVconnection@1@@Z ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
PUBLIC	??0struct_response@@QAE@XZ			; struct_response::struct_response
PUBLIC	??1noncopyable@noncopyable_@boost@@IAE@XZ	; boost::noncopyable_::noncopyable::~noncopyable
PUBLIC	??1?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::~scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
PUBLIC	??1struct_response@@QAE@XZ			; struct_response::~struct_response
PUBLIC	??_Gconnection@dlib@@QAEPAXI@Z			; dlib::connection::`scalar deleting destructor'
PUBLIC	??R?$default_deleter@Vconnection@dlib@@@dlib@@QBEXPAVconnection@1@@Z ; dlib::default_deleter<dlib::connection>::operator()
PUBLIC	?reset@?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAEXPAVconnection@2@@Z ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::reset
PUBLIC	??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?dec@std@@YAAAVios_base@1@AAV21@@Z		; std::dec
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
PUBLIC	?getPacketSize@bf3_socket@@IBEIXZ		; bf3_socket::getPacketSize
PUBLIC	?getUnsignedInt32@bf3_socket@@IBEIG@Z		; bf3_socket::getUnsignedInt32
EXTRN	_Sleep@4:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z:PROC
EXTRN	__imp_?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp__Sleep@4:PROC
$SG-8434 DB	00H
	ORG $+3
$SG-8435 DB	'Error while sending command!', 00H
	ORG $+3
$SG-8436 DB	'#000000', 00H
$SG-8437 DB	'Incoming Packetsize to huge!', 00H
	ORG $+3
$SG-8438 DB	'!=', 00H
	ORG $+1
$SG-8439 DB	'Error: Not received full packet ', 00H
	ORG $+3
$SG-8486 DB	'.', 0aH, 00H
	ORG $+1
$SG-8487 DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-8488 DB	'.', 0aH, 00H
	ORG $+1
$SG-8489 DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-8490 DB	'Error detected in file ', 00H
$SG-8491 DB	'.', 0aH, 0aH, 00H
$SG-8493 DB	'Error detected in function ', 00H
$SG-8492 DB	'void __thiscall dlib::set_kernel_c<class dlib::set_kerne'
	DB	'l_1<unsigned long,class dlib::binary_search_tree_kernel_2<uns'
	DB	'igned long,char,class dlib::memory_manager_kernel_2<char,100>'
	DB	',struct std::less<unsigned long> >,class dlib::memory_manager'
	DB	'_kernel_2<char,100> > >::remove_any(unsigned long &)', 00H
$SG-8494 DB	'.', 0aH, 00H
	ORG $+1
$SG-8495 DB	'this->size() != 0', 00H
	ORG $+2
$SG-8496 DB	'Failing expression was ', 00H
$SG-8497 DB	0aH, 00H
	ORG $+2
$SG-8498 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-8499 DB	0aH, 09H, 'size must be greater than zero if an item is t'
	DB	'o be removed', 00H
	ORG $+3
$SG-8500 DB	09H, 'void set::remove_any', 00H
	ORG $+2
$SG-8501 DB	'.', 0aH, 00H
	ORG $+1
$SG-8502 DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-8503 DB	'.', 0aH, 00H
	ORG $+1
$SG-8504 DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-8505 DB	'Error detected in file ', 00H
$SG-8506 DB	'.', 0aH, 0aH, 00H
$SG-8508 DB	'Error detected in function ', 00H
$SG-8507 DB	'const unsigned long &__thiscall dlib::set_kernel_c<class'
	DB	' dlib::set_kernel_1<unsigned long,class dlib::binary_search_t'
	DB	'ree_kernel_2<unsigned long,char,class dlib::memory_manager_ke'
	DB	'rnel_2<char,100>,struct std::less<unsigned long> >,class dlib'
	DB	'::memory_manager_kernel_2<char,100> > >::element(void) const', 00H
$SG-8509 DB	'.', 0aH, 00H
	ORG $+1
$SG-8510 DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-8511 DB	'Failing expression was ', 00H
$SG-8512 DB	0aH, 00H
	ORG $+2
$SG-8513 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-8514 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-8515 DB	09H, 'const T& set::element() const', 00H
	ORG $+1
$SG-8516 DB	'.', 0aH, 00H
	ORG $+1
$SG-8517 DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-8518 DB	'.', 0aH, 00H
	ORG $+1
$SG-8519 DB	'e:\library\dlib\dlib\set/set_kernel_c.h', 00H
$SG-8520 DB	'Error detected in file ', 00H
$SG-8521 DB	'.', 0aH, 0aH, 00H
$SG-8523 DB	'Error detected in function ', 00H
$SG-8522 DB	'const unsigned long &__thiscall dlib::set_kernel_c<class'
	DB	' dlib::set_kernel_1<unsigned long,class dlib::binary_search_t'
	DB	'ree_kernel_2<unsigned long,char,class dlib::memory_manager_ke'
	DB	'rnel_2<char,100>,struct std::less<unsigned long> >,class dlib'
	DB	'::memory_manager_kernel_2<char,100> > >::element(void)', 00H
	ORG $+2
$SG-8524 DB	'.', 0aH, 00H
	ORG $+1
$SG-8525 DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-8526 DB	'Failing expression was ', 00H
$SG-8527 DB	0aH, 00H
	ORG $+2
$SG-8528 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-8529 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-8530 DB	09H, 'const T& set::element', 00H
	ORG $+1
$SG-8531 DB	'.', 0aH, 00H
	ORG $+1
$SG-8532 DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-8533 DB	'.', 0aH, 00H
	ORG $+1
$SG-8535 DB	'Error detected in file ', 00H
$SG-8536 DB	'.', 0aH, 0aH, 00H
$SG-8534 DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
	ORG $+2
$SG-8537 DB	'void __thiscall dlib::binary_search_tree_kernel_c<class '
	DB	'dlib::binary_search_tree_kernel_2<unsigned long,class dlib::m'
	DB	'ember_function_pointer<void,void,void,void>,class dlib::memor'
	DB	'y_manager_kernel_2<char,10>,struct std::less<unsigned long> >'
	DB	' >::remove_any(unsigned long &,class dlib::member_function_po'
	DB	'inter<void,void,void,void> &)', 00H
	ORG $+2
$SG-8538 DB	'Error detected in function ', 00H
$SG-8539 DB	'.', 0aH, 00H
	ORG $+1
$SG-8541 DB	'Failing expression was ', 00H
$SG-8542 DB	0aH, 00H
	ORG $+2
$SG-8540 DB	'this->size() != 0 && (static_cast<const void*>(&d) != st'
	DB	'atic_cast<void*>(&r))', 00H
	ORG $+2
$SG-8543 DB	0aH, 09H, '&r:   ', 00H
	ORG $+3
$SG-8544 DB	0aH, 09H, '&d:   ', 00H
	ORG $+3
$SG-8545 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-8546 DB	0aH, 09H, 'tree must not be empty if something is going t'
	DB	'o be removed', 00H
	ORG $+3
$SG-8547 DB	09H, 'void binary_search_tree::remove_any', 00H
	ORG $+3
$SG-8548 DB	'.', 0aH, 00H
	ORG $+1
$SG-8549 DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-8550 DB	'.', 0aH, 00H
	ORG $+1
$SG-8551 DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
	ORG $+2
$SG-8552 DB	'Error detected in file ', 00H
$SG-8553 DB	'.', 0aH, 0aH, 00H
$SG-8555 DB	'Error detected in function ', 00H
$SG-8554 DB	'class dlib::map_pair<unsigned long,class dlib::member_fu'
	DB	'nction_pointer<void,void,void,void> > &__thiscall dlib::binar'
	DB	'y_search_tree_kernel_c<class dlib::binary_search_tree_kernel_'
	DB	'2<unsigned long,class dlib::member_function_pointer<void,void'
	DB	',void,void>,class dlib::memory_manager_kernel_2<char,10>,stru'
	DB	'ct std::less<unsigned long> > >::element(void)', 00H
	ORG $+1
$SG-8556 DB	'.', 0aH, 00H
	ORG $+1
$SG-8557 DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-8558 DB	'Failing expression was ', 00H
$SG-8559 DB	0aH, 00H
	ORG $+2
$SG-8560 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-8561 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-8562 DB	09H, 'map_pair<domain,range>& binary_search_tree::element'
	DB	'()', 00H
	ORG $+1
$SG-8563 DB	'.', 0aH, 00H
	ORG $+1
$SG-8564 DB	0aH, 0aH, 'Error detected at line ', 00H
	ORG $+2
$SG-8565 DB	'.', 0aH, 00H
	ORG $+1
$SG-8566 DB	'e:\library\dlib\dlib\binary_search_tree/binary_search_tr'
	DB	'ee_kernel_c.h', 00H
	ORG $+2
$SG-8567 DB	'Error detected in file ', 00H
$SG-8568 DB	'.', 0aH, 0aH, 00H
$SG-8570 DB	'Error detected in function ', 00H
$SG-8569 DB	'const class dlib::map_pair<unsigned long,class dlib::mem'
	DB	'ber_function_pointer<void,void,void,void> > &__thiscall dlib:'
	DB	':binary_search_tree_kernel_c<class dlib::binary_search_tree_k'
	DB	'ernel_2<unsigned long,class dlib::member_function_pointer<voi'
	DB	'd,void,void,void>,class dlib::memory_manager_kernel_2<char,10'
	DB	'>,struct std::less<unsigned long> > >::element(void) const', 00H
	ORG $+1
$SG-8571 DB	'.', 0aH, 00H
	ORG $+1
$SG-8572 DB	'this->current_element_valid() == true', 00H
	ORG $+2
$SG-8573 DB	'Failing expression was ', 00H
$SG-8574 DB	0aH, 00H
	ORG $+2
$SG-8575 DB	0aH, 09H, 'this: ', 00H
	ORG $+3
$SG-8576 DB	0aH, 09H, 'you can''t access the current element if it do'
	DB	'esn''t exist', 00H
	ORG $+1
$SG-8577 DB	09H, 'const map_pair<domain,range>& binary_search_tree::e'
	DB	'lement() const', 00H
; Function compile flags: /Odtp
;	COMDAT ??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ PROC ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\smart_pointers\scoped_ptr.h
; Line 89
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ENDP ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?getUnsignedInt32@bf3_socket@@IBEIG@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_offset$ = 8						; size = 2
?getUnsignedInt32@bf3_socket@@IBEIG@Z PROC		; bf3_socket::getUnsignedInt32, COMDAT
; _this$ = ecx
; File c:\work\daspirum\source\src\bf3_socket.hpp
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	movzx	eax, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [ecx+eax+1]
	movzx	edx, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+edx+2]
	shl	edx, 8
	or	eax, edx
	movzx	ecx, WORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [edx+ecx+3]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	movzx	edx, WORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+edx+4]
	shl	edx, 24					; 00000018H
	or	eax, edx
; Line 56
	mov	esp, ebp
	pop	ebp
	ret	4
?getUnsignedInt32@bf3_socket@@IBEIG@Z ENDP		; bf3_socket::getUnsignedInt32
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?getPacketSize@bf3_socket@@IBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?getPacketSize@bf3_socket@@IBEIXZ PROC			; bf3_socket::getPacketSize, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	movsx	eax, BYTE PTR [eax+5]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+6]
	and	edx, 255				; 000000ffH
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+7]
	and	edx, 255				; 000000ffH
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, BYTE PTR [ecx+8]
	and	edx, 255				; 000000ffH
	shl	edx, 24					; 00000018H
	or	eax, edx
; Line 51
	mov	esp, ebp
	pop	ebp
	ret	0
?getPacketSize@bf3_socket@@IBEIXZ ENDP			; bf3_socket::getPacketSize
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1noncopyable@noncopyable_@boost@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1noncopyable@noncopyable_@boost@@IAE@XZ PROC		; boost::noncopyable_::noncopyable::~noncopyable, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\noncopyable.h
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1noncopyable@noncopyable_@boost@@IAE@XZ ENDP		; boost::noncopyable_::noncopyable::~noncopyable
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0noncopyable@noncopyable_@boost@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0noncopyable@noncopyable_@boost@@IAE@XZ PROC		; boost::noncopyable_::noncopyable::noncopyable, COMDAT
; _this$ = ecx
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0noncopyable@noncopyable_@boost@@IAE@XZ ENDP		; boost::noncopyable_::noncopyable::noncopyable
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?dec@std@@YAAAVios_base@1@AAV21@@Z
_TEXT	SEGMENT
__Iosbase$ = 8						; size = 4
?dec@std@@YAAAVios_base@1@AAV21@@Z PROC			; std::dec, COMDAT
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ios
; Line 199
	push	ebp
	mov	ebp, esp
; Line 200
	push	3584					; 00000e00H
	push	512					; 00000200H
	mov	ecx, DWORD PTR __Iosbase$[ebp]
	call	DWORD PTR __imp_?setf@ios_base@std@@QAEHHH@Z
; Line 201
	mov	eax, DWORD PTR __Iosbase$[ebp]
; Line 202
	pop	ebp
	ret	0
?dec@std@@YAAAVios_base@1@AAV21@@Z ENDP			; std::dec
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\string
xdata$x	SEGMENT
__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0
__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$3
__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv293 = -116						; size = 4
tv292 = -112						; size = 4
tv291 = -105						; size = 1
tv392 = -104						; size = 8
tv290 = -96						; size = 8
tv289 = -88						; size = 4
tv288 = -84						; size = 4
tv287 = -80						; size = 4
tv286 = -73						; size = 1
tv138 = -72						; size = 4
tv136 = -68						; size = 4
tv326 = -64						; size = 8
$T358052 = -56						; size = 4
$T358051 = -52						; size = 4
$T358050 = -48						; size = 4
$T358049 = -44						; size = 4
$T358048 = -40						; size = 4
__Size$ = -36						; size = 4
__Ok$ = -32						; size = 8
__Pad$ = -24						; size = 4
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; Line 492
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 100				; 00000064H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 497
	mov	DWORD PTR __State$[ebp], 0
; Line 498
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 500
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv326[ebp], eax
	mov	DWORD PTR tv326[ebp+4], edx
	cmp	DWORD PTR tv326[ebp+4], 0
	jl	SHORT $LN17@operator@11
	jg	SHORT $LN25@operator@11
	cmp	DWORD PTR tv326[ebp], 0
	jbe	SHORT $LN17@operator@11
$LN25@operator@11:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	eax, DWORD PTR __Size$[ebp]
	jbe	SHORT $LN17@operator@11
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	sub	eax, DWORD PTR __Size$[ebp]
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN18@operator@11
$LN17@operator@11:
	mov	DWORD PTR tv136[ebp], 0
$LN18@operator@11:
	mov	eax, DWORD PTR tv136[ebp]
	mov	DWORD PTR __Pad$[ebp], eax
; Line 501
	mov	ecx, DWORD PTR __Ostr$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 503
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
	cmp	eax, -1
	jne	SHORT $LN14@operator@11
; Line 504
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 505
	jmp	$LN13@operator@11
$LN14@operator@11:
; Line 507
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 508
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN11@operator@11
; Line 509
	jmp	SHORT $LN10@operator@11
$LN9@operator@11:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Pad$[ebp], ecx
$LN10@operator@11:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN11@operator@11
; Line 511
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv286[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv287[ebp], eax
	movzx	eax, BYTE PTR tv286[ebp]
	push	eax
	mov	ecx, DWORD PTR tv287[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv288[ebp], eax
	mov	ecx, DWORD PTR tv288[ebp]
	mov	DWORD PTR $T358048[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358049[ebp], eax
	lea	edx, DWORD PTR $T358048[ebp]
	push	edx
	lea	eax, DWORD PTR $T358049[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@operator@11
; Line 513
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 514
	jmp	SHORT $LN11@operator@11
$LN7@operator@11:
; Line 517
	jmp	SHORT $LN9@operator@11
$LN11@operator@11:
; Line 518
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator@11
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv289[ebp], eax
	mov	eax, DWORD PTR __Size$[ebp]
	xor	ecx, ecx
	push	ecx
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	mov	DWORD PTR tv290[ebp], eax
	mov	DWORD PTR tv290[ebp+4], edx
	mov	edx, DWORD PTR __Size$[ebp]
	xor	eax, eax
	mov	DWORD PTR tv392[ebp], edx
	mov	DWORD PTR tv392[ebp+4], eax
	mov	ecx, DWORD PTR tv290[ebp]
	cmp	ecx, DWORD PTR tv392[ebp]
	jne	SHORT $LN26@operator@11
	mov	edx, DWORD PTR tv290[ebp+4]
	cmp	edx, DWORD PTR tv392[ebp+4]
	je	SHORT $LN6@operator@11
$LN26@operator@11:
; Line 519
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 520
	jmp	SHORT $LN5@operator@11
$LN6@operator@11:
; Line 521
	jmp	SHORT $LN4@operator@11
$LN3@operator@11:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Pad$[ebp], ecx
$LN4@operator@11:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN5@operator@11
; Line 523
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv291[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv292[ebp], eax
	movzx	eax, BYTE PTR tv291[ebp]
	push	eax
	mov	ecx, DWORD PTR tv292[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv293[ebp], eax
	mov	ecx, DWORD PTR tv293[ebp]
	mov	DWORD PTR $T358050[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358051[ebp], eax
	lea	edx, DWORD PTR $T358050[ebp]
	push	edx
	lea	eax, DWORD PTR $T358051[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@11
; Line 525
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 526
	jmp	SHORT $LN5@operator@11
$LN1@operator@11:
; Line 527
	jmp	SHORT $LN3@operator@11
$LN5@operator@11:
; Line 528
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	jmp	SHORT $LN19@operator@11
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0:
; Line 529
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN13@operator@11
	ret	0
$LN19@operator@11:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator@11:
; Line 532
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 533
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T358052[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T358052[ebp]
; Line 534
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\ostream
xdata$x	SEGMENT
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv289 = -132						; size = 4
tv288 = -128						; size = 4
tv287 = -121						; size = 1
tv286 = -120						; size = 8
tv285 = -112						; size = 4
tv284 = -108						; size = 4
tv283 = -104						; size = 4
tv282 = -97						; size = 1
tv137 = -96						; size = 4
tv135 = -92						; size = 8
tv337 = -84						; size = 8
tv325 = -76						; size = 8
$T358077 = -68						; size = 4
$T358076 = -64						; size = 4
$T358075 = -60						; size = 4
$T358074 = -56						; size = 4
$T358073 = -52						; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -40						; size = 8
__Count$ = -32						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; Line 767
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 116				; 00000074H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 770
	mov	DWORD PTR __State$[ebp], 0
; Line 771
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 773
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv325[ebp], eax
	mov	DWORD PTR tv325[ebp+4], edx
	cmp	DWORD PTR tv325[ebp+4], 0
	jl	SHORT $LN17@operator@12
	jg	SHORT $LN25@operator@12
	cmp	DWORD PTR tv325[ebp], 0
	jbe	SHORT $LN17@operator@12
$LN25@operator@12:
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	mov	DWORD PTR tv337[ebp], eax
	mov	DWORD PTR tv337[ebp+4], edx
	mov	eax, DWORD PTR tv337[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator@12
	jg	SHORT $LN26@operator@12
	mov	ecx, DWORD PTR tv337[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator@12
$LN26@operator@12:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator@12
$LN17@operator@12:
	mov	DWORD PTR tv135[ebp], 0
	mov	DWORD PTR tv135[ebp+4], 0
$LN18@operator@12:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 774
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 776
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBEPQ_Bool_struct@2@HXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator int std::_Bool_struct::*
	cmp	eax, -1
	jne	SHORT $LN14@operator@12
; Line 777
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
; Line 778
	jmp	$LN13@operator@12
$LN14@operator@12:
; Line 780
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 781
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	and	ecx, 448				; 000001c0H
	cmp	ecx, 64					; 00000040H
	je	$LN11@operator@12
; Line 782
	jmp	SHORT $LN10@operator@12
$LN9@operator@12:
	mov	edx, DWORD PTR __Pad$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR __Pad$[ebp+4]
	sbb	eax, 0
	mov	DWORD PTR __Pad$[ebp], edx
	mov	DWORD PTR __Pad$[ebp+4], eax
$LN10@operator@12:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	SHORT $LN11@operator@12
	jg	SHORT $LN27@operator@12
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN11@operator@12
$LN27@operator@12:
; Line 784
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv282[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv283[ebp], eax
	movzx	eax, BYTE PTR tv282[ebp]
	push	eax
	mov	ecx, DWORD PTR tv283[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv284[ebp], eax
	mov	ecx, DWORD PTR tv284[ebp]
	mov	DWORD PTR $T358073[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358074[ebp], eax
	lea	edx, DWORD PTR $T358073[ebp]
	push	edx
	lea	eax, DWORD PTR $T358074[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@operator@12
; Line 786
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 787
	jmp	SHORT $LN11@operator@12
$LN7@operator@12:
; Line 790
	jmp	$LN9@operator@12
$LN11@operator@12:
; Line 791
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator@12
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv285[ebp], eax
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv285[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	mov	DWORD PTR tv286[ebp], eax
	mov	DWORD PTR tv286[ebp+4], edx
	mov	eax, DWORD PTR tv286[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN28@operator@12
	mov	ecx, DWORD PTR tv286[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN6@operator@12
$LN28@operator@12:
; Line 792
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN6@operator@12:
; Line 794
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator@12
; Line 795
	jmp	SHORT $LN4@operator@12
$LN3@operator@12:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator@12:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	SHORT $LN5@operator@12
	jg	SHORT $LN29@operator@12
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	SHORT $LN5@operator@12
$LN29@operator@12:
; Line 797
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	mov	BYTE PTR tv287[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	DWORD PTR tv288[ebp], eax
	movzx	eax, BYTE PTR tv287[ebp]
	push	eax
	mov	ecx, DWORD PTR tv288[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	mov	DWORD PTR tv289[ebp], eax
	mov	ecx, DWORD PTR tv289[ebp]
	mov	DWORD PTR $T358075[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T358076[ebp], eax
	lea	edx, DWORD PTR $T358075[ebp]
	push	edx
	lea	eax, DWORD PTR $T358076[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator@12
; Line 799
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 800
	jmp	SHORT $LN5@operator@12
$LN1@operator@12:
; Line 801
	jmp	$LN3@operator@12
$LN5@operator@12:
; Line 802
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	jmp	SHORT $LN19@operator@12
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 803
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN13@operator@12
	ret	0
$LN19@operator@12:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator@12:
; Line 806
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
; Line 807
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T358077[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T358077[ebp]
; Line 808
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp
;	COMDAT ??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->, COMDAT
; _this$ = ecx
; File e:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@PAVconnection@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@PAVconnection@1@@Z PROC ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >, COMDAT
; _this$ = ecx
; File e:\library\dlib\dlib\smart_pointers\scoped_ptr.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0noncopyable@noncopyable_@boost@@IAE@XZ ; boost::noncopyable_::noncopyable::noncopyable
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@PAVconnection@1@@Z ENDP ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
; Function compile flags: /Odtp
;	COMDAT ??_Gconnection@dlib@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gconnection@dlib@@QAEPAXI@Z PROC			; dlib::connection::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1connection@dlib@@QAE@XZ		; dlib::connection::~connection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@198
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp_??3@YAXPAX@Z
	add	esp, 4
$LN1@scalar@198:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gconnection@dlib@@QAEPAXI@Z ENDP			; dlib::connection::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??R?$default_deleter@Vconnection@dlib@@@dlib@@QBEXPAVconnection@1@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
_this$ = -12						; size = 4
$T360659 = -8						; size = 4
$T360658 = -4						; size = 4
_item$ = 8						; size = 4
??R?$default_deleter@Vconnection@dlib@@@dlib@@QBEXPAVconnection@1@@Z PROC ; dlib::default_deleter<dlib::connection>::operator(), COMDAT
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	mov	eax, DWORD PTR _item$[ebp]
	mov	DWORD PTR $T360659[ebp], eax
	mov	ecx, DWORD PTR $T360659[ebp]
	mov	DWORD PTR $T360658[ebp], ecx
	cmp	DWORD PTR $T360658[ebp], 0
	je	SHORT $LN3@operator@18
	push	1
	mov	ecx, DWORD PTR $T360658[ebp]
	call	??_Gconnection@dlib@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN1@operator@18
$LN3@operator@18:
	mov	DWORD PTR tv68[ebp], 0
$LN1@operator@18:
; Line 22
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$default_deleter@Vconnection@dlib@@@dlib@@QBEXPAVconnection@1@@Z ENDP ; dlib::default_deleter<dlib::connection>::operator()
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?reset@?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAEXPAVconnection@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_del$152715 = -1					; size = 1
_p$ = 8							; size = 4
?reset@?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAEXPAVconnection@2@@Z PROC ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::reset, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@reset@2
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _del$152715[ebp]
	call	??R?$default_deleter@Vconnection@dlib@@@dlib@@QBEXPAVconnection@1@@Z ; dlib::default_deleter<dlib::connection>::operator()
$LN1@reset@2:
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	esp, ebp
	pop	ebp
	ret	4
?reset@?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAEXPAVconnection@2@@Z ENDP ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::reset
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??1?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_del$152711 = -1					; size = 1
??1?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@XZ PROC ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::~scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@scoped_ptr@5
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _del$152711[ebp]
	call	??R?$default_deleter@Vconnection@dlib@@@dlib@@QBEXPAVconnection@1@@Z ; dlib::default_deleter<dlib::connection>::operator()
$LN2@scoped_ptr@5:
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1noncopyable@noncopyable_@boost@@IAE@XZ ; boost::noncopyable_::noncopyable::~noncopyable
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@XZ ENDP ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::~scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
PUBLIC	__$ArrayPad$
PUBLIC	?_connect@bf3_socket@@IAEXPBDI@Z		; bf3_socket::_connect
;	COMDAT xdata$x
; File c:\work\daspirum\source\src\bf3_socket.cpp
xdata$x	SEGMENT
__unwindtable$?_connect@bf3_socket@@IAEXPBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_connect@bf3_socket@@IAEXPBDI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_connect@bf3_socket@@IAEXPBDI@Z$1
__ehfuncinfo$?_connect@bf3_socket@@IAEXPBDI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_connect@bf3_socket@@IAEXPBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_connect@bf3_socket@@IAEXPBDI@Z
_TEXT	SEGMENT
_this$ = -104						; size = 4
$T364583 = -100						; size = 28
$T149206 = -72						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_sAddress$ = 8						; size = 4
_uiPort$ = 12						; size = 4
?_connect@bf3_socket@@IAEXPBDI@Z PROC			; bf3_socket::_connect, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_connect@bf3_socket@@IAEXPBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	?reset@?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAEXPAVconnection@2@@Z ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::reset
; Line 58
	push	OFFSET $SG-8434
	lea	ecx, DWORD PTR $T364583[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _sAddress$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149206[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T364583[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR $T149206[ebp]
	push	edx
	movzx	eax, WORD PTR _uiPort$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	push	ecx
	call	?create_connection@dlib@@YAHAAV?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@1@GABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G1@Z ; dlib::create_connection
	add	esp, 20					; 00000014H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T149206[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T364583[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16388], 0
; Line 64
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_connect@bf3_socket@@IAEXPBDI@Z$0:
	lea	ecx, DWORD PTR $T364583[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?_connect@bf3_socket@@IAEXPBDI@Z$1:
	lea	ecx, DWORD PTR $T149206[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_connect@bf3_socket@@IAEXPBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_connect@bf3_socket@@IAEXPBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_connect@bf3_socket@@IAEXPBDI@Z ENDP			; bf3_socket::_connect
; Function compile flags: /Odtp
;	COMDAT ??1struct_response@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1struct_response@@QAE@XZ PROC				; struct_response::~struct_response, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5020				; 0000139cH
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	esp, ebp
	pop	ebp
	ret	0
??1struct_response@@QAE@XZ ENDP				; struct_response::~struct_response
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0struct_response@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0struct_response@@QAE@XZ PROC				; struct_response::struct_response, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5020				; 0000139cH
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0struct_response@@QAE@XZ ENDP				; struct_response::struct_response
_TEXT	ENDS
PUBLIC	??0bf3_socket@@IAE@XZ				; bf3_socket::bf3_socket
; Function compile flags: /Odtp
;	COMDAT ??0bf3_socket@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bf3_socket@@IAE@XZ PROC				; bf3_socket::bf3_socket, COMDAT
; _this$ = ecx
; Line 10
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??0?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@PAVconnection@1@@Z ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16396				; 0000400cH
	call	??0struct_response@@QAE@XZ
; Line 11
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0bf3_socket@@IAE@XZ ENDP				; bf3_socket::bf3_socket
PUBLIC	?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; bf3_socket::make_packet
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z$0
__ehfuncinfo$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z
_TEXT	SEGMENT
_this$ = -192						; size = 4
$T366452 = -188						; size = 4
$T366449 = -184						; size = 4
$T366448 = -180						; size = 4
_it$149400 = -176					; size = 4
_it$149304 = -172					; size = 4
_TotalSize$ = -168					; size = 4
_oss$ = -164						; size = 152
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_words$ = 12						; size = 4
?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z PROC ; bf3_socket::make_packet, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 180				; 000000b4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T366452[ebp], 0
; Line 73
	mov	DWORD PTR _TotalSize$[ebp], 4
; Line 74
	lea	eax, DWORD PTR _it$149304[ebp]
	push	eax
	mov	ecx, DWORD PTR _words$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	jmp	SHORT $LN6@make_packe
$LN5@make_packe:
	lea	ecx, DWORD PTR _it$149304[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN6@make_packe:
	lea	ecx, DWORD PTR $T366448[ebp]
	push	ecx
	mov	ecx, DWORD PTR _words$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$149304[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@make_packe
; Line 76
	mov	eax, DWORD PTR _TotalSize$[ebp]
	add	eax, 4
	mov	DWORD PTR _TotalSize$[ebp], eax
; Line 77
	lea	ecx, DWORD PTR _it$149304[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
	mov	ecx, eax
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	add	eax, DWORD PTR _TotalSize$[ebp]
	mov	DWORD PTR _TotalSize$[ebp], eax
; Line 78
	mov	ecx, DWORD PTR _TotalSize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _TotalSize$[ebp], ecx
; Line 79
	jmp	SHORT $LN5@make_packe
$LN4@make_packe:
; Line 80
	mov	edx, DWORD PTR _TotalSize$[ebp]
	add	edx, 8
	mov	DWORD PTR _TotalSize$[ebp], edx
; Line 82
	push	1
	push	2
	lea	ecx, DWORD PTR _oss$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16388]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16388], ecx
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16388]
	shr	ecx, 24					; 00000018H
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16388]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16388]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16388]
	and	ecx, 255				; 000000ffH
	push	ecx
	lea	edx, DWORD PTR _oss$[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 96
	mov	eax, DWORD PTR _TotalSize$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _TotalSize$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, DWORD PTR _TotalSize$[ebp]
	shr	edx, 8
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, DWORD PTR _TotalSize$[ebp]
	and	eax, 255				; 000000ffH
	push	eax
	lea	ecx, DWORD PTR _oss$[ebp]
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 102
	mov	ecx, DWORD PTR _words$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _words$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _words$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	shr	eax, 8
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, DWORD PTR _words$[ebp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	and	eax, 255				; 000000ffH
	push	eax
	lea	edx, DWORD PTR _oss$[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 105
	lea	eax, DWORD PTR _it$149400[ebp]
	push	eax
	mov	ecx, DWORD PTR _words$[ebp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	jmp	SHORT $LN3@make_packe
$LN2@make_packe:
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
$LN3@make_packe:
	lea	ecx, DWORD PTR $T366449[ebp]
	push	ecx
	mov	ecx, DWORD PTR _words$[ebp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	push	eax
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN1@make_packe
; Line 111
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
	mov	ecx, eax
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	push	eax
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
	mov	ecx, eax
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	push	eax
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
	mov	ecx, eax
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	shr	eax, 8
	and	eax, 255				; 000000ffH
	push	eax
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEPBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator->
	mov	ecx, eax
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	and	eax, 255				; 000000ffH
	push	eax
	lea	eax, DWORD PTR _oss$[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 114
	lea	ecx, DWORD PTR _it$149400[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QBEABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	push	eax
	lea	ecx, DWORD PTR _oss$[ebp]
	push	ecx
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
; Line 117
	push	0
	lea	edx, DWORD PTR _oss$[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
; Line 118
	jmp	$LN2@make_packe
$LN1@make_packe:
; Line 122
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _oss$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T366452[ebp]
	or	ecx, 1
	mov	DWORD PTR $T366452[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _oss$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 123
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z$0:
	lea	ecx, DWORD PTR _oss$[ebp]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__unwindfunclet$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z$1:
	mov	eax, DWORD PTR $T366452[ebp]
	and	eax, 1
	je	$LN11@make_packe
	and	DWORD PTR $T366452[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@make_packe:
	ret	0
__ehhandler$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ENDP ; bf3_socket::make_packet
PUBLIC	??1bf3_socket@@IAE@XZ				; bf3_socket::~bf3_socket
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1bf3_socket@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1bf3_socket@@IAE@XZ$0
__ehfuncinfo$??1bf3_socket@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1bf3_socket@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1bf3_socket@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1bf3_socket@@IAE@XZ PROC				; bf3_socket::~bf3_socket, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1bf3_socket@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 15
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??B?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBE_NXZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@bf3_socket
; Line 17
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
	mov	ecx, eax
	call	?shutdown@connection@dlib@@QAEHXZ	; dlib::connection::shutdown
; Line 18
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	?reset@?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAEXPAVconnection@2@@Z ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::reset
$LN2@bf3_socket:
; Line 20
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16396				; 0000400cH
	call	??1struct_response@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??1?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::~scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1bf3_socket@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	jmp	??1?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QAE@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::~scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >
__ehhandler$??1bf3_socket@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1bf3_socket@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1bf3_socket@@IAE@XZ ENDP				; bf3_socket::~bf3_socket
PUBLIC	__$ArrayPad$
PUBLIC	?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; bf3_socket::sendCMD
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$1
__ehfuncinfo$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -76						; size = 4
_temp$ = -72						; size = 28
$T149460 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_cmd$ = 8						; size = 16
?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z PROC ; bf3_socket::sendCMD, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 130
	lea	eax, DWORD PTR _cmd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?make_packet@bf3_socket@@AAE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@3@@Z ; bf3_socket::make_packet
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 137
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
	mov	ecx, eax
	call	?write@connection@dlib@@QAEJPBDJ@Z	; dlib::connection::write
	mov	esi, eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	esi, eax
	je	SHORT $LN1@sendCMD
; Line 138
	push	OFFSET $SG-8435
	lea	ecx, DWORD PTR $T149460[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	OFFSET __TI3?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
	lea	edx, DWORD PTR $T149460[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@sendCMD:
; Line 143
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN3@sendCMD:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?sendCMD@bf3_socket@@IAEXV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ENDP ; bf3_socket::sendCMD
PUBLIC	__$ArrayPad$
PUBLIC	?decodeWords@bf3_socket@@IAEXPBD@Z		; bf3_socket::decodeWords
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?decodeWords@bf3_socket@@IAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?decodeWords@bf3_socket@@IAEXPBD@Z$0
__ehfuncinfo$?decodeWords@bf3_socket@@IAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?decodeWords@bf3_socket@@IAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?decodeWords@bf3_socket@@IAEXPBD@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
_ucLength$149198 = -49					; size = 1
_usPointer$ = -48					; size = 2
$T149199 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_cucBuffer$ = 8						; size = 4
?decodeWords@bf3_socket@@IAEXPBD@Z PROC			; bf3_socket::decodeWords, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?decodeWords@bf3_socket@@IAEXPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 27
	xor	eax, eax
	mov	WORD PTR _usPointer$[ebp], ax
$LN3@decodeWord:
; Line 37
	mov	cx, WORD PTR _usPointer$[ebp]
	add	cx, 1
	mov	WORD PTR _usPointer$[ebp], cx
	movzx	edx, WORD PTR _usPointer$[ebp]
	mov	eax, DWORD PTR _cucBuffer$[ebp]
	mov	cl, BYTE PTR [eax+edx]
	mov	BYTE PTR _ucLength$149198[ebp], cl
; Line 38
	movzx	edx, WORD PTR _usPointer$[ebp]
	add	edx, 4
	mov	WORD PTR _usPointer$[ebp], dx
; Line 39
	movzx	eax, WORD PTR _usPointer$[ebp]
	add	eax, DWORD PTR _cucBuffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149199[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T149199[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEX$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149199[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 40
	movzx	edx, BYTE PTR _ucLength$149198[ebp]
	movzx	eax, WORD PTR _usPointer$[ebp]
	add	eax, edx
	mov	WORD PTR _usPointer$[ebp], ax
; Line 41
	movzx	ecx, WORD PTR _usPointer$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+21404]
	jb	SHORT $LN3@decodeWord
; Line 48
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?decodeWords@bf3_socket@@IAEXPBD@Z$0:
	lea	ecx, DWORD PTR $T149199[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?decodeWords@bf3_socket@@IAEXPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?decodeWords@bf3_socket@@IAEXPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?decodeWords@bf3_socket@@IAEXPBD@Z ENDP			; bf3_socket::decodeWords
PUBLIC	?_refresh@bf3_socket@@IAEXXZ			; bf3_socket::_refresh
; Function compile flags: /Odtp
;	COMDAT ?_refresh@bf3_socket@@IAEXXZ
_TEXT	SEGMENT
tv229 = -24						; size = 4
_this$ = -20						; size = 4
$T368459 = -16						; size = 4
_i$149477 = -12						; size = 4
_rawSeq$149475 = -8					; size = 2
_usBytesReceived$ = -4					; size = 2
?_refresh@bf3_socket@@IAEXXZ PROC			; bf3_socket::_refresh, COMDAT
; _this$ = ecx
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	xor	eax, eax
	mov	WORD PTR _usBytesReceived$[ebp], ax
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 21416				; 000053a8H
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
; Line 156
	push	1000					; 000003e8H
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
	mov	ecx, eax
	call	?read@connection@dlib@@QAEJPADJK@Z	; dlib::connection::read
	mov	WORD PTR _usBytesReceived$[ebp], ax
; Line 157
	movzx	edx, WORD PTR _usBytesReceived$[ebp]
	cmp	edx, 11					; 0000000bH
	jne	$LN9@refresh
; Line 160
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getUnsignedInt32@bf3_socket@@IBEIG@Z	; bf3_socket::getUnsignedInt32
	mov	WORD PTR _rawSeq$149475[ebp], ax
; Line 161
	movzx	eax, WORD PTR _rawSeq$149475[ebp]
	and	eax, 1073741823				; 3fffffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+21400], eax
; Line 162
	movzx	edx, WORD PTR _rawSeq$149475[ebp]
	and	edx, -2147483648			; 80000000H
	setne	al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+21412], al
; Line 163
	movzx	edx, WORD PTR _rawSeq$149475[ebp]
	and	edx, 1073741824				; 40000000H
	setne	al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+21413], al
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getPacketSize@bf3_socket@@IBEIXZ	; bf3_socket::getPacketSize
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+21404], eax
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+21408], ecx
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+21404], 16384		; 00004000H
	jbe	$LN7@refresh
; Line 171
	mov	DWORD PTR _i$149477[ebp], 0
	jmp	SHORT $LN6@refresh
$LN5@refresh:
	mov	ecx, DWORD PTR _i$149477[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$149477[ebp], ecx
$LN6@refresh:
	cmp	DWORD PTR _i$149477[ebp], 11		; 0000000bH
	jge	SHORT $LN4@refresh
; Line 172
	push	OFFSET ?dec@std@@YAAAVios_base@1@AAV21@@Z ; std::dec
	push	41					; 00000029H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$149477[ebp]
	movsx	eax, BYTE PTR [edx+1]
	push	eax
	push	OFFSET ?hex@std@@YAAAVios_base@1@AAV21@@Z ; std::hex
	push	40					; 00000028H
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@D@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z
	jmp	SHORT $LN5@refresh
$LN4@refresh:
; Line 173
	mov	edx, DWORD PTR __imp_?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z
	push	edx
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
; Line 174
	push	OFFSET $SG-8436
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T368459[ebp], esp
	push	OFFSET $SG-8437
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR tv229[ebp], eax
	call	?message@log@helper@@YAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; helper::log::message
	add	esp, 32					; 00000020H
; Line 177
	push	100					; 00000064H
	push	16384					; 00004000H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
	mov	ecx, eax
	call	?read@connection@dlib@@QAEJPADJK@Z	; dlib::connection::read
; Line 178
	jmp	$LN9@refresh
$LN7@refresh:
; Line 182
	push	10					; 0000000aH
	call	DWORD PTR __imp__Sleep@4
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+21404]
	sub	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+21404], edx
; Line 188
	push	1000					; 000003e8H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+21404]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16392				; 00004008H
	call	??C?$scoped_ptr@Vconnection@dlib@@U?$default_deleter@Vconnection@dlib@@@2@@dlib@@QBEPAVconnection@1@XZ ; dlib::scoped_ptr<dlib::connection,dlib::default_deleter<dlib::connection> >::operator->
	mov	ecx, eax
	call	?read@connection@dlib@@QAEJPADJK@Z	; dlib::connection::read
	mov	WORD PTR _usBytesReceived$[ebp], ax
; Line 189
	movzx	ecx, WORD PTR _usBytesReceived$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+21404]
	jne	SHORT $LN3@refresh
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?decodeWords@bf3_socket@@IAEXPBD@Z	; bf3_socket::decodeWords
; Line 201
	jmp	SHORT $LN9@refresh
$LN3@refresh:
; Line 203
	mov	ecx, DWORD PTR __imp_?endl@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@AAV21@@Z
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+21404]
	push	eax
	push	OFFSET $SG-8438
	movzx	ecx, WORD PTR _usBytesReceived$[ebp]
	push	ecx
	push	OFFSET $SG-8439
	mov	edx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@G@Z
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@I@Z
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
$LN9@refresh:
; Line 211
	mov	esp, ebp
	pop	ebp
	ret	0
?_refresh@bf3_socket@@IAEXXZ ENDP			; bf3_socket::_refresh
END
